[CacheEntities]
action.lookup = 1
action.lookup.filename = cached_entity.csv
alert.suppress = 0
alert.track = 0
counttype = number of events
disabled = 0
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 0
quantity = 2
relation = greater than
search = | `sync_cached_entity` 

[account]
action.lookup = 1
action.lookup.append = 1
action.lookup.filename = account.csv
alert.expires = 1s
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 0 0 1 * *
description = Populate account lookups with known values
dispatch.earliest_time = -1mon
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 2
relation = greater than
request.ui_dispatch_app = openintelligence_nli_app
request.ui_dispatch_view = search
search = | datamodel "Authentication" search | eval userId=coalesce('Authentication.user','Authentication.src_user'), name=userId, risk="unknown", type="unknown", scope=if(isnull('src_nt_domain'),"windows","unknown") | dedup userId | table name, userId, risk, type, scope

[CacheEvents]
action.lookup = 1
action.lookup.filename = cached_event.csv
alert.suppress = 0
alert.track = 0
counttype = number of events
disabled = 0
dispatch.earliest_time = -1h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 2
relation = greater than
request.ui_dispatch_view = search
search = | 	`meta_query("eventFull()")` \
|  eval result=split(result,"#"),entity=mvindex(result,0), event=mvindex(result,1),splunkObject=mvindex(result,2), type=mvindex(result,3),search=mvindex(result,4)\
| table entity, event, splunkObject, type, search
#search = | `sync_cached_event`

