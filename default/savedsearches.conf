# Used to sync rules entities with local cached
[CacheEntities]
action.lookup = 1
action.lookup.filename = cached_entity.csv
alert.suppress = 0
alert.track = 0
counttype = number of events
disabled = 0
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 0
quantity = 2
relation = greater than
search = | `sync_cached_entity` 

# Used to sync rules events with local cached
[CacheEvents]
action.lookup = 1
action.lookup.filename = cached_event.csv
alert.suppress = 0
alert.track = 0
counttype = number of events
disabled = 0
dispatch.earliest_time = -1h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 2
relation = greater than
request.ui_dispatch_view = search
search = | `sync_cached_event`

# Used for the initial population of the event to index mapping
[IndexForEvent]
action.lookup = 1
action.lookup.filename = indexForEvent.csv
alert.suppress = 0
alert.track = 0
counttype = number of events
#cron_schedule = 0 6 * * 1
disabled = 1
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = less than
request.ui_dispatch_app = openintelligence_nli_app
request.ui_dispatch_view = search
search = | inputlookup cached_event.csv | dedup event, splunkObject | table event, splunkObject, type | eval sourcetype=splunkObject | lookup IndexForSourcetype.csv sourcetype OUTPUT index |  eval index=if(isnull(index),"index=*",index),macro=event."_indexes",macro_value=if(type=="datamodel","`cim_".splunkObject."_indexes`",index) | table macro, macro_value

