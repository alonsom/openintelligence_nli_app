title,description,search
accel-storage-increase-by-partition,,"`collectd_index` object=""df-*"" (df_complex_used=* OR df_complex_free=* OR df_complex_reserved=*) |
stats earliest(df_complex_used) as lastused latest(df_complex_used) as used latest(df_complex_free) as free latest(df_complex_reserved) as reserved by host object"
Access - Access App Tracker - Lookup Gen,Maintains a list of Authentication app values and the first and last time they have been seen,"| tstats summariesonly=true min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Authentication"".""Authentication"" where ""Authentication.app""!=""unknown"" by ""Authentication.app"" | rename ""Authentication.app"" as ""app"" | inputlookup append=T ""access_app_tracker"" | stats min(""firstTime"") as ""firstTime"",max(""lastTime"") as ""lastTime"" by ""app"" | outputlookup override_if_empty=false ""access_app_tracker"" | stats count"
Access - Access Over Time,,| `tstats` count from datamodel=Authentication.Authentication by _time span=10m | timechart minspan=10m count
Access - Access Over Time By Action,,"| `tstats` count from datamodel=Authentication.Authentication by _time,Authentication.action span=10m | timechart minspan=10m useother=`useother` count by Authentication.action | `drop_dm_object_name(""Authentication"")`"
Access - Access Over Time By App,,"| `tstats` count from datamodel=Authentication.Authentication by _time,Authentication.app span=10m | timechart minspan=10m useother=`useother` count by Authentication.app"
Access - Account Deleted - Rule,Detects user and computer account deletion,"| from datamodel:""Change"".""Account_Management"" | where 'tag'=""delete"" | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",values(""result"") as ""signature"",values(""src"") as ""src"",values(""dest"") as ""dest"",count by ""src_user"",""user"" | where 'count'>0"
Access - Account Usage For Expired Identities,,"| tstats `summariesonly` max(_time) as _time,values(Authentication.dest) as dest from datamodel=Authentication.Authentication by Authentication.user | `drop_dm_object_name(""Authentication"")` | `get_identity4events(user)` | where isnotnull(user_endDate) | where _time>user_endDate | `uitime(user_endDate,""%m/%d/%Y %H:%M:%S"")` | fields _time,user,user_first,user_last,user_endDate,dest"
Access - All Authentication By Asset - Swimlane,,"| tstats `summariesonly` values(Authentication.action) as action,values(Authentication.app) as app,values(Authentication.src) as src,values(Authentication.dest) as dest,values(Authentication.user) as user,count from datamodel=Authentication.Authentication where $constraints$ by _time span=$span$"
Access - All Authentication By Identity - Swimlane,,"| tstats `summariesonly` values(Authentication.action) as action,values(Authentication.app) as app,values(Authentication.src) as src,values(Authentication.dest) as dest,values(Authentication.user) as user,count from datamodel=Authentication.Authentication where $constraints$ by _time span=$span$"
Access - Authentication Failures By Source - Model Gen,,"| tstats `summariesonly` count as failure from datamodel=Authentication.Authentication where Authentication.action=""failure"" by Authentication.src,_time span=1h | fit DensityFunction failure partial_fit=true dist=norm into app:failures_by_src_count_1h"
Access - Authentication Failures By Source Per Day - Model Gen,,"| tstats `summariesonly` count as failure from datamodel=Authentication.Authentication where Authentication.action=""failure"" by Authentication.src,_time span=1d | fit DensityFunction failure partial_fit=true dist=norm into app:failures_by_src_count_1d"
Access - Authentication Tracker - Lookup Gen,"Maintains a list of users that have authenticated to each system and the first, second to last, and last time they have been seen","| tstats `summariesonly` count from datamodel=Authentication.Authentication where Authentication.action=success Authentication.dest!=unknown Authentication.user!=unknown by _time,Authentication.dest,Authentication.user span=1s | `drop_dm_object_name(""Authentication"")` | stats min(_time) as firstTime,values(_time) as second2lastTime,max(_time) as lastTime by dest,user | eval dest=lower(dest),user=lower(user),_key=sha1(dest.""|"".user) | lookup access_tracker _key OUTPUTNEW firstTime as lookup_firstTime, second2lastTime as lookup_second2lastTime, lastTime as lookup_lastTime | eval firstTime=min(firstTime, lookup_firstTime),lastTime=max(lastTime, lookup_lastTime), second2lastTime=mvdedup(mvappend(second2lastTime,NULL,lookup_second2lastTime)), lastTime_vals=mvdedup(mvappend(lastTime,NULL,lookup_lastTime)) | eval `get_second2lastTime_meval(second2lastTime,lastTime_vals,lastTime)` | eventstats min(firstTime) as firstTime_user,max(lastTime) as lastTime_user by user  | fields - lastTime_vals, lookup_firstTime, lookup_lastTime, lookup_second2lastTime | outputlookup append=T key_field=_key access_tracker | stats count"
Access - Authentication Volume Per Day - Model Gen,,| tstats `summariesonly` count as current_count from datamodel=Authentication.Authentication by _time span=1d | fit DensityFunction current_count partial_fit=true dist=norm into app:authentication_count_1d
Access - Brute Force Access Behavior Detected - Rule,Detects excessive number of failed login attempts along with a successful attempt (this could indicate a successful brute force attack),"| from datamodel:""Authentication"".""Authentication"" | stats values(tag) as tag,values(app) as app,count(eval('action'==""failure"")) as failure,count(eval('action'==""success"")) as success by src | search success>0 | `mltk_apply_upper(""app:failures_by_src_count_1h"", ""high"", ""failure"")`"
Access - Brute Force Access Behavior Detected Over 1d - Rule,"Detects an excessive number of failed login attempts, along with a successful attempt, over a one day period (this could indicate a successful brute force attack)","| tstats `summariesonly` values(Authentication.app) as app,count from datamodel=Authentication.Authentication by Authentication.action,Authentication.src | `drop_dm_object_name(""Authentication"")` | eval success=if(action=""success"",count,0),failure=if(action=""failure"",count,0) | stats values(app) as app,sum(failure) as failure,sum(success) as success by src | where success > 0 | `mltk_apply_upper(""app:failures_by_src_count_1d"", ""medium"", ""failure"")`"
Access - Cleartext Password At Rest - Rule,Detects cleartext passwords being stored at rest (such as in the Unix passwd file),"| from datamodel:""Compute_Inventory"".""Cleartext_Passwords"" | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",values(""tag"") as ""tag"",count by ""dest"",""user"",""password"""
Access - Completely Inactive Account - Rule,Discovers accounts that are no longer used. Unused accounts should be disabled and are oftentimes used by attackers to gain unauthorized access.,"| from inputlookup:access_tracker | stats min(firstTime) as firstTime,max(lastTime) as lastTime by user | where ((now()-'lastTime')/86400)>90"
Access - Concurrent App Accesses - Rule,Alerts on concurrent access attempts to an app from different hosts. These are good indicators of shared passwords and potential misuse.,"| tstats `summariesonly` count from datamodel=Authentication.Authentication by _time,Authentication.app,Authentication.src,Authentication.user span=1s | `drop_dm_object_name(""Authentication"")` | eventstats dc(src) as src_count by app,user | search src_count>1 | sort 0 + _time | streamstats current=t window=2 earliest(_time) as previous_time,earliest(src) as previous_src by app,user | where (src!=previous_src) | eval time_diff=abs(_time-previous_time) | where time_diff<300"
Access - Default Account Usage - Rule,"Discovers use of default accounts (such as admin, administrator, etc.). Default accounts have default passwords and are therefore commonly targeted by attackers using brute force attack tools.","| from datamodel:""Authentication"".""Successful_Default_Authentication"" | stats max(""_time"") as ""lastTime"",values(""tag"") as ""tag"",count by ""dest"",""user"",""app"""
Access - Default Account Usage Over Time,,| `tstats` count from datamodel=Authentication.Authentication where nodename=Authentication.Default_Authentication Authentication.action=success by _time span=1h | timechart minspan=1h count
Access - Default Account Usage Over Time By App,,"| `tstats` count from datamodel=Authentication.Authentication where nodename=Authentication.Default_Authentication Authentication.action=success by _time,Authentication.app span=1h | timechart minspan=1h count by Authentication.app | `drop_dm_object_name(""Authentication"")`"
Access - Default Accounts At Rest - Rule,Discovers the presence of default accounts even if they are not being used. Default accounts should be disabled in order to prevent an attacker from using them to gain unauthorized access to remote hosts.,"| from datamodel:""Compute_Inventory"".""Default_Accounts"" | where NOT match('enabled', ""0|[Ff]|[Ff][Aa][Ll][Ss][Ee]"") AND NOT 'status'==""Degraded"" AND NOT like('shell',""%nologin"") AND NOT like('shell',""%false"") AND 'user'!=""root"" | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",values(""tag"") as ""tag"",count by ""dest"",""user"""
Access - Default Accounts In Use,,"| tstats `summariesonly` max(_time) as _time,values(Authentication.user_category) as user_category,dc(Authentication.dest) as dc(dest) from datamodel=Authentication.Authentication where Authentication.user_category=default by Authentication.user | `drop_dm_object_name(""Authentication"")` | sort 100 - _time | fields _time,user,user_category,dc(dest)"
Access - Default Local Accounts,,"| `useraccounts_tracker` | search user_category=default | stats max(lastTime) as _time,values(user_category) as user_category,dc(dest) as dc(dest) by user | sort 100 - _time | fields _time,user,user_category,dc(dest)"
Access - Distinct Apps,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Access - Distinct Destinations,,"| makeresults | eval current_count=10, historical_count=11, delta=-1"
Access - Distinct Sources,,"| makeresults | eval current_count=39, historical_count=38, delta=1"
Access - Distinct Users,,"| makeresults | eval current_count=324, historical_count=323, delta=1"
Access - Excessive Failed Logins - Rule,Detects excessive number of failed login attempts (this is likely a brute force attack),"| from datamodel:""Authentication"".""Failed_Authentication"" | stats values(""tag"") as ""tag"",dc(""user"") as ""user_count"",dc(""dest"") as ""dest_count"",count by ""app"",""src"" | where 'count'>=6"
Access - First Time Account Access,,"| from inputlookup:access_tracker | stats min(firstTime) as firstTime,values(dest) as dest by user | sort 100 - firstTime | `uitime(firstTime)` | fields dest user firstTime"
Access - First Time Account Access Over Time,,"| inputlookup append=T access_tracker where `tracker_trp(firstTime_user,firstTime_user)` | rename firstTime as _time | timechart count"
Access - Geographically Improbable Access - Summary Gen,,"| `tstats` min(_time),earliest(Authentication.app) from datamodel=Authentication.Authentication where Authentication.action=""success"" by Authentication.src,Authentication.user | eval psrsvd_ct_src_app='psrsvd_ct_Authentication.app',psrsvd_et_src_app='psrsvd_et_Authentication.app',psrsvd_ct_src_time='psrsvd_ct__time',psrsvd_nc_src_time='psrsvd_nc__time',psrsvd_nn_src_time='psrsvd_nn__time',psrsvd_vt_src_time='psrsvd_vt__time',src_time='_time',src_app='Authentication.app',user='Authentication.user',src='Authentication.src' | lookup asset_lookup_by_str asset as ""src"" OUTPUTNEW lat as ""src_lat"",long as ""src_long"",city as ""src_city"",country as ""src_country"" | lookup asset_lookup_by_cidr asset as ""src"" OUTPUTNEW lat as ""src_lat"",long as ""src_long"",city as ""src_city"",country as ""src_country"" | iplocation src | search (src_lat=* src_long=*) OR (lat=* lon=*) | eval src_lat=if(isnotnull(src_lat),src_lat,lat),src_long=if(isnotnull(src_long),src_long,lon),src_city=case(isnotnull(src_city),src_city,isnotnull(City),City,1=1,""unknown""),src_country=case(isnotnull(src_country),src_country,isnotnull(Country),Country,1=1,""unknown"") | stats earliest(src_app) as src_app,min(src_time) as src_time by src,src_lat,src_long,src_city,src_country,user | eval key=src.""@@"".src_time.""@@"".src_app.""@@"".src_lat.""@@"".src_long.""@@"".src_city.""@@"".src_country | eventstats dc(key) as key_count,values(key) as key by user | search key_count>1 | stats first(src_app) as src_app,first(src_time) as src_time,first(src_lat) as src_lat,first(src_long) as src_long,first(src_city) as src_city,first(src_country) as src_country by src,key,user | rex field=key ""^(?<dest>.+?)@@(?<dest_time>.+?)@@(?<dest_app>.+)@@(?<dest_lat>.+)@@(?<dest_long>.+)@@(?<dest_city>.+)@@(?<dest_country>.+)"" | where src!=dest | eval key=mvsort(mvappend(src.""->"".dest, NULL, dest.""->"".src)),units=""m"" | dedup key, user | `globedistance(src_lat,src_long,dest_lat,dest_long,units)` | eval speed=distance/(abs(src_time-dest_time+1)/3600) | where speed>=500 | fields user,src_time,src_app,src,src_lat,src_long,src_city,src_country,dest_time,dest_app,dest,dest_lat,dest_long,dest_city,dest_country,distance,speed | eval _time=now()"
Access - Geographically Improbable Access Detected - Rule,Alerts on access attempts that are improbable based on time and geography.,"index=gia_summary source=""Access - Geographically Improbable Access - Summary Gen"" | fields user,src_time,src_app,src,src_lat,src_long,src_city,src_country,dest_time,dest_app,dest,dest_lat,dest_long,dest_city,dest_country,distance,speed"
Access - High or Critical Priority Individual Logging into Infected Machine - Rule,Detects users with a high or critical priority logging into a malware infected machine,"| tstats `summariesonly` values(Authentication.user) as ""user"" from datamodel=Authentication.Authentication where earliest=-70m@m latest=+0s nodename=Authentication.Successful_Authentication (""Authentication.user_priority""=""high"" OR ""Authentication.user_priority""=""critical"") by ""Authentication.dest"" | rename ""Authentication.dest"" as ""dest"" | eval cs_key='dest' | join type=inner cs_key [| tstats summariesonly=false values(Malware_Attacks.signature) as ""signature"" from datamodel=Malware.Malware_Attacks where earliest=-1450m@m latest=+0s nodename=Malware_Attacks.Allowed_Malware  by ""Malware_Attacks.dest"" | rename ""Malware_Attacks.dest"" as ""dest"" | eval cs_key='dest']"
Access - Inactive Account Usage,,"| `inactive_account_usage(90,24)` | sort 100 - lastTime | `uitime(second2lastTime)` | `uitime(lastTime)` | fields user second2lastTime lastTime inactiveDays"
Access - Inactive Account Usage - Rule,Discovers previously inactive accounts that are now being used. This may be due to an attacker that successfully gained access to an account that was no longer being used.,"| `inactive_account_usage(""90"",""2"")` | `ctime(lastTime)` | fields + user,tag,inactiveDays,lastTime"
Access - Inactive Accounts,,| `inactive_accounts(90)` | sort 100 + lastTime | `uitime(lastTime)` | fields user lastTime inactiveDays
Access - Insecure Or Cleartext Authentication - Rule,Detects authentication requests that transmit the password over the network as cleartext (unencrypted),"| from datamodel:""Authentication"".""Insecure_Authentication"" | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",values(""tag"") as ""tag"",count by ""app"",""dest"""
Access - Notable Access Events,,`notable` | search security_domain=access | stats sum(count) as count by rule_name
Access - Number Of Default Accounts In Use,,"| makeresults | eval current_count=5, historical_count=5, delta=0"
Access - Privileged Account Usage Over Time,,| `tstats` count from datamodel=Authentication.Authentication where nodename=Authentication.Privileged_Authentication by _time span=1h | timechart span=1h count
Access - Privileged Accounts In Use,,"| tstats `summariesonly` values(Authentication.user_category) as user_category,dc(Authentication.dest) as dest_count,max(_time) as lastTime from datamodel=Authentication.Authentication where Authentication.user_category=privileged by Authentication.user | `drop_dm_object_name(""Authentication"")` | sort 100 - lastTime | `uitime(lastTime)`"
Access - Short-lived Account Detected - Rule,Detects when a account or credential is created and then removed a short time later. This may be an indication of malicious activities.,"| tstats `summariesonly` count from datamodel=Change.All_Changes where nodename=""All_Changes.Account_Management"" (All_Changes.action=""created"" OR All_Changes.action=""deleted"") by _time,All_Changes.dest,All_Changes.user span=1s | `drop_dm_object_name(""All_Changes"")` | streamstats range(_time) as delta,sum(count) as count by user,dest window=2 global=f | where count>1 AND delta<`useraccount_minimal_lifetime` | `uptime2string(delta,timestr)` | table user, dest, delta, timestr"
Access - Top Access By Destination,,"| tstats `summariesonly` count from datamodel=Authentication.Authentication by _time,Authentication.dest span=1h | `drop_dm_object_name(""Authentication"")` | stats sparkline(sum(count),1h) as sparkline,sum(count) as count by dest | sort - count"
Access - Top Access By Source,,"| tstats `summariesonly` count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h | `drop_dm_object_name(""Authentication"")` | stats sparkline(sum(count),1h) as sparkline,sum(count) as count by src | sort - count"
Access - Total Access Attempts,,"| makeresults | eval current_count=45976, historical_count=33515, delta=12461"
Access - Unique Access By App Count,,"| tstats `summariesonly` values(Authentication.app) as app,count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h | `drop_dm_object_name(""Authentication"")` | stats sparkline(sum(count),1h) as sparkline,dc(app) as app_count by src | sort - app_count"
Access - Unique Access By Destination Count,,"| tstats `summariesonly` values(Authentication.dest) as dest,count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h | `drop_dm_object_name(""Authentication"")` | stats sparkline(sum(count),1h) as sparkline,dc(dest) as dest_count by src | sort - dest_count"
Access - Unique Access By User Count,,"| tstats `summariesonly` values(Authentication.user) as user,count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h | `drop_dm_object_name(""Authentication"")` | stats sparkline(sum(count),1h) as sparkline,dc(user) as user_count by src | sort - user_count"
App State - Ports By System Count,,"| tstats `summariesonly` dc(Ports.dest) as dest_count from datamodel=Endpoint.Ports by Ports.transport,Ports.dest_port | `drop_dm_object_name(""Ports"")` | sort 100 - dest_count"
App State - Processes By System Count,,"| tstats `summariesonly` max(_time) as _time from datamodel=Endpoint.Processes by Processes.dest,Processes.process_name | `drop_dm_object_name(""Processes"")` | eventstats max(_time) as lastReportTime by dest | where _time==lastReportTime | stats dc(dest) as dest_count by process_name | sort 100 - dest_count"
App State - Services By System Count,,"| tstats `summariesonly` dc(Services.dest) as dest_count from datamodel=Endpoint.Services by Services.service | `drop_dm_object_name(""Services"")` | sort 100 - dest_count"
App State - Systems By Port Count,,"| tstats `summariesonly` dc(Ports.transport_dest_port) as port_count from datamodel=Endpoint.Ports by Ports.dest | `drop_dm_object_name(""Ports"")` | sort 10 - port_count"
App State - Systems By Process Count,,"| tstats `summariesonly` max(_time) as _time from datamodel=Endpoint.Processes by Processes.dest,Processes.process | `drop_dm_object_name(""Processes"")` | eventstats max(_time) as lastReportTime by dest | where _time==lastReportTime | stats dc(process) as process_count by dest | sort 10 - process_count"
App State - Systems By Service Count,,"| tstats `summariesonly` dc(Services.service) as service_count from datamodel=Endpoint.Services by Services.dest | `drop_dm_object_name(""Services"")` | sort 10 - service_count"
APT1 Detection,,index=asx threat_actors=APT1 | stats values(threat_actors) AS threat_actor values(source) as detections values(process) as processes values(user) as users values(_time) as time count by dest
Asset - Asset Ownership Unspecified - Rule,Alerts when there are assets that define a specific priority and category but do not have an assigned owner.,"| from datamodel:""Identity_Management"".""All_Assets"" | where isnotnull('priority') AND len('priority')>0 AND isnotnull('category') AND len('category')>0 AND (isnull('owner') OR len('owner')==0) AND (isnull('ip') OR len('ip')==0 OR mvcount('ip')==1) | stats count | where 'count'>0 | eval const_dedup_id=""const_dedup_id"""
Assets - Asset Information,,"| from datamodel:""Identity_Management"".""All_Assets"" | fields dns,nt_host,ip,mac,owner,priority,city,country,lat,long,bunit,category"
Assets - Assets By Business Unit,,"| pivot Identity_Management All_Assets count(All_Assets) AS ""count"" SPLITROW bunit AS ""bunit"" | sort - count"
Assets - Assets By Category,,"| pivot Identity_Management All_Assets count(All_Assets) AS ""count"" SPLITROW category AS ""category"" | sort - count"
Assets - Assets By Priority,,"| pivot Identity_Management All_Assets count(All_Assets) AS ""count"" SPLITROW priority AS ""priority"" | sort - count"
Audit - Active Risk Factors Usage - Telemetry Gen,Sends anonymous usage statistics pertaining to the usage of risk_factors,"| rest splunk_server=local count=0 /servicesNS/nobody/SplunkEnterpriseSecuritySuite/alerts/risk_factors | spath input=conditions | rename {}.field as fields_used | where disabled!=1 | eventstats count as total | mvexpand fields_used | eval fields_used=if(fields_used in (""control"", ""creator"", ""dest"", ""dest_bunit"", ""dest_category"", ""dest_priority"", ""governance"", ""risk_message"", ""risk_object_bunit"", ""risk_object_category"", ""risk_object_priority"", ""savedsearch_description"", ""src"", ""src_bunit"", ""src_category"", ""src_priority"", ""tag"", ""threat_object"", ""user"", ""user_bunit"", ""user_category"", ""user_priority"", ""risk_object_type"", ""risk_score"", ""threat_object_type"", ""risk_object"", ""user_watchlist""), fields_used, ""other"") | eventstats count by fields_used | makejson fields_used, count output=fields_info| stats values(fields_info) as fields_info, max(total) as total| makejson fields_info, total output=event | table event"
Audit - Active Users - Telemetry Gen,Sends anonymous usage statistics pertaining to the unique number of active users.,"| tstats summariesonly=false count from datamodel=Splunk_Audit.View_Activity where (View_Activity.app=""SplunkEnterpriseSecuritySuite"" OR View_Activity.app=""Splunk_DA-ESS*"") by View_Activity.user | join user [| rest splunk_server=local count=0 /servicesNS/nobody/search/authentication/users | rename title as user | table title,roles] | stats count(eval(roles=""admin"" or roles=""sc_admin"" or roles=""ess_admin"")) as data.admin_count,count(eval(roles=""ess_analyst"")) as data.analyst_count,count(eval(roles=""ess_user"")) as data.user_count,count as data.count | addinfo | eval version=""1.0"",begin=floor(info_min_time),end=floor(info_max_time) | makejson version(string),begin(int),end(int),data.* output=event | table event"
Audit - Annotations Usage - Telemetry Gen,Sends anonymous statistics pertaining to the usage of annotations in correlation searches.,"| from lookup:correlationsearches_lookup | spathannotations | fields annotations* | stats dc(annotations._all) as unique_annotation_count,dc(annotations._frameworks) as unique_framework_count,count(eval(isnotnull(annotations) AND annotations!=""{}"")) as searches_with_annotations,count(eval(isnotnull('annotations.mitre_attack'))) as searches_with_mitre_attack,count(eval(isnotnull('annotations.cis20'))) as searches_with_cis20,count(eval(isnotnull('annotations.kill_chain_phases'))) as searches_with_kill_chain_phases,count(eval(isnotnull('annotations.nist'))) as searches_with_nist | rename * as data.* | eval version=""1.0"" | makejson version(string),data.* output=event | table event"
Audit - Anomalous Audit Trail Activity Detected - Rule,"Discovers anomalous activity such as the deletion of or clearing of log files. Attackers oftentimes clear the log files in order to hide their actions, therefore, this may indicate that the system has been compromised.","| from datamodel:""Change"".""Auditing_Changes"" | where ('action'=""cleared"" OR 'action'=""stopped"") | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",count by ""dest"",""result"" | rename ""result"" as ""signature"""
Audit - Custom XS Saved Searches,,"| rest /services/saved/searches count=0 splunk_server=local | where match(search, ""\|\s*xs"") | stats count | where count>0"
Audit - Datamodel Distribution - Telemetry Gen,Sends anonymous statistics pertaining to the usage of datamodels.,"| from datamodel:Splunk_Audit.Datamodel_Acceleration | rename datamodel as data.datamodel,size as data.size | lookup update=true es_instrumentation_datamodels datamodel as data.datamodel OUTPUT datamodel as is_ok | appendpipe [where isnull(is_ok) | stats sum(data.size) as data.size | eval ""data.datamodel""=""other"",is_ok=""true""] | eventstats sum(data.size) as total_size | where isnotnull(is_ok) | eval version=""1.0"",""data.perc""=round('data.size'/total_size*100, 2) | makejson version(string),data.* output=event | table event"
Audit - Default Admin Search All Non-Internal,,"| rest /services/authorization/roles/admin splunk_server=* count=0 | eval is_asterisk=if(srchIndexesDefault == ""*"", 1, 0) | where is_asterisk=1 | fields splunk_server, srchIndexesDefault"
Audit - Default Admin Search Indexes,,"| rest /services/authorization/roles/admin splunk_server=* count=0 | where match(srchIndexesDefault, ""^(.*summary[0-9]?|notable)$"") | fields splunk_server, srchIndexesDefault | eval srchIndexesDefault=mvjoin(srchIndexesDefault, "","")"
Audit - Deprecated Threat Intelligence Manager Inputs Detected,,"| rest /services/configs/conf-inputs count=0 splunk_server=local | search title=""threat_intelligence_manager"" OR title=""threat_intelligence_manager://*""| stats values(title) AS title, count | where count > 0"
Audit - ES System Requirements,,"| rest splunk_server=* count=0 /services/server/info | eval numberOfVirtualCores=if(isnum(numberOfVirtualCores) AND numberOfVirtualCores>0,numberOfVirtualCores,null()) | where ((server_roles=""search_head"" AND (max(numberOfCores,numberOfVirtualCores)<16 OR physicalMemoryMB<32000)) OR (server_roles=""indexer"" AND (max(numberOfCores,numberOfVirtualCores)<16 OR physicalMemoryMB<32000))) | fields + splunk_server,server_roles,numberOfCores,numberOfVirtualCores,physicalMemoryMB"
Audit - ES View Activity Over Time,,"| `tstats` count from datamodel=Splunk_Audit.View_Activity where `es_context_only(""View_Activity"")` by _time,View_Activity.view span=1h | timechart span=1h useother=`useother` count by View_Activity.view | `drop_dm_object_name(""View_Activity"")`"
Audit - Event Count Over Time By Top 10 Hosts,,"| `tstats` count where index=* [| metadata type=hosts | `lower(host)` | sort 10 - totalCount | fields host | format] by _time,host | timechart useother=`useother` count by host"
Audit - Events Per Day - Lookup Gen,Maintains a list of event counts per day per index,"index=_internal source=*metrics.log* group=thruput name=idxSummary | bin _time span=1d | stats sum(ev) as count by _time,series | rename series as index | eval key=_time.""|"".index | outputlookup key_field=key licensing_epd | stats count"
Audit - Expected ES View Activity,,"| `expected_view_tracker(""-7d"")` | eval view=app.""|"".view | bin _time span=1d | `ctime(_time,""%m-%d-%Y"")` | chart sum(count) as count over view by _time | rex field=view ""(?<app>[^|]+)\|(?<view>.*)"" | fields app,view,*"
Audit - Expected Host Not Reporting - Rule,Discovers hosts that are longer reporting events but should be submitting log events. This rule is used to monitor hosts that you know should be providing a constant stream of logs in order to determine why the host has failed to provide log data.,"| `host_eventcount(30,2)` | search is_expected=true | `ctime(lastTime)` | fields + host,lastTime,is_expected,tag,dayDiff"
Audit - Extreme Search Content in ES,,"| rest /services/saved/searches count=0 splunk_server=local | where match(search, ""\|\s*xs"") | table eai:acl.app, title, search, cron_schedule, dispatch.earliest_time, dispatch.latest_time"
Audit - Failed Threatlist Downloads,,"index=_internal sourcetype=threatintel:download file=""threatlist.py:download_*"" NOT (status=""*starting"" OR status=""retrying download"" OR status=""threat list downloaded"" OR status=""Retrieved document from TAXII feed"" OR status=""Retrieved documents from TAXII feed"") | stats latest(status) as status, latest(_time) as _time by stanza, host, url"
Audit - Feature Usage - Telemetry Gen,Sends anonymous usage statistics pertaining to the number of view loads.,"| tstats summariesonly=false avg(View_Activity.spent) as data.avg_spent,count as data.count from datamodel=Splunk_Audit.View_Activity where (View_Activity.app=""SplunkEnterpriseSecuritySuite"" OR View_Activity.app=""Splunk_DA-ESS*"") by View_Activity.view | rename View_Activity.view as data.view | lookup local=true es_instrumentation_views view as data.view OUTPUT view as is_ok | appendpipe [where isnull(is_ok) | eval weighted_avg='data.avg_spent'*'data.count' | stats sum(weighted_avg) as weighted_avg,sum(data.count) as data.count | eval ""data.avg_spent""=weighted_avg/'data.count',""data.view""=""other"",is_ok=""true""] | where isnotnull(is_ok) | addinfo | eval version=""1.0"",begin=floor(info_min_time),end=floor(info_max_time),""data.avg_spent""=floor('data.avg_spent') | makejson version(string),begin(int),end(int),data.* output=event | table event"
Audit - Hosts By Last Report Time,,| `host_eventcount` | rename totalCount as count | `uitime(firstTime)` | `uitime(lastTime)` | table host is_expected firstTime lastTime count dayDiff
Audit - Identity Manager Usage - Telemetry Gen,Sends anonymous statistics pertaining to the usage of the Identity Manager.,"| rest splunk_server=local count=0 /services/data/inputs/identity_manager | lookup es_instrumentation_identity_managers input as title,target OUTPUT input as is_ootb | rex field=url ""lookup://(?<outputlookup>.*)"" | join type=left outputlookup [| rest splunk_server=local count=0 /services/saved/searches search=""search=*outputlookup*"" | rex max_match=5 field=search ""\|\s*outputlookup(?<outputlookup>.*?)(?:\||$)"" | eval outputlookup=split(outputlookup, "" ""),outputlookup=trim(mvfilter(!(outputlookup LIKE ""%=%"") AND trim(outputlookup)!=""""), ""\""""),savedsearch=title,spl=search | table outputlookup, savedsearch, spl] | stats count(eval(target=""asset"")) as asset_count,count(eval(target=""asset"" AND isnotnull(blacklist_fields) and blacklist_fields!="""")) as asset_blacklist_count,count(eval(target=""asset"" AND isnull(is_ootb))) as asset_custom_count,count(eval(target=""asset"" AND disabled=0)) as asset_enabled_count,count(eval(target=""asset"" AND match(spl, ""\|\s*ldapsearch""))) as asset_ldap_count,count(eval(target=""asset"" AND isnotnull(savedsearch))) as asset_search_count,count(eval(target=""identity"")) as identity_count,count(eval(target=""identity"" AND isnotnull(blacklist_fields) and blacklist_fields!="""")) as identity_blacklist_count,count(eval(target=""identity"" AND isnull(is_ootb))) as identity_custom_count,count(eval(target=""identity"" AND disabled=0)) as identity_enabled_count,count(eval(target=""identity"" AND match(spl, ""\|\s*ldapsearch""))) as identity_ldap_count,count(eval(target=""identity"" AND isnotnull(savedsearch))) as identity_search_count,count as total_count,count(eval(isnotnull(blacklist_fields) and blacklist_fields!="""")) as total_blacklist_count,count(eval(isnull(is_ootb))) as total_custom_count,count(eval(disabled=0)) as total_enabled_count,count(eval(match(spl, ""\|\s*ldapsearch""))) as total_ldap_count,count(eval(isnotnull(savedsearch))) as total_search_count | appendcols [| rest splunk_server=local count=0 /services/configs/conf-inputs/identity_manager search=""name=default"" | spath input=field_spec output=asset path=asset{}.name | spath input=field_spec output=identity path=identity{}.name | table asset, identity | transpose column_name=""target"" | rename ""row 1"" as field | mvexpand field | lookup es_instrumentation_identity_fields target,field OUTPUT field as is_ootb | stats count(eval(target=""asset"" AND isnull(is_ootb))) as asset_custom_fields,count(eval(target=""identity"" AND isnull(is_ootb))) as identity_custom_fields] | rename * as data.* | eval version=""1.0"" | makejson version(string),data.* output=event | table event"
Audit - Index Readiness,,"| tstats count as ev where (index=* OR index=_*) by index | append [|rest splunk_server=* count=0 /services/data/indexes | dedup title | eval index=title, ev=0 | fields index, ev] | stats sum(ev) as count by index | eval readiness=if(count>0, 1, 0) | outputlookup key_field=index index_readiness_lookup | stats count"
Audit - Investigation Collection ACLs,,"| rest splunk_server=local count=0 /servicesNS/nobody/search/storage/collections/config | rename title as collection,""eai:acl.perms.read"" as read_perms,""eai:acl.perms.write"" as write_perms | where 'collection' in (""investigative_canvas"", ""investigative_canvas_entries"", ""files"", ""investigation"", ""investigation_event"", ""investigation_attachment"") AND ('read_perms' in (""*"", ""ess_user"", ""ess_analyst"", ""pci_user"", ""pci_analyst"") OR 'write_perms' in (""*"", ""ess_user"", ""ess_analyst"", ""pci_user"", ""pci_analyst"")) | table collection,read_perms,write_perms"
Audit - Lookup Size For Sets,Intentionally disabled.,"| `lookup_tables_with_size` | `memtable_bytes_appendcol` | eval set=case(isnotnull(filename) and title IN (""asset_lookup_by_str"", ""asset_lookup_by_cidr"", ""asset_lookup_default_fields""),""asset"",isnotnull(filename) and title IN (""identity_lookup_expanded"", ""identity_lookup_default_fields""),""identity"",1=1,null()),exceeds=if(size>max_memtable_bytes,1,0) | stats values(title) as title,values(size) as size,first(max_memtable_bytes) as max_memtable_bytes,sum(exceeds) as exceeds,count by set | where NOT (exceeds=0 or exceeds=count)"
Audit - Lookup Size For SHC,,"| `lookup_tables_with_size` | `shc_mode_appendcol` | `content_length_appendcol` | where isnotnull(filename) and shc_mode!=""disabled"" and size>max_content_length | table title,filename,size,shc_mode,max_content_length"
Audit - Lookup Size For Special Matches,,"| `lookup_tables_with_size` | `memtable_bytes_appendcol` | where isnotnull(filename) and (match_type LIKE ""CIDR%"" or match_type LIKE ""WILDCARD%"") and size>max_memtable_bytes | table title,filename,match_type,size,max_memtable_bytes"
Audit - Lookup Usage - Telemetry Gen,Sends anonymous usage statistics pertaining to the size of lookups.,"| rest splunk_server=local count=0 /servicesNS/nobody/SplunkEnterpriseSecuritySuite/data/transforms/managed_lookups | rex field=endpoint "".*\/(?<transform>.+)"" | rename transform as data.transform, size as data.size, count as data.count | lookup local=true es_instrumentation_lookups transform as data.transform OUTPUT transform as is_ok | appendpipe [where isnull(is_ok) | stats median(data.size) as data.size,sum(data.count) as data.count | eval ""data.transform""=""other"",is_ok=""true""] | where isnotnull(is_ok) | eval version=""1.0"" | makejson version(string),data.* output=event | table event"
Audit - Managed Lookups Size - Summary Gen,,"| rest /services/data/transforms/managed_lookups splunk_server=local count=0 | fields title,count,size,eai:acl.app"
Audit - MLTK Errors - Last 7 days,"Event search of errors in the mlspl.log combined with failed searches that contain ""fit"" or ""apply"" in the search string",index=_* action=search (search=*fit* OR search=*apply*) info=failed | append [search index=_* source=*mlspl.log ERROR] | timechart count
Audit - MLTK Models,Table of Machine Learning Toolkit Models including details about the models.,"| rest /servicesNS/admin/Splunk_ML_Toolkit/mltk/list_models count=0 splunk_server=local | fields + mlspl:model_info.model_name, eai:appName, disabled, mlspl:model_info.algo_name, mlspl:model_info.params.dist, mlspl:model_info.split_by, updated | rename mlspl:model_info.model_name as ""Model_Name"", eai:appName as ""App_Name"",  ""mlspl:model_info.algo_name"" as ""Algorithm"", ""mlspl:model_info.params.dist"" as ""Distribution"", ""mlspl:model_info.split_by"" as ""Splitby"""
Audit - Notable Default Modify for Correlation Searches,,"| tstats dc(source) as count, values(source) as sources where (`get_notable_index`) AND source IN (""Access - Account Deleted - Rule"", ""Access - Brute Force Access Behavior Detected - Rule"", ""Access - Brute Force Access Behavior Detected Over 1d - Rule"", ""Access - Cleartext Password At Rest - Rule"", ""Access - Default Account Usage - Rule"", ""Access - Default Accounts At Rest - Rule"", ""Access - Geographically Improbable Access Detected - Rule"", ""Asset - Asset Ownership Unspecified - Rule"", ""Audit - Anomalous Audit Trail Activity Detected - Rule"", ""Audit - Potential Gap in Data - Rule"", ""Endpoint - Anomalous New Listening Port - Rule"", ""Endpoint - High Number of Hosts Not Updating Malware Signatures - Rule"", ""Endpoint - Host Sending Excessive Email - Rule"", ""Endpoint - Should Timesync Host Not Syncing - Rule"", ""Identity - High Volume Email Activity with Non-corporate Domains - Rule"", ""Identity - Web Uploads to Non-corporate Domains - Rule"", ""Network - Excessive HTTP Failure Responses - Rule"", ""Network - Substantial Increase in Port Activity (By Destination) - Rule"", ""Network - Substantial Increase in an Event - Rule"", ""Network - Unroutable Host Activity - Rule"") | where count > 0"
Audit - Personally Identifiable Information Detection - Rule,Detects personally identifiable information (PII) in log files. Some software will inadvertently provide sensitive information in log files and thus causing the information to be exposed unnecessarily to those reviewing the log files.,"NOT sourcetype=stash | `get_integer_seq` | lookup luhn_lite_lookup integer_seq OUTPUTNEW pii,pii_clean | eval pii_length=len(pii_clean) | lookup iin_lookup iin as pii_clean,length as pii_length OUTPUTNEW iin_issuer | search iin_issuer=* | `get_event_id` | fields + event_id,_raw,host,pii,iin_issuer | eval pii_hash=sha1(pii)"
Audit - Potential Gap in Data - Rule,Detects gaps caused by the failure of the search head. If saved searches do not execute then there may be gaps in summary data.,"| from datamodel:""Splunk_Audit"".""Scheduler_Activity"" | where 'status'=""success"" AND ('app' LIKE ""Splunk_%"" OR 'app' LIKE ""SA-%"" OR 'app' LIKE ""DA-%"" OR 'app'=""SplunkEnterpriseSecuritySuite"" OR 'app'=""SplunkPCIComplianceSuite"") | stats count | where 'count'=0 | eval const_dedup_id=""const_dedup_id"""
Audit - Risk Factors Impact On Risk - Telemetry Gen,Sends anonymous usage statistics pertaining to the usage of risk,"| tstats `summariesonly` count as risk_count, dc(All_Risk.risk_object) as distinct_risk_object_count, min(All_Risk.risk_score) as min_risk_score, max(All_Risk.risk_score) as max_risk_score, min(All_Risk.calculated_risk_score) as min_calc_risk_score, max(All_Risk.calculated_risk_score) as max_calc_risk_score, count(All_Risk.risk_factor_add_matched) as risk_factor_add_matches, count(All_Risk.risk_factor_mult_matched) as risk_factor_mult_matches, max(All_Risk.risk_factor_add) as max_risk_factor_add_matches, max(All_Risk.risk_factor_mult) as max_risk_factor_mult_matches, min(All_Risk.risk_factor_add) as min_risk_factor_add_matches, min(All_Risk.risk_factor_mult) as min_risk_factor_mult_matches from datamodel=Risk.All_Risk by All_Risk.risk_object_type | rename All_Risk.risk_object_type as risk_object_type | makejson distinct_risk_object_count, min_risk_score, max_risk_score, min_calc_risk_score, max_calc_risk_score, risk_factor_add_matches, risk_factor_mult_matches, risk_object_type,max_risk_factor_mult_matches, max_risk_factor_add_matches, min_risk_factor_add_matches, min_risk_factor_mult_matches output=risk_object_type_info | stats list(risk_object_type_info) as event by risk_object_type | table event"
Audit - Script Errors,,"| rest /services/admin/inputstatus/ModularInputs:modular%20input%20commands splunk_server=local count=0 | append [| rest /services/admin/inputstatus/ExecProcessor:exec%20commands splunk_server=local count=0] | fields inputs* | transpose | rex field=column ""inputs(?<script>\S+)(?:\s\((?<stanza>[^\(]+)\))?\.(?<key>(exit status description)|(time closed)|(time opened))"" | eval value=coalesce('row 1', 'row 2'), stanza=coalesce(stanza, ""default""), started=if(key==""time opened"", value, started), stopped=if(key==""time closed"", value, stopped) | rex field=value ""exited\s+with\s+code\s+(?<exit_status>\d+)"" | stats first(started) as started, first(stopped) as stopped, first(exit_status) as exit_status by script, stanza | eval errmsg=case(exit_status==""0"", null(), isnotnull(exit_status), ""A script exited abnormally with exit status: ""+exit_status, isnull(started) or isnotnull(stopped), ""A script is in an unknown state""), ignore=if(`script_error_msg_ignore`, 1, 0) | where isnotnull(errmsg) AND ignore=0"
Audit - Search Actions - Telemetry Gen,Sends anonymous statistics pertaining to the usage of custom alert actions.,"| rest splunk_server=local count=0 /servicesNS/nobody/SplunkEnterpriseSecuritySuite/saved/searches | search disabled=0 is_scheduled=1 | eval ""data.action""=split(actions, "","") | eventstats count as data.total_scheduled | stats first(data.total_scheduled) as data.total_scheduled,count as data.count by data.action | lookup local=true es_instrumentation_actions action as data.action OUTPUT action as is_ok | appendpipe [where isnull(is_ok) | stats first(data.total_scheduled) as data.total_scheduled,sum(data.count) as data.count | eval ""data.action""=""other"",is_ok=""true""] | where isnotnull(is_ok) | join data.action type=left [| rest splunk_server=local count=0 /servicesNS/nobody/SplunkEnterpriseSecuritySuite/alerts/alert_actions | rename title as data.action | eval ""data.is_adaptive_response""=if(isnotnull('param._cam'),1,0) | table data.action,data.is_adaptive_response] | eval version=""1.0"",""data.is_adaptive_response""=if(isnull('data.is_adaptive_response'),0,1) | makejson version(string),data.* output=event | table event"
Audit - Search Execution - Telemetry Gen,Sends anonymous usage statistics pertaining to the number of search executions.,"| tstats summariesonly=false values(nodename) as nodename,avg(Search_Activity.total_run_time) as data.avg_run_time,count as data.count from datamodel=Splunk_Audit.Search_Activity where Search_Activity.search_alias!=""*Data Model Summary Director"" by Search_Activity.search_alias | rename Search_Activity.search_alias as data.search_alias | where NOT match('data.search_alias', ""search\d+"") | lookup local=true es_instrumentation_searches search_alias as data.search_alias OUTPUT search_alias as is_ok | appendpipe [where isnull(is_ok) | eval weighted_avg='data.avg_run_time'*'data.count' | stats sum(weighted_avg) as weighted_avg,sum(data.count) as data.count | eval ""data.avg_run_time""=weighted_avg/'data.count',""data.search_alias""=""other"",is_ok=""true""] | where isnotnull(is_ok) | addinfo | eval version=""1.0"",begin=floor(info_min_time),end=floor(info_max_time),""data.is_realtime""=if(nodename==""Search_Activity.Realtime_Jobs"",1,0),""data.avg_run_time""=round('data.avg_run_time', 2) | makejson version(string),begin(int),end(int),data.* output=event | table event"
Audit - Searches Over Time By Type,,"| `tstats` count from datamodel=Splunk_Audit.Search_Activity where (Search_Activity.info=""granted"" OR (Search_Activity.info=""completed"" Search_Activity.search_type=""subsearch"")) by _time,Search_Activity.search_type span=10m | timechart minspan=10m count by Search_Activity.search_type"
Audit - Searches Over Time By User,,"| tstats `summariesonly` count from datamodel=Splunk_Audit.Search_Activity where (Search_Activity.info=""granted"" OR (Search_Activity.info=""completed"" Search_Activity.search_type=""subsearch"")) by Search_Activity.user | rename Search_Activity.* as * | sort 10 - count"
Audit - Searches using an MLTK Model,"Pass in a model name to get a list of searches that are using that model. 
eg. | savedsearch ""Audit - Searches using an MLTK Model"" model_name=failures_by_src_count_1h","| rest /services/configs/conf-savedsearches count=0 splunk_server=local | eval search=lower(search) | eval xssearch = if(match(search, ""$model_name$""),1,0) | search xssearch=1 | table  eai:acl.app, title, search, cron_schedule, dispatch.earliest_time, dispatch.latest_time"
Audit - Sourcetype Readiness - Lookup Gen,,"| metadata type=sourcetypes splunk_server=* index=* index=_* | eval readiness=if(lastTime > now() - 86400, 1, 0), update_time=now() | fields sourcetype, readiness, update_time | outputlookup key_field=sourcetype sourcetype_readiness_lookup | stats count"
Audit - Splunk Service Start Mode Anomalies,,"| tstats `summariesonly` max(_time) as _time,latest(Services.start_mode) as start_mode,latest(Services.status) as status from datamodel=Endpoint.Services where (Services.service=splunkd OR Services.service=splunk) by Services.dest | `drop_dm_object_name(""Services"")` | search start_mode!=auto | sort 100 + start_mode | fields _time,dest,start_mode,status"
Audit - Splunkd Process Utilization,,"| tstats `summariesonly` avg(Processes.cpu_load_percent) as avg_cpu_load,avg(Processes.mem_used) as avg_mem_used from datamodel=Endpoint.Processes where Processes.process=*splunkd* by Processes.dest | `drop_dm_object_name(""Processes"")` | eval ""avg_cpu_load (%)""=floor(avg_cpu_load) | eval ""avg_mem_used (MB)""=floor(avg_mem_used/1048576) | fields - avg_cpu_load,avg_mem_used | sort 100 - ""avg_cpu_load (%)"""
Audit - Threat Gen Searches Detected,,"| rest /services/saved/searches splunk_server=local count=0 | search action.threat_activity=1 OR title=""* - Threat Gen"" | stats values(title) AS title, count | where count > 0"
Audit - Top Searches By Run Time,,"| tstats `summariesonly` first(Search_Activity.search_alias) as search_alias,first(Search_Activity.search) as search,first(Search_Activity.total_run_time) as run_time,first(Search_Activity.user) as user from datamodel=Splunk_Audit.Search_Activity by Search_Activity.search_id | stats first(search_alias) as ""search alias"",min(run_time),avg(run_time),max(run_time),values(user) as user,count by search | eval ""min(run_time)""=round('min(run_time)', 1),""avg(run_time)""=round('avg(run_time)', 1),""max(run_time)""=round('max(run_time)', 1) | sort 500 - ""avg(run_time)"""
Audit - Untriaged Notable Events - Rule,Alerts when notable events have not been triaged,"`notable` | search (status_group=""New"" OR owner=""unassigned"") | stats count by rule_name | eventstats sum(count) as total"
Audit - Web Service Errors,,"| from datamodel:""Splunk_Audit"".""Web_Service_Errors"" | head 1000"
Bucket Copy Trigger,Triggers bucket copying,| archivebuckets
Change - Abnormally High Number of Endpoint Changes By User - Rule,"Detects an abnormally high number of endpoint changes by user account, as they relate to restarts, audits, filesystem, user, and registry modifications.","| `tstats` count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by Filesystem.user | eval change_type=""filesystem"",user='Filesystem.user' | `tstats` append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by Registry.user | eval change_type=if(isnull(change_type),""registry"",change_type),user=if(isnull(user),'Registry.user',user) | `tstats` append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by All_Changes.change_type,All_Changes.user | eval change_type=if(isnull(change_type),'All_Changes.change_type',change_type),user=if(isnull(user),'All_Changes.user',user) | stats count as change_count by change_type,user  | `mltk_apply_upper(""app:change_count_by_user_by_change_type_1d"", ""extreme"", ""change_count"")`"
Change - Account Lockouts,,"| tstats `summariesonly` count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.src,All_Changes.Account_Management.src_nt_domain,All_Changes.user | sort 100 - count | `drop_dm_object_name(""All_Changes"")` |  `drop_dm_object_name(""Account_Management"")`"
Change - Account Management By Source User,,"| tstats `summariesonly` count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management by All_Changes.Account_Management.src_user| `drop_dm_object_name(""All_Changes"")` | `drop_dm_object_name(""Account_Management"")` | sort 10 - count"
Change - Account Management Over Time By Action,,"| `tstats` count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management by _time,All_Changes.action span=10m | timechart minspan=10m useother=`useother` count by All_Changes.action | `drop_dm_object_name(""All_Changes"")`"
Change - All Changes By Asset - Swimlane,,"| `tstats` values(Filesystem.action),values(Filesystem.file_path),values(Filesystem.dest),values(Filesystem.user),count from datamodel=Endpoint.Filesystem where Filesystem.tag=change ($constraints$) by _time span=$span$ | `sistats_values_rename(Filesystem.action,action)` | `sistats_values_rename(Filesystem.file_path,object)` | `sistats_values_rename(Filesystem.dest,dest)` | `sistats_values_rename(Filesystem.user,user)` | eval object_category=""file"" | `tstats` append=T values(Registry.action),values(Registry.registry_key_name),values(Registry.dest),values(Registry.user),count from datamodel=Endpoint.Registry where Registry.tag=change ($constraints$) by _time span=$span$ | `sistats_values_rename(Registry.action,action)` | `sistats_values_rename(Registry.registry_key_name,object)` | `sistats_values_rename(Registry.dest,dest)` | `sistats_values_rename(Registry.user,user)` | eval object_category=if(isnull(object_category),""registry"",object_category) | `tstats` append=T values(All_Changes.action) as action,values(All_Changes.object) as object,values(All_Changes.src) as src,values(All_Changes.dest) as dest,values(All_Changes.user) as user,count from datamodel=Change.All_Changes where $constraints$ by _time,All_Changes.object_category span=$span$ | `sistats_values_rename(All_Changes.action,action)` | `sistats_values_rename(All_Changes.object,object)` | `sistats_values_rename(All_Changes.src,src)` | `sistats_values_rename(All_Changes.dest,dest)` | `sistats_values_rename(All_Changes.user,user)` | eval object_category=if(isnull(object_category),'All_Changes.object_category',object_category) | stats values(action) as action,values(object) as object,values(src) as src,values(dest) as dest,values(user) as user,count by _time,object_category | stats values(action) as action,values(object_category) as object_category,values(object) as object,values(src) as src,values(dest) as dest,values(user) as user,sum(count) as count by _time"
Change - All Changes By Identity - Swimlane,,"| `tstats` values(Filesystem.action),values(Filesystem.file_path),values(Filesystem.dest),values(Filesystem.user),count from datamodel=Endpoint.Filesystem where Filesystem.tag=change ($constraints$) by _time span=$span$ | `sistats_values_rename(Filesystem.action,action)` | `sistats_values_rename(Filesystem.file_path,object)` | `sistats_values_rename(Filesystem.dest,dest)` | `sistats_values_rename(Filesystem.user,user)` | eval object_category=""file"" | `tstats` append=T values(Registry.action),values(Registry.registry_key_name),values(Registry.dest),values(Registry.user),count from datamodel=Endpoint.Registry where Registry.tag=change ($constraints$) by _time span=$span$ | `sistats_values_rename(Registry.action,action)` | `sistats_values_rename(Registry.registry_key_name,object)` | `sistats_values_rename(Registry.dest,dest)` | `sistats_values_rename(Registry.user,user)` | eval object_category=if(isnull(object_category),""registry"",object_category) | `tstats` append=T values(All_Changes.action) as action,values(All_Changes.object) as object,values(All_Changes.src) as src,values(All_Changes.dest) as dest,values(All_Changes.user) as user,count from datamodel=Change.All_Changes where $constraints$ by _time,All_Changes.object_category span=$span$ | `sistats_values_rename(All_Changes.action,action)` | `sistats_values_rename(All_Changes.object,object)` | `sistats_values_rename(All_Changes.src,src)` | `sistats_values_rename(All_Changes.dest,dest)` | `sistats_values_rename(All_Changes.user,user)` | eval object_category=if(isnull(object_category),'All_Changes.object_category',object_category) | stats values(action) as action,values(object) as object,values(src) as src,values(dest) as dest,values(user) as user,count by _time,object_category | stats values(action) as action,values(object_category) as object_category,values(object) as object,values(src) as src,values(dest) as dest,values(user) as user,sum(count) as count by _time"
Change - Endpoint Changes By Action,,"| `tstats` count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by Filesystem.action | eval action='Filesystem.action' | `tstats` append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by Registry.action | eval action=if(isnull(action),'Registry.action',action) | `tstats` append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by All_Changes.action | eval action=if(isnull(action),'All_Changes.action',action) | timechart minspan=10m useother=`useother` count by action"
Change - Endpoint Changes By System,,"| `tstats` count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by _time,Filesystem.dest | eval object_category=""file"",dest='Filesystem.dest' | `tstats` append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by _time,Registry.dest | eval object_category=if(isnull(object_category),""registry"",object_category),dest=if(isnull(dest),'Registry.dest',dest) | `tstats` append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by _time,All_Changes.object_category,All_Changes.dest | eval object_category=if(isnull(object_category),'All_Changes.object_category',object_category),dest=if(isnull(dest),'All_Changes.dest',dest) | stats count by _time,object_category,dest | stats sparkline(sum(count)) as sparkline,values(object_category) as object_category,sum(count) as count by dest | sort 100 - count"
Change - Endpoint Changes By Type,,"| `tstats` count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" | eval object_category=""file"" | `tstats` append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" | eval object_category=if(isnull(object_category),""registry"",object_category) | `tstats` append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by All_Changes.object_category | eval object_category=if(isnull(object_category),'All_Changes.object_category',object_category) | stats count by object_category | sort 10 - count"
Change - Network Changes By Action,,"| `tstats` count from datamodel=Change.All_Changes where nodename=All_Changes.Network_Changes by _time,All_Changes.action span=10m | timechart minspan=10m useother=`useother` count by All_Changes.action | `drop_dm_object_name(""All_Changes"")`"
Change - Network Changes By Device,,"| tstats `summariesonly` count from datamodel=Change.All_Changes where nodename=All_Changes.Network_Changes by All_Changes.dvc | `drop_dm_object_name(""All_Changes"")`"
Change - Number Of Account Lockouts,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Change - Recent Account Management,,"| from datamodel:""Change"".""Account_Management"" | head 1000"
Change - Recent Endpoint Changes,,"| multisearch [| from datamodel:Endpoint.Filesystem | search tag=""change""] [| from datamodel:Endpoint.Registry | search tag=""change""] [| from datamodel:Change.Endpoint_Changes | search tag=""change""] | head 1000"
Change - Recent Network Changes,,"| from datamodel:""Change"".""Network_Changes"" | head 100"
Change - Top Account Management Events,,"| tstats `summariesonly` count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management by _time,All_Changes.action span=1h | `drop_dm_object_name(""All_Changes"")` | stats sparkline(sum(count),1h) as sparkline,sum(count) as count by action | sort 10 - count"
Change - Total Change Count By User By Change Type Per Day - Model Gen,,"| `tstats` count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by _time,Filesystem.user span=24h | eval change_type=""filesystem"",user='Filesystem.user' | `tstats` append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by _time,Registry.user span=24h | eval change_type=if(isnull(change_type),""registry"",change_type),user=if(isnull(user),'Registry.user',user) | `tstats` append=T count from datamodel=Change.All_Changes by _time,All_Changes.change_type,All_Changes.user span=24h | eval change_type=if(isnull(change_type),'All_Changes.change_type',change_type),user=if(isnull(user),'All_Changes.user',user) | stats count as change_count by _time,change_type,user | fit DensityFunction change_count by change_type partial_fit=true dist=norm into app:change_count_by_user_by_change_type_1d"
CIM - Data Model Acceleration Details,,"| `datamodel(""Splunk_Audit"", ""Datamodel_Acceleration"")` | `drop_dm_object_name(""Datamodel_Acceleration"")` | eval size(MB)=round(size/1048576,1) | eval retention(days)=retention/86400 | eval complete(%)=round(complete*100,1) | sort 100 + datamodel | fieldformat earliest=strftime(earliest, ""%m/%d/%Y %H:%M:%S"") | fieldformat latest=strftime(latest, ""%m/%d/%Y %H:%M:%S"") | fields datamodel,app,cron,retention(days),earliest,latest,is_inprogress,complete(%),size(MB),last_error"
CIM - Top Data Model Accelerations,Maintains a data cube of DMA statistics for use in Datamodel Audit view,"| `datamodel(""Splunk_Audit"", ""Datamodel_Acceleration"")` | `drop_dm_object_name(""Datamodel_Acceleration"")` | join type=outer last_sid [| rest splunk_server=local count=0 /services/search/jobs reportSearch=summarize* | rename sid as last_sid | fields last_sid,runDuration] | eval ""size(MB)""=round(size/1048576,1), ""retention(days)""=if(retention==0,""unlimited"",round(retention/86400,1)), ""complete(%)""=round(complete*100,1), ""runDuration(s)""=round(runDuration,1)"
CIM - Top Data Model Accelerations By Run Duration,,"| `datamodel(""Splunk_Audit"", ""Datamodel_Acceleration"")` | `drop_dm_object_name(""Datamodel_Acceleration"")` | join type=outer last_sid [| rest splunk_server=local count=0 /services/search/jobs reportSearch=summarize* | rename sid as last_sid | fields last_sid,runDuration] | sort 100 - runDuration | table datamodel,runDuration"
CIM - Top Data Model Accelerations By Size,,"| `datamodel(""Splunk_Audit"", ""Datamodel_Acceleration"")` | `drop_dm_object_name(""Datamodel_Acceleration"")` | eval size(MB)=size/1048576 | sort 100 - size | table datamodel,size(MB)"
CIM - Vendor Product Tracker - Lookup Gen,Maintains a list of vendor_product values and the first and list time they have been seen,"| tstats prestats=true summariesonly=true min(_time),max(_time) from datamodel=Malware.Malware_Attacks by Malware_Attacks.vendor_product | `drop_dm_object_name(""Malware_Attacks"")` | eval model=""Malware"" | tstats prestats=true summariesonly=true append=true min(_time),max(_time) from datamodel=Network_Traffic.All_Traffic by All_Traffic.vendor_product | `drop_dm_object_name(""All_Traffic"")` | eval model=if(isnull(model),""Network_Traffic"",model) | tstats prestats=true summariesonly=true append=true min(_time),max(_time) from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.vendor_product | `drop_dm_object_name(""IDS_Attacks"")` | eval model=if(isnull(model),""Intrusion_Detection"",model) | tstats prestats=true summariesonly=true append=true min(_time),max(_time) from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.vendor_product | `drop_dm_object_name(""Vulnerabilities"")` | eval model=if(isnull(model),""Vulnerabilities"",model) | stats min(_time) as firstTime,max(_time) as lastTime by vendor_product,model | inputlookup append=true cim_vendor_product_tracker | stats min(firstTime) as firstTime,max(lastTime) as lastTime by vendor_product,model | outputlookup override_if_empty=false cim_vendor_product_tracker | stats count"
Credential Dumping Attacks on Multiple Hosts,,index=asx mitre_id=t1003 | stats values(dest) as dest values(process) as process dc(dest) AS distinct_count_dest by source | where distinct_count_dest>1
Dashboard Views - Action History,,"| from datamodel:""Splunk_Audit"".""View_Activity"" | where 'user'!=""-"" | rename app as content.app, view as content.view, uri as content.uri"
Data Protection - Data Integrity Control By Index,,"| rest splunk_server=* count=0 /services/data/indexes search=""enableDataIntegrityControl=1"" | stats values(splunk_server) as splunk_server by title,enableDataIntegrityControl | rename title as index | fields index,splunk_server,enableDataIntegrityControl"
DNS - Errors,,"| makeresults | eval current_count=25631, historical_count=29380, delta=-3749"
DNS - Errors - Swimlane,,"| tstats `summariesonly` count, values(DNS.src) as src, values(DNS.query) as query, values(DNS.reply_code) as reply_code from datamodel=Network_Resolution.DNS where (DNS.reply_code!=""No error"" AND DNS.reply_code!=""NoError"") $constraints$ by _time span=$span$"
DNS - Messages,,"| makeresults | eval current_count=27755, historical_count=31831, delta=-4076"
DNS - Query Sources,,"| makeresults | eval current_count=20, historical_count=20, delta=0"
DNS - Unique Queries,,"| makeresults | eval current_count=462, historical_count=462, delta=0"
Email - Cloud Activity,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Email - Cloud Activity - Swimlane,,"| tstats `summariesonly` count, values(All_Email.src) as src, values(All_Email.src_user) as sender, values(All_Email.recipient) as recipient from datamodel=Email.All_Email where $constraints$ (`cloud_email_search(""All_Email.src_user"")` OR `cloud_email_search(""All_Email.recipient"")`) by _time span=$span$"
Email - Unique Receivers,,"| makeresults | eval current_count=59, historical_count=60, delta=-1"
Email - Unique Senders,,"| makeresults | eval current_count=14, historical_count=15, delta=-1"
Endpoint - Anomalous New Listening Port - Rule,Alerts a series of hosts begin listening on a new port within 24 hours. This may be an indication that the devices have been compromised or have had new (and potentially vulnerable) software installed.,"| from inputlookup:""listeningports_tracker"" | eval earliestQual=case(match(""-24h@h"", ""^\d""), tostring(""-24h@h""),  match(""-24h@h"", ""^([@\+-]){1}""), relative_time(time(), ""-24h@h""),  true(), time()) | eval latestQual=case(match(""+0s"", ""^\d""), tostring(""+0s""),  match(""+0s"", ""^([@\+-]){1}""), relative_time(time(), ""+0s""),  true(), time()) | where ('firstTime'>=earliestQual AND 'firstTime'<=latestQual) | fields - earliestQual, latestQual | stats dc(""dest"") as ""dest_count"" by ""transport"",""dest_port"" | where 'dest_count'>10"
Endpoint - Anomalous New Processes - Rule,Alerts when an anomalous number hosts are detected with a new process.,"| from inputlookup:""localprocesses_tracker"" | eval earliestQual=case(match(""-24h@h"", ""^\d""), tostring(""-24h@h""),  match(""-24h@h"", ""^([@\+-]){1}""), relative_time(time(), ""-24h@h""),  true(), time()) | eval latestQual=case(match(""+0s"", ""^\d""), tostring(""+0s""),  match(""+0s"", ""^([@\+-]){1}""), relative_time(time(), ""+0s""),  true(), time()) | where ('firstTime'>=earliestQual AND 'firstTime'<=latestQual) | fields - earliestQual, latestQual | stats dc(""dest"") as ""dest_count"",values(""dest"") as ""dest"" by ""process"" | where 'dest_count'>9"
Endpoint - Anomalous New Services - Rule,Alerts when an anomalous number hosts are detected with a new service.,"| from inputlookup:""services_tracker"" | eval earliestQual=case(match(""-24h@h"", ""^\d""), tostring(""-24h@h""),  match(""-24h@h"", ""^([@\+-]){1}""), relative_time(time(), ""-24h@h""),  true(), time()) | eval latestQual=case(match(""+0s"", ""^\d""), tostring(""+0s""),  match(""+0s"", ""^([@\+-]){1}""), relative_time(time(), ""+0s""),  true(), time()) | where ('firstTime'>=earliestQual AND 'firstTime'<=latestQual) | fields - earliestQual, latestQual | stats dc(""dest"") as ""dest_count"",values(""dest"") as ""dest"" by ""service"" | where 'dest_count'>9"
Endpoint - Anomalous User Account Creation - Rule,Alerts when a previously unseen account is created on multiple hosts.,"| from inputlookup:""useraccounts_tracker"" | eval earliestQual=case(match(""-24h@h"", ""^\d""), tostring(""-24h@h""),  match(""-24h@h"", ""^([@\+-]){1}""), relative_time(time(), ""-24h@h""),  true(), time()) | eval latestQual=case(match(""+0s"", ""^\d""), tostring(""+0s""),  match(""+0s"", ""^([@\+-]){1}""), relative_time(time(), ""+0s""),  true(), time()) | where ('firstTime'>=earliestQual AND 'firstTime'<=latestQual) | fields - earliestQual, latestQual | stats dc(""dest"") as ""dest_count"" by ""user"" | where 'dest_count'>3"
Endpoint - Application Errors,,tag=endpoint tag=application tag=error | `get_event_id` | `parse_event_id(event_id)` | head 1000
Endpoint - Average Infection Length - Summary Gen,,| from inputlookup:malware_tracker | eval dayDiff=(lastTime-firstTime)/86400 | stats avg(dayDiff) as avg_dayDiff by dest
Endpoint - Emails By Destination Count - Model Gen,,"| tstats summariesonly=false dc(All_Email.dest) as dest_count from datamodel=Email.All_Email where NOT All_Email.src_category=""email_servers"" by ""All_Email.src"",_time span=1h | fit DensityFunction dest_count partial_fit=true dist=norm into app:destinations_by_src_1h"
Endpoint - Emails By Source - Model Gen,,"| tstats summariesonly=false sum(All_Email.recipient_count) as recipient_count from datamodel=Email.All_Email where NOT All_Email.src_category=""email_servers"" by ""All_Email.src"",_time span=1h | fit DensityFunction recipient_count partial_fit=true dist=norm into app:recipients_by_src_1h"
Endpoint - High Number of Hosts Not Updating Malware Signatures - Rule,Alerts when a host not updating malware signatures has been discovered.  This host should be evaluated to determine why it is not updating malware signatures.,| `malware_operations_tracker` | rename time_signature_version as _time | `dayDiff(_time)` | search dayDiff>7
Endpoint - High Number Of Infected Hosts - Rule,Alerts when a high total number of infected hosts is discovered.,"| tstats summariesonly=true estdc(""Malware_Attacks.dest"") as ""infected_hosts"" from datamodel=""Malware"".""Malware_Attacks""    | where 'infected_hosts'>100 | eval const_dedup_id=""const_dedup_id"""
Endpoint - High Or Critical Priority Host With Malware - Rule,Alerts when an infection is noted on a host with high or critical priority.,"| from datamodel:""Malware"".""Malware_Attacks"" | where ('dest_priority'=""high"" OR 'dest_priority'=""critical"") | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",values(""dest_priority"") as ""dest_priority"",count by ""dest"",""signature"""
Endpoint - Host Sending Excessive Email - Rule,Alerts when an host not designated as an e-mail server sends excessive e-mail to one or more target hosts.,"| tstats `summariesonly` sum(All_Email.recipient_count) as recipient_count,dc(All_Email.dest) as dest_count from datamodel=Email.All_Email where NOT All_Email.src_category=""email_servers"" by ""All_Email.src"",_time span=1h | `drop_dm_object_name(""All_Email"")` | apply app:recipients_by_src_1h [|`get_qualitative_upper_threshold(high)`] | apply app:destinations_by_src_1h [|`get_qualitative_upper_threshold(high)`] | search ""IsOutlier(recipient_count)""=1 OR ""IsOutlier(dest_count)""=1"
Endpoint - Host With Excessive Number Of Listening Ports - Rule,Alerts when host has a high number of listening services. This may be an indication that the device is running services that are not necessary (such as a default installation of a server) or is not running a firewall.,"| tstats summariesonly=true dc(""Ports.transport_dest_port"") as ""port_count"" from datamodel=""Endpoint"".""Ports""  by ""Ports.dest"" | rename ""Ports.dest"" as ""dest"" | where 'port_count'>20"
Endpoint - Host With Excessive Number Of Processes - Rule,Alerts when host has a high number of processes. This may be due to an infection or a runaway process.,"| tstats `summariesonly` max(_time) as _time from datamodel=Endpoint.Processes by Processes.dest,Processes.process | `drop_dm_object_name(""Processes"")` | eventstats max(_time) as lastReportTime by dest | where _time==lastReportTime | stats dc(process) as process_count by dest | search process_count>200"
Endpoint - Host With Excessive Number Of Services - Rule,Alerts when host has a high number of services. This may be an indication that the device is running services that are not necessary (such as a default installation of a server).,"| tstats summariesonly=true dc(""Services.service"") as ""service_count"" from datamodel=""Endpoint"".""Services""  by ""Services.dest"" | rename ""Services.dest"" as ""dest"" | where 'service_count'>100"
Endpoint - Host With Multiple Infections - Rule,Alerts when a host with multiple infections is discovered.,"| tstats summariesonly=true dc(""Malware_Attacks.signature"") as ""infection_count"" from datamodel=""Malware"".""Malware_Attacks""   by ""Malware_Attacks.dest"" | rename ""Malware_Attacks.dest"" as ""dest"" | where 'infection_count'>1"
Endpoint - Index Time Delta 2 - Summary Gen,,"| tstats prestats=true count where index=* NOT sourcetype=stash [| makeresults | `make_ts_value(""-1d@d"",start)` | `make_ts_value(""+0s"",end)` | eval search=""(_indextime>="".start."" AND _indextime<="".end."")""] by _time,_indextime,host,sourcetype span=1s | eval timeDiff=abs(_time-_indextime) | fields - psrsvd* | where timeDiff>300 | stats min(timeDiff) as min_timeDiff,max(timeDiff) as max_timeDiff,sum(timeDiff) as sum_timeDiff,count by host,sourcetype | eval _time=now()"
Endpoint - Listening Ports Tracker - Lookup Gen,Maintains a list of all port and protocol combinations listening on each system and the first and last time they were seen,"| tstats summariesonly=true min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Endpoint"".""Ports"" by ""Ports.dest"",""Ports.transport"",""Ports.dest_port"" | rename ""Ports.dest"" as ""dest"",""Ports.transport"" as ""transport"",""Ports.dest_port"" as ""dest_port"" | eval _key=sha1('dest'.'transport'.'dest_port') | lookup ""listeningports_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" | eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') | fields - ""lookup_firstTime"",""lookup_lastTime"" | outputlookup append=T key_field=_key ""listeningports_tracker"" | stats count"
Endpoint - Local Processes Tracker - Lookup Gen,Maintains a list of all processes on each system and the first and last time they were seen,"| tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest,Processes.process | `drop_dm_object_name(""Processes"")` | rex field=process ""^\s*(?<process>[^\s]+)"" | eval _key=sha1(dest.""|"".process) | lookup localprocesses_tracker _key OUTPUTNEW firstTime as lookup_firstTime, lastTime as lookup_lastTime | eval firstTime=min(firstTime, lookup_firstTime),lastTime=max(lastTime, lookup_lastTime) | fields - lookup_firstTime, lookup_lastTime | outputlookup append=T key_field=_key localprocesses_tracker | stats count"
Endpoint - macOS Process Discrepancy - Rule,Fruitfly Detection we've had issues with before. Investigate hash befa9bfe488244c64db096522b4fad73fc01ea8c4cd0323f1cbdee81ba008271 on virusTotal for more details.,"sourcetype=osquery_results columns.cwd=""/Users*"" | rename columns.name as name, columns.cmdline as cmdline | eval dest=host, result=if(like(cmdline,""%"".name.""%""),""Normal"",""Evil"")| search result=""Evil"""
Endpoint - Malware Daily Count - Model Gen,,"| tstats `summariesonly` dc(Malware_Attacks.signature) as infection_count from datamodel=Malware.Malware_Attacks where earliest=-2d@d latest=-1d@d Malware_Attacks.action=allowed by Malware_Attacks.dest,_time span=1d | stats sum(infection_count) as current_count by _time | fit DensityFunction current_count partial_fit=true dist=norm into app:malware_infection_count_by_1d"
Endpoint - Malware Operations Tracker - Lookup Gen,,"| from datamodel:""Malware"".""Malware_Operations"" | search (product_version=* OR signature_version=*) | eval time_product_version=if(isnotnull(product_version),_time,null()) | eval time_signature_version=if(isnotnull(signature_version),_time,null()) | stats latest(_time) as _time,latest(dest_nt_domain) as dest_nt_domain,latest(time_product_version) as time_product_version,latest(product_version) as product_version,latest(time_signature_version) as time_signature_version,latest(signature_version) as signature_version,latest(vendor_product) as vendor_product by dest | lookup malware_operations_tracker dest OUTPUT time_product_version as time_product_version_old,product_version as product_version_old,time_signature_version as time_signature_version_old,signature_version as signature_version_old | eval product_version=case(isnull(product_version_old),product_version,isnull(product_version) OR time_product_version<time_product_version_old,product_version_old,product_version==product_version_old,product_version_old,product_version!=product_version_old,product_version) | eval time_product_version=case(isnull(product_version_old),time_product_version,isnull(product_version) OR time_product_version<time_product_version_old,time_product_version_old,product_version==product_version_old,time_product_version_old,product_version!=product_version_old,time_product_version) | eval signature_version=case(isnull(signature_version_old),signature_version,isnull(signature_version) OR time_signature_version<time_signature_version_old,signature_version_old,signature_version==signature_version_old,signature_version_old,signature_version!=signature_version_old,signature_version) | eval time_signature_version=case(isnull(signature_version_old),time_signature_version,isnull(signature_version) OR time_signature_version<time_signature_version_old,time_signature_version_old,signature_version==signature_version_old,time_signature_version_old,signature_version!=signature_version_old,time_signature_version) | fields - *old | inputlookup append=T malware_operations_tracker | eventstats latest(_time) as _time by dest | eventstats latest(dest_nt_domain) as dest_nt_domain by dest | eventstats latest(vendor_product) as vendor_product by dest | dedup dest | outputlookup override_if_empty=false malware_operations_tracker | stats count"
Endpoint - Malware Tracker - Lookup Gen,Maintains a list of all detections (regardless of status) for each system and the first and last time they were seen,"| tstats summariesonly=true min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Malware"".""Malware_Attacks"" by ""Malware_Attacks.dest"",""Malware_Attacks.signature"" | rename ""Malware_Attacks.dest"" as ""dest"",""Malware_Attacks.signature"" as ""signature"" | eval _key=sha1('dest'.'signature') | lookup ""malware_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" | eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') | fields - ""lookup_firstTime"",""lookup_lastTime"" | outputlookup append=T key_field=_key ""malware_tracker"" | stats count"
Endpoint - Multiple Primary Functions Detected - Rule,Multiple Primary Functions Detected,"| `primary_functions_tracker` | eval _time=lastTime | `hoursago(24)` | search is_primary=true | stats values(function) as function,dc(function) as function_count by dest | search function_count>1"
Endpoint - Old Malware Infection - Rule,Alerts when a host with an old infection is discovered (likely a re-infection).,"| tstats `summariesonly` max(_time) as lastTime from datamodel=Malware.Malware_Attacks by Malware_Attacks.signature,Malware_Attacks.dest | `drop_dm_object_name(""Malware_Attacks"")` | lookup local=true malware_tracker dest,signature OUTPUT firstTime | eval dayDiff=round((lastTime-firstTime)/86400,1) | search dayDiff>30"
Endpoint - Outbreak Observed - Rule,Alerts when a potential outbreak is observed based on newly infected systems all exhibiting the same infection,"| tstats summariesonly=true dc(""Malware_Attacks.dest"") as ""system_count"",values(""Malware_Attacks.tag"") as ""tag"" from datamodel=""Malware"".""Malware_Attacks""   by ""Malware_Attacks.signature""  | rename ""Malware_Attacks.signature"" as ""signature"" | where 'system_count'>10"
Endpoint - Prohibited Process Detection - Rule,Alerts when a service in the prohibited process list is detected.,"| from datamodel:""Endpoint"".""Processes"" | `get_interesting_processes` | search is_prohibited=true | `get_event_id` | fields + event_id,_raw,dest,process,note"
Endpoint - Prohibited Service Detection - Rule,Alerts when a service in the prohibited service list is detected.,"NOT sourcetype=stash `service` | `get_interesting_services` | search is_prohibited=true | `get_event_id` | fields + event_id,_raw,dest,service,note"
Endpoint - Ransomware Extensions Detected - Rule,Alerts when a suspected ransomware extension is detected in filesystem activity.,"| from datamodel:Change_Analysis.Filesystem_Changes | rex field=file_name ""^\S+(?<extension>\.\S+)$"" | lookup ransomware_extensions.csv Extensions AS extension | search Name=*| stats values(Name) as PotentialRansomwareVariants values(file_path) AS ""file_path"" by dest,extension"
Endpoint - Recurring Malware Infection - Rule,Alerts when a host has an infection that has been re-infected remove multiple times over multiple days.,"| tstats summariesonly=true dc(""Malware_Attacks.date"") as ""day_count"",count from datamodel=""Malware"".""Malware_Attacks""   by ""Malware_Attacks.dest"",""Malware_Attacks.signature"" | rename ""Malware_Attacks.dest"" as ""dest"",""Malware_Attacks.signature"" as ""signature"" | where 'day_count'>3"
Endpoint - Registry Tracker - Lookup Gen,"Maintains a list of registry paths, keys, and value information by system and the first and last time they were seen","sourcetype=WinRegistry | fillnull value="""" registry_value_name | stats min(_time) as firstTime,max(_time) as lastTime,values(registry_value_data) as registry_value_data by registry_path,registry_key_name,registry_value_name,dest | inputlookup append=T registry_tracker | stats min(firstTime) as firstTime,max(lastTime) as lastTime,values(registry_value_data) as registry_value_data by registry_path,registry_key_name,registry_value_name,dest | eval registry_value_name=mvfilter(registry_value_name!="""") | outputlookup override_if_empty=false registry_tracker | stats count"
Endpoint - SELinux Configurations By System,,"`selinuxconfig` | stats max(_time) as _time,latest(selinux) as selinux by dest | fields _time,dest,selinux"
Endpoint - Services Tracker - Lookup Gen,Maintains a list of all services (and the most recent startmode) for each system and the first and last time they were seen,"| tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime,latest(Services.start_mode) as start_mode from datamodel=Endpoint.Services by Services.dest,Services.service | `drop_dm_object_name(""Services"")` | inputlookup append=T services_tracker | sort 0 - lastTime | stats min(firstTime) as firstTime,max(lastTime) as lastTime,first(start_mode) as start_mode by dest,service | outputlookup override_if_empty=false services_tracker | stats count"
Endpoint - Should Timesync Host Not Syncing - Rule,"Detects when hosts that are required to synchronize their clocks have failed to do so. Time synchronization is important because it ensures that the event logs are stamped with the proper time. Additionally, this is required by some regulatory compliance standards (such as PCI).","| tstats `summariesonly` max(_time) as lastTime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=success by All_Performance.dest | rename All_Performance.dest as dest | `get_asset(dest)` | rename dest_* as * | `assets` | search should_timesync=true | stats max(lastTime) as lastTime,first(should_timesync) as should_timesync,values(asset) as dest by asset_id | where isnull(lastTime) | addinfo | eval hourDiff=floor((info_max_time-info_min_time)/3600) | fields dest,should_timesync,hourDiff"
Endpoint - SSHD Configurations By System,,"`sshdconfig` | stats max(_time) as _time,latest(sshd_protocol) as sshd_protocol by dest | fields _time,dest,sshd_protocol"
Endpoint - System Version Tracker - Lookup Gen,Maintains a list of the most recent operating system version for each system and the time we got this information,"| tstats summariesonly=false max(""_time"") as ""_time"" from datamodel=""Compute_Inventory"".""All_Inventory"" where nodename=""All_Inventory.OS"" by ""All_Inventory.dest"",""All_Inventory.OS.os"" | rename ""All_Inventory.dest"" as ""dest"",""All_Inventory.OS.os"" as ""os"" | inputlookup append=T ""system_version_tracker"" | stats max(""_time"") as ""_time"" by ""dest"",""os"" | outputlookup override_if_empty=false ""system_version_tracker"" | stats count"
Endpoint - Update Signature Reference - Lookup Gen,Maintains a list of all updates by vendor and the first and last time they were seen,"| from datamodel:""Updates"".""Updates"" | eval signature_zip=mvzip(signature,signature_id) | mvexpand signature_zip | rex field=signature_zip ""(?<signature>.*)\,(?<signature_id>.*)"" | stats min(_time) as firstTime,max(_time) as lastTime,latest(signature) as signature by signature_id,vendor_product | inputlookup append=T update_signature_reference_lookup | eval _time=lastTime | stats min(firstTime) as firstTime,max(lastTime) as lastTime,latest(signature) as signature by signature_id,vendor_product | outputlookup override_if_empty=false update_signature_reference_lookup | stats count"
Endpoint - User Account Tracker - Lookup Gen,Maintains a list of all local user accounts on each system and the first and last time they were seen,"| from datamodel:""Compute_Inventory"".""User"" | stats min(""_time"") as firstTime,max(""_time"") as lastTime,latest(""interactive"") as interactive by dest,user | eval _key=sha1(dest.user) | lookup useraccounts_tracker _key OUTPUTNEW firstTime as lookup_firstTime, lastTime as lookup_lastTime, interactive as lookup_interactive | eval lookup_lastTime=if(isnum(lookup_lastTime), lookup_lastTime, 0), firstTime=min(firstTime, lookup_firstTime), lastTime=max(lastTime, lookup_lastTime), interactive=if(lastTime>lookup_lastTime, interactive, lookup_interactive) | fields firstTime,lastTime,dest,user,interactive | outputlookup key_field=_key append=T useraccounts_tracker| stats count"
Errors in the last 24 hours,,error OR failed OR severe OR ( sourcetype=access_* ( 404 OR 500 OR 503 ) )
Errors in the last hour,,error OR failed OR severe OR ( sourcetype=access_* ( 404 OR 500 OR 503 ) )
ESCU - Abnormally High AWS Instances Launched by User - MLTK - Rule,This search looks for CloudTrail events where a user successfully launches an abnormally high number of instances.,"`cloudtrail` eventName=RunInstances errorCode=success `abnormally_high_aws_instances_launched_by_user___mltk_filter` | bucket span=10m _time  | stats count as instances_launched by _time src_user  | apply ec2_excessive_runinstances_v1  | rename ""IsOutlier(instances_launched)"" as isOutlier  | where isOutlier=1"
ESCU - Abnormally High AWS Instances Launched by User - Rule,This search looks for CloudTrail events where a user successfully launches an abnormally high number of instances.,"`cloudtrail` eventName=RunInstances errorCode=success | bucket span=10m _time | stats count AS instances_launched by _time userName | eventstats avg(instances_launched) as total_launched_avg, stdev(instances_launched) as total_launched_stdev | eval threshold_value = 4 | eval isOutlier=if(instances_launched > total_launched_avg+(total_launched_stdev * threshold_value), 1, 0) | search isOutlier=1 AND _time >= relative_time(now(), ""-10m@m"") | eval num_standard_deviations_away = round(abs(instances_launched - total_launched_avg) / total_launched_stdev, 2) | table _time, userName, instances_launched, num_standard_deviations_away, total_launched_avg, total_launched_stdev | `abnormally_high_aws_instances_launched_by_user_filter`"
ESCU - Abnormally High AWS Instances Terminated by User - MLTK - Rule,This search looks for CloudTrail events where a user successfully terminates an abnormally high number of instances.,"`cloudtrail` eventName=TerminateInstances errorCode=success `abnormally_high_aws_instances_terminated_by_user___mltk_filter` | bucket span=10m _time  | stats count as instances_terminated by _time src_user  | apply ec2_excessive_terminateinstances_v1  | rename ""IsOutlier(instances_terminated)"" as isOutlier  | where isOutlier=1"
ESCU - Abnormally High AWS Instances Terminated by User - Rule,This search looks for CloudTrail events where an abnormally high number of instances were successfully terminated by a user in a 10-minute window,"`cloudtrail` eventName=TerminateInstances errorCode=success | bucket span=10m _time | stats count AS instances_terminated by _time userName | eventstats avg(instances_terminated) as total_terminations_avg, stdev(instances_terminated) as total_terminations_stdev | eval threshold_value = 4 | eval isOutlier=if(instances_terminated > total_terminations_avg+(total_terminations_stdev * threshold_value), 1, 0) | search isOutlier=1 AND _time >= relative_time(now(), ""-10m@m"")| eval num_standard_deviations_away = round(abs(instances_terminated - total_terminations_avg) / total_terminations_stdev, 2) |table _time, userName, instances_terminated, num_standard_deviations_away, total_terminations_avg, total_terminations_stdev | `abnormally_high_aws_instances_terminated_by_user_filter`"
ESCU - Access LSASS Memory for Dump Creation - Rule,Detect memory dumping of the LSASS process.,"`sysmon` EventCode=10 TargetImage=*lsass.exe CallTrace=*dbgcore.dll* OR CallTrace=*dbghelp.dll* | stats count min(_time) as firstTime max(_time) as lastTime by Computer, TargetImage, TargetProcessId, SourceImage, SourceProcessId | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `access_lsass_memory_for_dump_creation_filter`"
ESCU - Add Prohibited Processes to Enterprise Security,"This search takes the existing interesting process table from ES, filters out any existing additions added by ESCU and then updates the table with processes identified by ESCU that should be prohibited on your endpoints.",| inputlookup interesting_processes_lookup | search note!=ESCU* | inputlookup append=T prohibitedProcesses_lookup | fillnull value=* dest dest_pci_domain | fillnull value=false is_required is_secure | fillnull value=true is_prohibited | outputlookup interesting_processes_lookup | stats count
ESCU - All backup logs for host - Response Task,Retrieve the backup logs for the last 2 weeks for a specific host in order to investigate why backups are not completing successfully.,"| search sourcetype=""netbackup_logs"" dest=$dest$"
ESCU - Amazon EKS Kubernetes activity by src ip - Response Task,"This search provides investigation data about requests via user agent, authentication request URI, verb and cluster name data against Kubernetes cluster from a specific IP address","sourcetype=""aws:cloudwatchlogs:eks"" sourceIPs{}=$src_ip$|rename sourceIPs{} as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(user.username) values(requestURI) values(verb) values(userAgent) by source annotations.authorization.k8s.io/decision src_ip"
ESCU - Amazon EKS Kubernetes cluster scan detection - Rule,"This search provides information of unauthenticated requests via user agent, and authentication data against Kubernetes cluster in AWS","`aws_cloudwatchlogs_eks` ""user.username""=""system:anonymous"" userAgent!=""AWS Security Scanner"" | rename sourceIPs{} as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(responseStatus.reason) values(source) as cluster_name values(responseStatus.code) values(userAgent) as http_user_agent values(verb) values(requestURI) by src_ip user.username user.groups{} | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` |`amazon_eks_kubernetes_cluster_scan_detection_filter`"
ESCU - Amazon EKS Kubernetes Pod scan detection - Rule,This search provides detection information on unauthenticated requests against Kubernetes' Pods API,"`aws_cloudwatchlogs_eks` ""user.username""=""system:anonymous"" verb=list objectRef.resource=pods requestURI=""/api/v1/pods"" | rename source as cluster_name sourceIPs{} as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(responseStatus.reason) values(responseStatus.code) values(userAgent) values(verb) values(requestURI) by src_ip cluster_name user.username user.groups{} | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `amazon_eks_kubernetes_pod_scan_detection_filter`"
ESCU - Attempt To Add Certificate To Untrusted Store - Rule,Attempt to add a certificate to the certificate store,"| tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=*certutil* (Processes.process=*-addstore*) by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)` | `attempt_to_add_certificate_to_untrusted_store_filter`"
ESCU - Attempt To Set Default PowerShell Execution Policy To Unrestricted or Bypass - Rule,"Monitor for changes of the ExecutionPolicy in the registry to the values ""unrestricted"" or ""bypass,"" which allows the execution of malicious scripts.",| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=*Software\\Microsoft\\Powershell\\1\\ShellIds\\Microsoft.PowerShell* Registry.registry_key_name=ExecutionPolicy (Registry.registry_value_name=Unrestricted OR Registry.registry_value_name=Bypass) by Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.dest | `drop_dm_object_name(Registry)` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | `attempt_to_set_default_powershell_execution_policy_to_unrestricted_or_bypass_filter`
ESCU - Attempt To Stop Security Service - Rule,This search looks for attempts to stop security-related services on the endpoint.,"| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = net.exe OR  Processes.process_name = sc.exe) Processes.process=""* stop *"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` |lookup security_services_lookup service as process OUTPUTNEW category, description | search category=security | `attempt_to_stop_security_service_filter`"
ESCU - Attempted Credential Dump From Registry via Reg exe - Rule,Monitor for execution of reg.exe with parameters specifying an export of keys that contain hashed credentials that attackers may try to crack offline.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=reg.exe OR Processes.process_name=cmd.exe) Processes.process=*save* (Processes.process=*HKEY_LOCAL_MACHINE\\Security* OR Processes.process=*HKEY_LOCAL_MACHINE\\SAM* OR Processes.process=*HKEY_LOCAL_MACHINE\\System* OR Processes.process=*HKLM\\Security* OR Processes.process=*HKLM\\System* OR Processes.process=*HKLM\\SAM*) by Processes.user Processes.process_name Processes.process Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `attempted_credential_dump_from_registry_via_reg_exe_filter`
ESCU - AWS Cloud Provisioning From Previously Unseen City - Rule,"This search looks for AWS provisioning activities from previously unseen cities.  Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""","`cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search City=* [search `cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search City=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by City | eval newCity=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newCity=1 | table City] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, City, eventName, errorCode | `aws_cloud_provisioning_from_previously_unseen_city_filter`"
ESCU - AWS Cloud Provisioning From Previously Unseen Country - Rule,"This search looks for AWS provisioning activities from previously unseen countries. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""","`cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Country=* [search `cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Country=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by Country | eval newCountry=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newCountry=1 | table Country] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, Country, eventName, errorCode | `aws_cloud_provisioning_from_previously_unseen_country_filter`"
ESCU - AWS Cloud Provisioning From Previously Unseen IP Address - Rule,"This search looks for AWS provisioning activities from previously unseen IP addresses. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""","`cloudtrail` (eventName=Run* OR eventName=Create*) [search `cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Country=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress | eval newIP=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newIP=1 | table sourceIPAddress] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, eventName, errorCode | `aws_cloud_provisioning_from_previously_unseen_ip_address_filter`"
ESCU - AWS Cloud Provisioning From Previously Unseen Region - Rule,"This search looks for AWS provisioning activities from previously unseen regions. Region in this context is similar to a state in the United States. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""","`cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Region=* [search `cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Region=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by Region | eval newRegion=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newRegion=1 | table Region] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, Region, eventName, errorCode | `aws_cloud_provisioning_from_previously_unseen_region_filter`"
ESCU - AWS Cross Account Activity From Previously Unseen Account - Rule,This search looks for AssumeRole events where an IAM role in a different account is requested for the first time.,"`cloudtrail` eventName=AssumeRole | spath output=requestingAccountId path=userIdentity.accountId | spath output=requestedAccountId path=resources{}.accountId | search requestingAccountId=* | where requestingAccountId != requestedAccountId | inputlookup append=t previously_seen_aws_cross_account_activity | multireport [| stats min(eval(coalesce(firstTime, _time))) as firstTime max(eval(coalesce(lastTime, _time))) as lastTime by requestingAccountId, requestedAccountId | outputlookup previously_seen_aws_cross_account_activity | where fact=fiction] [| eventstats min(eval(coalesce(firstTime, _time))) as firstTime, max(eval(coalesce(lastTime, _time))) as lastTime by requestingAccountId, requestedAccountId | where firstTime >= relative_time(now(), ""-70m@m"") AND isnotnull(_time) | spath output=accessKeyId path=responseElements.credentials.accessKeyId | spath output=requestingARN path=resources{}.ARN | stats values(awsRegion) as awsRegion values(firstTime) as firstTime values(lastTime) as lastTime values(sharedEventID) as sharedEventID, values(requestingARN) as src_user, values(responseElements.assumedRoleUser.arn) as dest_user by _time, requestingAccountId, requestedAccountId, accessKeyId] | table _time, firstTime, lastTime, src_user, requestingAccountId, dest_user, requestedAccountId, awsRegion, accessKeyId, sharedEventID | `aws_cross_account_activity_from_previously_unseen_account_filter`"
ESCU - aws detect attach to role policy - Rule,This search provides detection of an user attaching itself to a different role trust policy. This can be used for lateral movement and escalation of privileges.,`aws_cloudwatchlogs_eks` attach policy| spath requestParameters.policyArn | table sourceIPAddress user_access_key userIdentity.arn userIdentity.sessionContext.sessionIssuer.arn eventName errorCode errorMessage status action requestParameters.policyArn userIdentity.sessionContext.attributes.mfaAuthenticated userIdentity.sessionContext.attributes.creationDate  | `aws_detect_attach_to_role_policy_filter`
ESCU - aws detect permanent key creation - Rule,This search provides detection of accounts creating permanent keys. Permanent keys are not created by default and they are only needed for programmatic calls. Creation of Permanent key is an important event to monitor.,"`aws_cloudwatchlogs_eks` CreateAccessKey | spath eventName | search eventName=CreateAccessKey ""userIdentity.type""=IAMUser | table sourceIPAddress userName userIdentity.type userAgent action status responseElements.accessKey.createDate responseElements.accessKey.status responseElements.accessKey.accessKeyId |`aws_detect_permanent_key_creation_filter`"
ESCU - aws detect role creation - Rule,This search provides detection of role creation by IAM users. Role creation is an event by itself if user is creating a new role with trust policies different than the available in AWS and it can be used for lateral movement and escalation of privileges.,`aws_cloudwatchlogs_eks` event_name=CreateRole action=created userIdentity.type=AssumedRole requestParameters.description=Allows* | table sourceIPAddress userIdentity.principalId userIdentity.arn action event_name awsRegion http_user_agent mfa_auth msg requestParameters.roleName requestParameters.description responseElements.role.arn responseElements.role.createDate | `aws_detect_role_creation_filter`
ESCU - aws detect sts assume role abuse - Rule,This search provides detection of suspicious use of sts:AssumeRole. These tokens can be created on the go and used by attackers to move laterally and escalate privileges.,`cloudtrail` user_type=AssumedRole userIdentity.sessionContext.sessionIssuer.type=Role | table sourceIPAddress userIdentity.arn user_agent user_access_key status action requestParameters.roleName responseElements.role.roleName responseElements.role.createDate | `aws_detect_sts_assume_role_abuse_filter`
ESCU - aws detect sts get session token abuse - Rule,This search provides detection of suspicious use of sts:GetSessionToken. These tokens can be created on the go and used by attackers to move laterally and escalate privileges.,`aws_cloudwatchlogs_eks` ASIA  userIdentity.type=IAMUser| spath eventName | search eventName=GetSessionToken | table sourceIPAddress eventTime userIdentity.arn userName userAgent user_type status region | `aws_detect_sts_get_session_token_abuse_filter`
ESCU - AWS EKS Kubernetes cluster sensitive object access - Rule,This search provides information on Kubernetes accounts accessing sensitve objects such as configmaps or secrets,`aws_cloudwatchlogs_eks` objectRef.resource=secrets OR configmaps sourceIPs{}!=::1 sourceIPs{}!=127.0.0.1  |table sourceIPs{} user.username user.groups{} objectRef.resource objectRef.namespace objectRef.name annotations.authorization.k8s.io/reason |dedup user.username user.groups{} |`aws_eks_kubernetes_cluster_sensitive_object_access_filter`
ESCU - AWS Investigate Security Hub alerts by dest - Response Task,This search retrieves the all the alerts created by AWS Security Hub for a specific dest(instance_id).,"sourcetype=""aws:securityhub:firehose"" ""findings{}.Resources{}.Type""=AWSEC2Instance | rex field=findings{}.Resources{}.Id .*instance/(?<instance>.*) | search instance = $dest$ |rename findings{}.* as * | rename Remediation.Recommendation.Text as Remediation |  table instance Title ProductArn Description FirstObservedAt RecordState Remediation"
ESCU - AWS Investigate User Activities By AccessKeyId - Response Task,"This search retrieves the times, ARN, source IPs, AWS regions, event names, and the result of the event for specific credentials.","| search sourcetype=aws:cloudtrail userIdentity.accessKeyId=$accessKeyId$ | spath output=user path=userIdentity.arn  | rename sourceIPAddress as src_ip | table _time, user, src_ip, awsRegion, eventName, errorCode, errorMessage"
ESCU - AWS Investigate User Activities By ARN - Response Task,"This search lists all the logged CloudTrail activities by a specific user ARN and will create a table containing the source of the user, the region of the activity, the name and type of the event, the action taken, and all the user's identity information.",| search sourcetype=aws:cloudtrail userIdentity.arn=$user$ | table _time userIdentity.type userIdentity.userName userIdentity.arn aws_account_id src awsRegion eventName eventType
ESCU - AWS Investigate User Activities By Source User - Response Task,"This search retrieves the times, ARN, source IPs, AWS regions, event names, and the result of the event for specific ARNs.","| search sourcetype=aws:cloudtrail userIdentity.arn=$src_user$ | spath output=user path=userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, awsRegion, eventName, errorCode, errorMessage"
ESCU - AWS Network Access Control List Created with All Open Ports - Rule,The search looks for CloudTrail events to detect if any network ACLs were created with all the ports open to a specified CIDR.,`cloudtrail` eventName=CreateNetworkAclEntry | mvexpand requestParameters | mvexpand responseElements | search requestParameters.portRange.from=1024 requestParameters.portRange.to=65535 requestParameters.ruleAction=allow | rename userIdentity.arn as arn | rename requestParameters.networkAclId as networkAclId | table _time aws_account_id src userName arn networkAclId requestParameters.* responseElements.* | `aws_network_access_control_list_created_with_all_open_ports_filter`
ESCU - AWS Network Access Control List Deleted - Rule,"Enforcing network-access controls is one of the defensive mechanisms used by cloud administrators to restrict access to a cloud instance. After the attacker has gained control of the AWS console by compromising an admin account, they can delete a network ACL and gain access to the instance from anywhere. This search will query the CloudTrail logs to detect users deleting network ACLs.",`cloudtrail` eventName=DeleteNetworkAcl|rename userIdentity.arn as arn  | stats count min(_time) as firstTime max(_time) as lastTime values(errorMessage) values(errorCode) values(userAgent) values(userIdentity.*) by src userName arn eventName | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `aws_network_access_control_list_deleted_filter`
ESCU - AWS Network ACL Details from ID - Response Task,This search queries AWS description logs and returns all the information about a specific network ACL via network ACL ID,| search sourcetype=aws:description id=$networkAclId$ | table id account_id vpc_id network_acl_entries{}.*
ESCU - AWS Network Interface details via resourceId - Response Task,"This search queries AWS configuration logs and returns the information about a specific network interface via network interface ID. The information will include the ARN of the network interface, its relationships with other AWS resources, the public and the private IP associated with the network interface.",| search sourcetype=aws:config resourceId=$resourceId$ | table _time ARN relationships{}.resourceType relationships{}.name relationships{}.resourceId  configuration.privateIpAddresses{}.privateIpAddress configuration.privateIpAddresses{}.association.publicIp
ESCU - AWS S3 Bucket details via bucketName - Response Task,"This search queries AWS configuration logs and returns the information about a specific S3 bucket. The information returned includes the time the S3 bucket was created, the resource ID, the region it belongs to, the value of action performed, AWS account ID, and configuration values of the access-control lists associated with the bucket.",| search sourcetype=aws:config resourceId=$bucketName$ | table resourceCreationTime resourceId awsRegion action aws_account_id supplementaryConfiguration.AccessControlList
ESCU - Baseline of API Calls per User ARN,"This search establishes, on a per-hour basis, the average and the standard deviation of the number of API calls made by each user. Also recorded is the number of data points for each user. This table is then outputted to a lookup file to allow the detection search to operate quickly.","`cloudtrail` eventType=AwsApiCall | spath output=arn path=userIdentity.arn | bucket _time span=1h | stats count as apiCalls by _time, arn | stats count(apiCalls) as numDataPoints, latest(apiCalls) as latestCount, avg(apiCalls) as avgApiCalls, stdev(apiCalls) as stdevApiCalls by arn | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup api_call_by_user_baseline | stats count"
ESCU - Baseline of blocked outbound traffic from AWS,"This search establishes, on a per-hour basis, the average and the standard deviation of the number of outbound connections blocked in your VPC flow logs by each source IP address (IP address of your EC2 instances). Also recorded is the number of data points for each source IP. This table outputs to a lookup file to allow the detection search to operate quickly.","`cloudwatchlogs_vpcflow` action=blocked (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16) | bucket _time span=1h | stats count as numberOfBlockedConnections by _time, src_ip | stats count(numberOfBlockedConnections) as numDataPoints, latest(numberOfBlockedConnections) as latestCount, avg(numberOfBlockedConnections) as avgBlockedConnections, stdev(numberOfBlockedConnections) as stdevBlockedConnections by src_ip | table src_ip, latestCount, numDataPoints, avgBlockedConnections, stdevBlockedConnections | outputlookup baseline_blocked_outbound_connections | stats count"
ESCU - Baseline of Command Line Length - MLTK,"This search is used to build a Machine Learning Toolkit (MLTK) model to characterize the length of the command lines observed for each user in the environment. By default, the search uses the last 30 days of data to build the model. The model created by this search is then used in the corresponding detection search, which identifies outliers in the length of the command line.",| tstats `security_content_summariesonly` count min(_time) as start_time max(_time) as end_time FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process | `drop_dm_object_name(Processes)` | search user!=unknown | `security_content_ctime(start_time)`| `security_content_ctime(end_time)`| eval processlen=len(process) | fit DensityFunction processlen by user into cmdline_pdfmodel
ESCU - Baseline of DNS Query Length - MLTK,"This search is used to build a Machine Learning Toolkit (MLTK) model to characterize the length of the DNS queries for each DNS record type observed in the environment. By default, the search uses the last 30 days of data to build the model. The model created by this search is then used in the corresponding detection search, which uses it to identify outliers in the length of the DNS query.","| tstats `security_content_summariesonly` count from datamodel=Network_Resolution by DNS.query DNS.record_type | search DNS.record_type=* | `drop_dm_object_name(""DNS"")` | eval query_length = len(query) | fit DensityFunction query_length by record_type into dns_query_pdfmodel"
ESCU - Baseline of Excessive AWS Instances Launched by User - MLTK,"This search is used to build a Machine Learning Toolkit (MLTK) model for how many RunInstances users do in the environment. By default, the search uses the last 90 days of data to build the model. The model created by this search is then used in the corresponding detection search, which identifies subsequent outliers in the number of RunInstances performed by a user in a small time window.",`cloudtrail` eventName=RunInstances errorCode=success `ec2_excessive_runinstances_mltk_input_filter` | bucket span=10m _time | stats count as instances_launched by _time src_user | fit DensityFunction instances_launched threshold=0.0005 into ec2_excessive_runinstances_v1
ESCU - Baseline of Excessive AWS Instances Terminated by User - MLTK,"This search is used to build a Machine Learning Toolkit (MLTK) model for how many TerminateInstances users do in the environment. By default, the search uses the last 90 days of data to build the model. The model created by this search is then used in the corresponding detection search, which identifies subsequent outliers in the number of TerminateInstances performed by a user in a small time window.",`cloudtrail` eventName=TerminateInstances errorCode=success `ec2_excessive_terminateinstances_mltk_input_filter` | bucket span=10m _time | stats count as instances_terminated by _time src_user | fit DensityFunction instances_terminated threshold=0.0005 into ec2_excessive_terminateinstances_v1
ESCU - Baseline of Network ACL Activity by ARN,"This search establishes, on a per-hour basis, the average and the standard deviation of the number of API calls that were related to network ACLs made by each user. Also recorded is the number of data points for each user. This table is then outputted to a lookup file to allow the detection search to operate quickly.","`cloudtrail` `network_acl_events` | spath output=arn path=userIdentity.arn | bucket _time span=1h | stats count as apiCalls by _time, arn | stats count(apiCalls) as numDataPoints, latest(apiCalls) as latestCount, avg(apiCalls) as avgApiCalls, stdev(apiCalls) as stdevApiCalls by arn | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup network_acl_activity_baseline | stats count"
ESCU - Baseline of S3 Bucket deletion activity by ARN,"This search establishes, on a per-hour basis, the average and standard deviation for the number of API calls related to deleting an S3 bucket by each user. Also recorded is the number of data points for each user. This table is then outputted to a lookup file to allow the detection search to operate quickly.","`cloudtrail` eventName=DeleteBucket | spath output=arn path=userIdentity.arn | bucket _time span=1h | stats count as apiCalls by _time, arn | stats count(apiCalls) as numDataPoints, latest(apiCalls) as latestCount, avg(apiCalls) as avgApiCalls, stdev(apiCalls) as stdevApiCalls by arn | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup s3_deletion_baseline | stats count"
ESCU - Baseline of Security Group Activity by ARN,"This search establishes, on a per-hour basis, the average and the standard deviation for the number of API calls related to security groups made by each user. Also recorded is the number of data points for each user. This table is then outputted to a lookup file to allow the detection search to operate quickly.","`cloudtrail` `security_group_api_calls` | spath output=arn path=userIdentity.arn | bucket _time span=1h | stats count as apiCalls by _time, arn | stats count(apiCalls) as numDataPoints, latest(apiCalls) as latestCount, avg(apiCalls) as avgApiCalls, stdev(apiCalls) as stdevApiCalls by arn | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup security_group_activity_baseline | stats count"
ESCU - Baseline of SMB Traffic - MLTK,"This search is used to build a Machine Learning Toolkit (MLTK) model to characterize the number of SMB connections observed each hour for every day of week. By default, the search uses the last 30 days of data to build the model. The model created by this search is then used in the corresponding detection search to identify outliers in the number of SMB connections for that hour and day of the week.","| tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=10m, All_Traffic.src | eval HourOfDay=strftime(_time, ""%H"") | eval DayOfWeek=strftime(_time, ""%A"") | `drop_dm_object_name(""All_Traffic"")` | fit DensityFunction count by ""HourOfDay,DayOfWeek"" into smb_pdfmodel"
ESCU - Batch File Write to System32 - Rule,The search looks for a batch file (.bat) written to the Windows system directory tree.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.dest) as dest values(Filesystem.file_name) as file_name values(Filesystem.user) as user from datamodel=Endpoint.Filesystem by Filesystem.file_path | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" | search file_path=*system32* AND file_extension=.bat | `batch_file_write_to_system32_filter`"
ESCU - Child Processes of Spoolsv exe - Rule,This search looks for child processes of spoolsv.exe. This activity is associated with a POC privilege-escalation exploit associated with CVE-2018-8440. Spoolsv.exe is the process associated with the Print Spooler service in Windows and typically runs as SYSTEM.,| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=spoolsv.exe AND Processes.process_name!=regsvr32.exe by Processes.dest Processes.parent_process Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `child_processes_of_spoolsv_exe_filter`
ESCU - Clients Connecting to Multiple DNS Servers - Rule,This search allows you to identify the endpoints that have connected to more than five DNS servers and made DNS Queries over the time frame of the search.,"| tstats `security_content_summariesonly` count, values(DNS.dest) AS dest dc(DNS.dest) as dest_count from datamodel=Network_Resolution where DNS.message_type=QUERY by DNS.src | `drop_dm_object_name(""Network_Resolution"")` |where dest_count > 5 | `clients_connecting_to_multiple_dns_servers_filter`         | collect index=asx sourcetype=asx marker=""mitre_id=T1048.003, execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - Cloud Compute Instance Created By Previously Unseen User - Rule,This search looks for cloud compute instances created by users who have not created them before.,"| tstats `security_content_summariesonly` earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.action=run by Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_compute_creations_by_user  | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by src_user | multireport [| table src_user, firstTime, lastTime | outputlookup previously_seen_cloud_compute_creations_by_user | where fact=fiction][| eval new_user=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_creations_by_user_search_window_begin_offset`), 1, 0) | where new_user=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table src_user, dest, firstTime, lastTime | `cloud_compute_instance_created_by_previously_unseen_user_filter`"
ESCU - Cloud Compute Instance Created With Previously Unseen Image - Rule,This search looks for cloud compute instances being created with previously unseen image IDs.,"| tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `cloud_compute_instance_created_with_previously_unseen_image_filter` by Compute.image_id, Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_compute_images | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by image_id, src_user | multireport [| table image_id, firstTime, lastTime | outputlookup previously_seen_cloud_compute_images | where fact=fiction][| eval new_image=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_image_search_window_begin_offset`), 1, 0) | where new_image=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table image_id, dest, src_user, firstTime, lastTime"
ESCU - Cloud Compute Instance Created With Previously Unseen Instance Type - Rule,Find EC2 instances being created with previously unseen instance types.,"| tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.event_name=RunInstances `cloud_compute_instance_created_with_previously_unseen_instance_type_filter` by Compute.instance_type, Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_compute_instance_types | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by instance_type, src_user | multireport [| table instance_type, firstTime, lastTime | outputlookup previously_seen_cloud_compute_instance_types | where fact=fiction][| eval new_type=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_instance_types_search_window_begin_offset`), 1, 0) | where new_type=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table instance_type, dest, src_user, firstTime, lastTime"
ESCU - Cloud Compute Instance Started In Previously Unused Region - Rule,This search looks at cloud-infrastructure events where an instance is created in any region within the last hour and then compares it to a lookup file of previously seen regions where instances have been created.,"| tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.event_name=RunInstances `cloud_compute_instance_started_in_previously_unused_region_filter` by Compute.region, Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_regions | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by region, src_user | multireport [| table region, firstTime, lastTime | outputlookup previously_seen_cloud_regions | where fact=fiction][| eval new_region=if(firstTime >= relative_time(now(), `previously_seen_cloud_regions_search_window_begin_offset`), 1, 0) | where new_region=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table region, dest, src_user, firstTime, lastTime"
ESCU - Common Ransomware Extensions - Rule,The search looks for file modifications with extensions commonly used by Ransomware,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" | `ransomware_extensions` | `common_ransomware_extensions_filter`"
ESCU - Common Ransomware Notes - Rule,The search looks for files created with names matching those typically used in ransomware notes that tell the victim how to get their data back.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `ransomware_notes` | `common_ransomware_notes_filter`
ESCU - Count of assets by category,This search shows you every asset category you have and the assets that belong to those categories.,| from datamodel Identity_Management.All_Assets | stats count values(nt_host) by category | sort -count
ESCU - Count of Unique IPs Connecting to Ports,"The search counts the number of times a connection was observed to each destination port, and the number of unique source IPs connecting to them.","| tstats `security_content_summariesonly` count dc(All_Traffic.src) as numberOfUniqueHosts from datamodel=Network_Traffic by All_Traffic.dest_port | `drop_dm_object_name(""All_Traffic"")` | sort - count"
ESCU - Create a list of approved AWS service accounts,"This search looks for successful API activity in CloudTrail within the last 30 days, filters out known users from the identity table, and outputs values of users into `aws_service_accounts.csv` lookup file.",`cloudtrail` errorCode=success | rename userName as identity | search NOT [inputlookup identity_lookup_expanded | fields identity] | stats count by identity | table identity | outputlookup aws_service_accounts | stats count
ESCU - Create local admin accounts using net exe - Rule,This search looks for the creation of local administrator accounts using net.exe.,| tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=net.exe OR Processes.process_name=net1.exe) AND (Processes.process=*localgroup* OR Processes.process=*/add* OR Processes.process=*user*) by Processes.process Processes.process_name Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` |`create_local_admin_accounts_using_net_exe_filter`
ESCU - Create or delete windows shares using net exe - Rule,This search looks for the creation or deletion of hidden shares using net.exe.,| tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processs.process_name=net.exe OR Processes.process_name=net1.exe) by Processes.process Processes.process_name Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process=*share* | `create_or_delete_windows_shares_using_net_exe_filter`
ESCU - Create Remote Thread into LSASS - Rule,Detect remote thread creation into LSASS consistent with credential dumping.,"`sysmon` EventID=8 TargetImage=*lsass.exe | stats count min(_time) as firstTime max(_time) as lastTime by Computer, EventCode, TargetImage, TargetProcessId | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `create_remote_thread_into_lsass_filter`"
ESCU - Creation of Shadow Copy - Rule,"Monitor for signs that Ntdsutil, Vssadmin, or Wmic has been used to create a shadow copy.",| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=ntdsutil.exe Processes.process=*ntds* Processes.process=*create*) OR (Processes.process_name=vssadmin.exe Processes.process=*create* Processes.process=*shadow*) OR (Processes.process_name=wmic.exe Processes.process=*shadowcopy* Processes.process=*create*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `creation_of_shadow_copy_filter`
ESCU - Creation of Shadow Copy with wmic and powershell - Rule,This search detects the use of wmic and Powershell to create a shadow copy.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic* OR Processes.process_name=powershell* Processes.process=*shadowcopy* Processes.process=*create* by Processes.user Processes.process_name Processes.process Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `creation_of_shadow_copy_with_wmic_and_powershell_filter`
ESCU - Credential Dumping via Copy Command from Shadow Copy - Rule,This search detects credential dumping using copy command from a shadow copy.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe (Processes.process=*\\system32\\config\\sam* OR Processes.process=*\\system32\\config\\security* OR Processes.process=*\\system32\\config\\system* OR Processes.process=*\\windows\\ntds\\ntds.dit*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `credential_dumping_via_copy_command_from_shadow_copy_filter`
ESCU - Credential Dumping via Symlink to Shadow Copy - Rule,This search detects the creation of a symlink to a shadow copy.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe Processes.process=*mklink* Processes.process=*HarddiskVolumeShadowCopy* by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `credential_dumping_via_symlink_to_shadow_copy_filter`
ESCU - Deleting Shadow Copies - Rule,The vssadmin.exe utility is used to interact with the Volume Shadow Copy Service.  Wmic is an interface to the Windows Management Instrumentation.  This search looks for either of these tools being used to delete shadow copies.,| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=vssadmin.exe OR Processes.process_name=wmic.exe) Processes.process=*delete* Processes.process=*shadow* by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `deleting_shadow_copies_filter`
ESCU - Detect Activity Related to Pass the Hash Attacks - Rule,This search looks for specific authentication events from the Windows Security Event logs to detect potential attempts at using the Pass-the-Hash technique.,"`wineventlog_security` EventCode=4624 (Logon_Type=3 Logon_Process=NtLmSsp WorkstationName=WORKSTATION NOT AccountName=""ANONYMOUS LOGON"") OR (Logon_Type=9 Logon_Process=seclogo) | fillnull | stats count min(_time) as firstTime max(_time) as lastTime by EventCode, Logon_Type, WorkstationName, user, dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_activity_related_to_pass_the_hash_attacks_filter`"
ESCU - Detect API activity from users without MFA - Rule,"This search looks for CloudTrail events where a user logged into the AWS account, is making API calls and has not enabled Multi Factor authentication. Multi factor authentication adds a layer of security by forcing the users to type a unique authentication code from an approved authentication device when they access AWS websites or services. AWS Best Practices recommend that you enable MFA for privileged IAM users.",`cloudtrail` userIdentity.sessionContext.attributes.mfaAuthenticated=false | search NOT [| inputlookup aws_service_accounts | fields identity | rename identity as user]| stats  count min(_time) as firstTime max(_time) as lastTime values(eventName) as eventName by userIdentity.arn userIdentity.type user | `security_content_ctime(firstTime)`  | `security_content_ctime(lastTime)` | `detect_api_activity_from_users_without_mfa_filter`
ESCU - Detect ARP Poisoning - Rule,"By enabling Dynamic ARP Inspection as a Layer 2 Security measure on the organization's network devices, we will be able to detect ARP Poisoning attacks in the Infrastructure.","`cisco_networks` facility=""PM"" mnemonic=""ERR_DISABLE"" disable_cause=""arp-inspection"" | eval src_interface=src_int_prefix_long+src_int_suffix | stats min(_time) AS firstTime max(_time) AS lastTime count BY host src_interface | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`| `detect_arp_poisoning_filter`"
ESCU - Detect attackers scanning for vulnerable JBoss servers - Rule,This search looks for specific GET or HEAD requests to web servers that are indicative of reconnaissance attempts to identify vulnerable JBoss servers. JexBoss is described as the exploit tool of choice for this malicious activity.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Web where (Web.http_method=""GET"" OR Web.http_method=""HEAD"") AND (Web.url=""*/web-console/ServerInfo.jsp*"" OR Web.url=""*web-console*"" OR Web.url=""*jmx-console*"" OR Web.url = ""*invoker*"") by Web.http_method, Web.url, Web.src, Web.dest | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `detect_attackers_scanning_for_vulnerable_jboss_servers_filter`"
ESCU - Detect AWS API Activities From Unapproved Accounts - Rule,"This search looks for successful CloudTrail activity by user accounts that are not listed in the identity table or `aws_service_accounts.csv`. It returns event names and count, as well as the first and last time a specific user or service is detected, grouped by users.",`cloudtrail` errorCode=success | rename userName as identity | search NOT [| inputlookup identity_lookup_expanded | fields identity] | search NOT [| inputlookup aws_service_accounts | fields identity] | rename identity as user | stats count min(_time) as firstTime max(_time) as lastTime values(eventName) as eventName by user | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `detect_aws_api_activities_from_unapproved_accounts_filter`
ESCU - Detect AWS Console Login by User from New City - Rule,"This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour","| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user City | join user type=outer [| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) AS earliestseen by user | fields earliestseen user] | eval userStatus=if(firstTime >= relative_time(now(), ""@d""), ""New City"",""Previously Seen City"") | eval UserData=if(earliestseen >= relative_time(now(), ""@d"") OR isnull(earliestseen), ""New User"",""Old User"") | where userStatus=""New City"" AND UserData=""Old User"" | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `security_content_ctime(earliestseen)` | table user City userStatus firstTime lastTime earliestseen | `detect_aws_console_login_by_user_from_new_city_filter`"
ESCU - Detect AWS Console Login by User from New Country - Rule,"This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour","| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user Country | join user type=outer [| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) AS earliestseen by user | fields earliestseen user] | eval userStatus=if(firstTime >= relative_time(now(), ""@d""), ""New Country"",""Previously Seen Country"") | eval UserData=if(earliestseen >= relative_time(now(), ""@d"") OR isnull(earliestseen), ""New User"",""Old User"") | where userStatus=""New Country"" AND UserData=""Old User"" | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`|`security_content_ctime(earliestseen)` | table user Country userStatus firstTime lastTime earliestseen | `detect_aws_console_login_by_user_from_new_country_filter`"
ESCU - Detect AWS Console Login by User from New Region - Rule,"This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour","| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user Region | join user type=outer [| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) AS earliestseen by user | fields earliestseen user] | eval userStatus=if(firstTime >= relative_time(now(), ""@d""), ""New Region"",""Previously Seen Region"") | eval UserData=if(earliestseen >= relative_time(now(), ""@d"") OR isnull(earliestseen), ""New User"",""Old User"") | where userStatus=""New Region"" AND UserData=""Old User"" | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `security_content_ctime(earliestseen)` | table user Region userStatus firstTime lastTime earliestseen | `detect_aws_console_login_by_user_from_new_region_filter`"
ESCU - Detect Computer Changed with Anonymous Account - Rule,This search looks for Event Code 4742 (Computer Change) or EventCode 4624 (An account was successfully logged on) with an anonymous account.,"`wineventlog_security` EventCode=4624 OR EventCode=4742 TargetUserName=""ANONYMOUS LOGON"" LogonType=3 | stats count values(host) as host, values(TargetDomainName) as Domain, values(user) as user | `detect_computer_changed_with_anonymous_account_filter`"
ESCU - Detect Credential Dumping through LSASS access - Rule,This search looks for reading lsass memory consistent with credential dumping.,"`sysmon` EventCode=10 TargetImage=*lsass.exe (GrantedAccess=0x1010 OR GrantedAccess=0x1410) | stats count min(_time) as firstTime max(_time) as lastTime by Computer, SourceImage, SourceProcessId, TargetImage, TargetProcessId, EventCode, GrantedAccess | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_credential_dumping_through_lsass_access_filter`"
ESCU - Detect DNS requests to Phishing Sites leveraging EvilGinx2 - Rule,This search looks for DNS requests for phishing domains that are leveraging EvilGinx tools to mimic websites.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(DNS.answer) as answer from datamodel=Network_Resolution.DNS by DNS.dest DNS.src DNS.query host | `drop_dm_object_name(DNS)`| rex field=query "".*?(?<domain>[^./:]+\.(\S{2,3}|\S{2,3}.\S{2,3}))$"" | stats count values(query) as query by domain dest src answer| search `evilginx_phishlets_amazon` OR `evilginx_phishlets_facebook` OR `evilginx_phishlets_github` OR `evilginx_phishlets_0365` OR `evilginx_phishlets_outlook` OR `evilginx_phishlets_aws` OR `evilginx_phishlets_google` | search NOT [ inputlookup legit_domains.csv | fields domain]| join domain type=outer [| tstats count `security_content_summariesonly` values(Web.url) as url from datamodel=Web.Web by Web.dest Web.site | rename ""Web.*"" as * | rex field=site "".*?(?<domain>[^./:]+\.(\S{2,3}|\S{2,3}.\S{2,3}))$"" | table dest domain url] | table count src dest query answer domain url | `detect_dns_requests_to_phishing_sites_leveraging_evilginx2_filter`"
ESCU - Detect Excessive Account Lockouts From Endpoint - Rule,This search identifies endpoints that have caused a relatively high number of account lockouts in a short period.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(All_Changes.user) as user from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.dest All_Changes.result |`drop_dm_object_name(""All_Changes"")` |`drop_dm_object_name(""Account_Management"")`| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search count > 5 | `detect_excessive_account_lockouts_from_endpoint_filter`"
ESCU - Detect Excessive User Account Lockouts - Rule,This search detects user accounts that have been locked out a relatively high number of times in a short period.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.user All_Changes.result |`drop_dm_object_name(""All_Changes"")` |`drop_dm_object_name(""Account_Management"")`| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search count > 5 | `detect_excessive_user_account_lockouts_filter`"
ESCU - Detect F5 TMUI RCE CVE-2020-5902 - Rule,"This search detects remote code exploit attempts on F5 BIG-IP, BIG-IQ, and Traffix SDC devices","`f5_bigip_rogue` | regex _raw=""(hsqldb;|.*\\.\\.;.*)"" | search `detect_f5_tmui_rce_cve_2020_5902_filter`"
ESCU - Detect GCP Storage access from a new IP - Rule,This search looks at GCP Storage bucket-access logs and detects new or previously unseen remote IP addresses that have successfully accessed a GCP Storage bucket.,"`google_gcp_pubsub_message` | multikv | rename sc_status_ as status | rename cs_object_ as bucket_name | rename c_ip_ as remote_ip | rename cs_uri_ as request_uri | rename cs_method_ as operation | search status=""\""200\"""" | stats earliest(_time) as firstTime latest(_time) as lastTime by bucket_name remote_ip operation request_uri | table firstTime, lastTime, bucket_name, remote_ip, operation, request_uri | inputlookup append=t previously_seen_gcp_storage_access_from_remote_ip.csv | stats min(firstTime) as firstTime, max(lastTime) as lastTime by bucket_name remote_ip operation request_uri | outputlookup previously_seen_gcp_storage_access_from_remote_ip.csv | eval newIP=if(firstTime >= relative_time(now(),""-70m@m""), 1, 0) | where newIP=1 | eval first_time=strftime(firstTime,""%m/%d/%y %H:%M:%S"") | eval last_time=strftime(lastTime,""%m/%d/%y %H:%M:%S"") | table  first_time last_time bucket_name remote_ip operation request_uri | `detect_gcp_storage_access_from_a_new_ip_filter`"
ESCU - Detect hosts connecting to dynamic domain providers - Rule,"Malicious actors often abuse legitimate Dynamic DNS services to host malicious payloads or interactive command and control nodes. Attackers will automate domain resolution changes by routing dynamic domains to countless IP addresses to circumvent firewall blocks, blacklists as well as frustrate a network defenders analytic and investigative processes. This search will look for DNS queries made from within your infrastructure to suspicious dynamic domains.","| tstats `security_content_summariesonly` count values(DNS.answer) as answer min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query | `drop_dm_object_name(""DNS"")` | `security_content_ctime(firstTime)` | `dynamic_dns_providers` | `detect_hosts_connecting_to_dynamic_domain_providers_filter`         | collect index=asx sourcetype=asx marker=""execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - Detect Large Outbound ICMP Packets - Rule,"This search looks for outbound ICMP packets with a packet size larger than 1,000 bytes. Various threat actors have been known to use ICMP as a command and control channel for their attack infrastructure. Large ICMP packets from an endpoint to a remote host may be indicative of this activity.","| tstats `security_content_summariesonly` count earliest(_time) as firstTime latest(_time) as lastTime values(All_Traffic.action) values(All_Traffic.bytes) from datamodel=Network_Traffic where All_Traffic.action !=blocked All_Traffic.dest_category !=internal (All_Traffic.protocol=icmp OR All_Traffic.transport=icmp) All_Traffic.bytes > 1000 by All_Traffic.src_ip All_Traffic.dest_ip | `drop_dm_object_name(""All_Traffic"")` | search ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16) | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | `detect_large_outbound_icmp_packets_filter`"
ESCU - Detect Long DNS TXT Record Response - Rule,"This search is used to detect attempts to use DNS tunneling, by calculating the length of responses to DNS TXT queries. Endpoints using DNS as a method of transmission for data exfiltration, command and control, or evasion of security controls can often be detected by noting unusually large volumes of DNS traffic.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Resolution where DNS.message_type=response AND DNS.record_type=TXT by DNS.src DNS.dest DNS.answer DNS.record_type |  `drop_dm_object_name(""DNS"")` | eval anslen=len(answer) | search anslen>100 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename src as ""Source IP"", dest as ""Destination IP"", answer as ""DNS Answer"" anslen as ""Answer Length"" record_type as ""DNS Record Type"" firstTime as ""First Time"" lastTime as ""Last Time"" count as Count | table ""Source IP"" ""Destination IP"" ""DNS Answer"" ""DNS Record Type""  ""Answer Length"" Count ""First Time"" ""Last Time"" | `detect_long_dns_txt_record_response_filter`         | collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - Detect malicious requests to exploit JBoss servers - Rule,"This search is used to detect malicious HTTP requests crafted to exploit jmx-console in JBoss servers. The malicious requests have a long URL length, as the payload is embedded in the URL.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Web where (Web.http_method=""GET"" OR Web.http_method=""HEAD"") by Web.http_method, Web.url,Web.url_length Web.src, Web.dest | search Web.url=""*jmx-console/HtmlAdaptor?action=invokeOpByName&name=jboss.admin*import*"" AND Web.url_length > 200 | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table src, dest_ip, http_method, url, firstTime, lastTime | `detect_malicious_requests_to_exploit_jboss_servers_filter`"
ESCU - Detect Mimikatz Using Loaded Images - Rule,This search looks for reading loaded Images unique to credential dumping with Mimikatz.,"`sysmon` EventCode=7 | stats values(ImageLoaded) as ImageLoaded values(ProcessId) as ProcessId by Computer, Image | search ImageLoaded=*WinSCard.dll ImageLoaded=*cryptdll.dll ImageLoaded=*hid.dll ImageLoaded=*samlib.dll ImageLoaded=*vaultcli.dll | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_mimikatz_using_loaded_images_filter`"
ESCU - Detect Mimikatz Via PowerShell And EventCode 4703 - Rule,This search looks for PowerShell requesting privileges consistent with credential dumping.,"`wineventlog_security` signature_id=4703 Process_Name=*powershell.exe | rex field=Message ""Enabled Privileges:\s+(?<privs>\w+)\s+Disabled Privileges:"" | where privs=""SeDebugPrivilege"" | stats count min(_time) as firstTime max(_time) as lastTime by dest, Process_Name, privs, Process_ID, Message | rename privs as ""Enabled Privilege"" | rename Process_Name as process |  `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_mimikatz_via_powershell_and_eventcode_4703_filter`"
ESCU - Detect mshta exe running scripts in command-line arguments - Rule,"This search looks for the execution of ""mshta.exe"" with command-line arguments that launch a script. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""mshta.exe"" and its parent process.",| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=mshta.exe (Processes.process=*vbscript* OR Processes.process=*javascript*) by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| search (process=*vbscript* OR process=*javascript*) | `detect_mshta_exe_running_scripts_in_command_line_arguments_filter`
ESCU - Detect new API calls from user roles - Rule,"This search detects new API calls that have either never been seen before or that have not been seen in the previous hour, where the identity type is `AssumedRole`.","`cloudtrail` eventType=AwsApiCall errorCode=success userIdentity.type=AssumedRole [search `cloudtrail` eventType=AwsApiCall errorCode=success  userIdentity.type=AssumedRole | stats earliest(_time) as earliest latest(_time) as latest by userName eventName |  inputlookup append=t previously_seen_api_calls_from_user_roles | stats min(earliest) as earliest, max(latest) as latest by userName eventName | outputlookup previously_seen_api_calls_from_user_roles| eval newApiCallfromUserRole=if(earliest>=relative_time(now(), ""-70m@m""), 1, 0) | where newApiCallfromUserRole=1 | `security_content_ctime(earliest)` | `security_content_ctime(latest)` | table eventName userName]  |rename userName as user| stats values(eventName) earliest(_time) as earliest latest(_time) as latest by user | `security_content_ctime(earliest)` | `security_content_ctime(latest)` | `detect_new_api_calls_from_user_roles_filter`"
ESCU - Detect New Local Admin account - Rule,This search looks for newly created accounts that have been elevated to local administrators.,`wineventlog_security` EventCode=4720 OR (EventCode=4732 Group_Name=Administrators) | transaction member_id connected=false maxspan=180m | rename member_id as user | stats count min(_time) as firstTime max(_time) as lastTime by user dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_new_local_admin_account_filter`
ESCU - Detect New Login Attempts to Routers - Rule,"The search queries the authentication logs for assets that are categorized as routers in the ES Assets and Identity Framework, to identify connections that have not been seen before in the last 30 days.","| tstats `security_content_summariesonly` count earliest(_time) as earliest latest(_time) as latest from datamodel=Authentication where Authentication.dest_category=router by Authentication.dest Authentication.user| eval isOutlier=if(earliest >= relative_time(now(), ""-30d@d""), 1, 0) | where isOutlier=1| `security_content_ctime(earliest)`| `security_content_ctime(latest)` | `drop_dm_object_name(""Authentication"")` | `detect_new_login_attempts_to_routers_filter`"
ESCU - Detect New Open GCP Storage Buckets - Rule,This search looks for GCP PubSub events where a user has created an open/public GCP Storage bucket.,"`google_gcp_pubsub_message` data.resource.type=gcs_bucket data.protoPayload.methodName=storage.setIamPermissions | spath output=action path=data.protoPayload.serviceData.policyDelta.bindingDeltas{}.action | spath output=user path=data.protoPayload.authenticationInfo.principalEmail | spath output=location path=data.protoPayload.resourceLocation.currentLocations{} | spath output=src path=data.protoPayload.requestMetadata.callerIp | spath output=bucketName path=data.protoPayload.resourceName | spath output=role path=data.protoPayload.serviceData.policyDelta.bindingDeltas{}.role | spath output=member path=data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member | search (member=allUsers AND action=ADD) | table  _time, bucketName, src, user, location, action, role, member | search `detect_new_open_gcp_storage_buckets_filter`"
ESCU - Detect New Open S3 buckets - Rule,This search looks for CloudTrail events where a user has created an open/public S3 bucket.,"`cloudtrail` AllUsers eventName=PutBucketAcl | spath output=userIdentityArn path=userIdentity.arn | spath output=bucketName path=requestParameters.bucketName | spath output=aclControlList path=requestParameters.AccessControlPolicy.AccessControlList | spath input=aclControlList output=grantee path=Grant{} | mvexpand grantee | spath input=grantee | search Grantee.URI=*AllUsers | rename userIdentityArn as user| table _time, src,awsRegion Permission, Grantee.URI, bucketName, user | `detect_new_open_s3_buckets_filter`"
ESCU - Detect new user AWS Console Login - DM - Rule,"This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour","| tstats earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Authentication where Authentication.signature=ConsoleLogin by Authentication.user | `drop_dm_object_name(Authentication)` | inputlookup append=t previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user | eval userStatus=if(firstTime >=relative_time(now(), '-70m@m'), 'First Time Logging into AWS Console','Previously Seen User')| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `detect_new_user_aws_console_login___dm_filter`"
ESCU - Detect new user AWS Console Login - Rule,"This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour","`cloudtrail` eventName=ConsoleLogin | rename userIdentity.arn as user | stats earliest(_time) as firstTime latest(_time) as lastTime by user | inputlookup append=t previously_seen_users_console_logins.csv  | stats min(firstTime) as firstTime max(lastTime) as lastTime by user | eval userStatus=if(firstTime >= relative_time(now(), ""-70m@m""), ""First Time Logging into AWS Console"",""Previously Seen User"") | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`| where userStatus =""First Time Logging into AWS Console""  | `detect_new_user_aws_console_login_filter`"
ESCU - Detect Oulook exe writing a  zip file - Rule,This search looks for execution of process `outlook.exe` where the process is writing a `.zip` file to the disk.,"| tstats `security_content_summariesonly`  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name=outlook.exe OR Processes.process_name=explorer.exe by _time span=5m Processes.parent_process_id Processes.process_id Processes.dest Processes.process_name Processes.parent_process_name Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename process_id as malicious_id| rename parent_process_id as outlook_id| join malicious_id type=inner[| tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name  FROM datamodel=Endpoint.Filesystem where (Filesystem.file_path=*zip*   OR Filesystem.file_name=*.lnk ) AND (Filesystem.file_path=C:\\Users* OR Filesystem.file_path=*Local\\Temp*) by  _time span=5m Filesystem.process_id Filesystem.file_hash Filesystem.dest  | `drop_dm_object_name(Filesystem)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename process_id as malicious_id| fields malicious_id outlook_id dest file_path file_name file_hash count file_id] | table firstTime lastTime user malicious_id outlook_id process_name parent_process_name file_name  file_path | where file_name != """" | `detect_oulook_exe_writing_a__zip_file_filter`"
ESCU - Detect Outbound SMB Traffic - Rule,This search looks for outbound SMB connections made by hosts within your network to the Internet. SMB traffic is used for Windows file-sharing activity. One of the techniques often used by attackers involves retrieving the credential hash using an SMB request made to a compromised server controlled by the threat actor.,"| tstats `security_content_summariesonly` count earliest(_time) as earliest latest(_time) as latest values(All_Traffic.action) from datamodel=Network_Traffic where All_Traffic.action !=blocked All_Traffic.dest_category !=internal (All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb) by All_Traffic.src_ip All_Traffic.dest_ip | `drop_dm_object_name(""All_Traffic"")` | search ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16) | `security_content_ctime(earliest)`| `security_content_ctime(latest)` | `detect_outbound_smb_traffic_filter`"
ESCU - Detect Path Interception By Creation Of program exe - Rule,"The detection Detect Path Interception By Creation Of program exe is detecting the abuse of unquoted service paths, which is a popular technique for privilege escalation.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=services.exe by Processes.user Processes.process_name Processes.process Processes.dest | `drop_dm_object_name(Processes)` | rex field=process ""^.*\\\\(?<service_process>.*\.(?:exe|bat|com|ps1))"" | eval process_name = lower(process_name) | eval service_process = lower(service_process)| where process_name != service_process | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_path_interception_by_creation_of_program_exe_filter`"
ESCU - Detect processes used for System Network Configuration Discovery - Rule,This search looks for fast execution of processes used for system network configuration discovery on the endpoint.,| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.process_name Processes.user _time | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | search `system_network_configuration_discovery_tools` | transaction dest connected=false maxpause=5m |where eventcount>=5 | table firstTime lastTime dest user process_name process parent_process eventcount | `detect_processes_used_for_system_network_configuration_discovery_filter`
ESCU - Detect Prohibited Applications Spawning cmd exe - Rule,This search looks for executions of cmd.exe spawned by a process that is often abused by attackers and that does not typically launch cmd.exe.,| tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe by Processes.parent_process_name Processes.process_name Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` |search [`prohibited_apps_launching_cmd`] | `detect_prohibited_applications_spawning_cmd_exe_filter`
ESCU - Detect PsExec With accepteula Flag - Rule,"This search looks for events where `PsExec.exe` is run with the `accepteula` flag in the command line. PsExec is a built-in Windows utility that enables you to execute processes on other systems. It is fully interactive for console applications. This tool is widely used for launching interactive command prompts on remote systems. Threat actors leverage this extensively for executing code on compromised systems. If an attacker is running PsExec for the first time, they will be prompted to accept the end-user license agreement (EULA), which can be passed as the argument `accepteula` within the command line.","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = PsExec.exe Processes.process = ""*accepteula*"" by Processes.process_name Processes.dest  Processes.parent_process_name | `drop_dm_object_name(Processes)`| `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_psexec_with_accepteula_flag_filter`"
ESCU - Detect Rare Executables - Rule,"This search will return a table of rare processes, the names of the systems running them, and the users who initiated each process.","| tstats `security_content_summariesonly` count values(Processes.dest) as dest values(Processes.user) as user min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.process_name  | rename Processes.process_name as process | rex field=user ""(?<user_domain>.*)\\\\(?<user_name>.*)"" | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| search [| tstats count from datamodel=Endpoint.Processes by Processes.process_name | rare Processes.process_name limit=30 | rename Processes.process_name as process| `filter_rare_process_whitelist`| table process ] | `detect_rare_executables_filter`"
ESCU - Detect Rogue DHCP Server - Rule,"By enabling DHCP Snooping as a Layer 2 Security measure on the organization's network devices, we will be able to detect unauthorized DHCP servers handing out DHCP leases to devices on the network (Man in the Middle attack).","`cisco_networks` facility=""DHCP_SNOOPING"" mnemonic=""DHCP_SNOOPING_UNTRUSTED_PORT"" | stats min(_time) AS firstTime max(_time) AS lastTime count values(message_type) AS message_type values(src_mac) AS src_mac BY host | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`| `detect_rogue_dhcp_server_filter`"
ESCU - Detect S3 access from a new IP - Rule,This search looks at S3 bucket-access logs and detects new or previously unseen remote IP addresses that have successfully accessed an S3 bucket.,"`aws_s3_accesslogs` http_status=200  [search `aws_s3_accesslogs` http_status=200 | stats earliest(_time) as firstTime latest(_time) as lastTime by bucket_name remote_ip | inputlookup append=t previously_seen_S3_access_from_remote_ip.csv | stats min(firstTime) as firstTime, max(lastTime) as lastTime by bucket_name remote_ip | outputlookup previously_seen_S3_access_from_remote_ip.csv | eval newIP=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newIP=1 | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | table bucket_name remote_ip]| iplocation remote_ip |rename remote_ip as src_ip | table _time bucket_name src_ip City Country operation request_uri | `detect_s3_access_from_a_new_ip_filter`"
ESCU - Detect Spike in AWS API Activity - Rule,This search will detect users creating spikes of API activity in your AWS environment.  It will also update the cache file that factors in the latest data.,"`cloudtrail` eventType=AwsApiCall [search `cloudtrail` eventType=AwsApiCall | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup api_call_by_user_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup api_call_by_user_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | stats values(eventName) as eventName, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user | `detect_spike_in_aws_api_activity_filter`"
ESCU - Detect Spike in AWS Security Hub Alerts for EC2 Instance - Rule,This search looks for a spike in number of of AWS security Hub alerts for an EC2 instance in 4 hours intervals,"`aws_securityhub_firehose` ""findings{}.Resources{}.Type""=AWSEC2Instance | rex field=findings{}.Resources{}.Id .*instance/(?<instance>.*) | rename instance as dest | bucket span=4h _time | stats count AS alerts by _time dest | eventstats avg(alerts) as total_launched_avg, stdev(alerts) as total_launched_stdev | eval threshold_value = 4 | eval isOutlier=if(alerts > total_launched_avg+(total_launched_stdev * threshold_value), 1, 0) | search isOutlier=1 | table _time dest alerts|`detect_spike_in_aws_security_hub_alerts_for_ec2_instance_filter`"
ESCU - Detect Spike in AWS Security Hub Alerts for User - Rule,This search looks for a spike in number of of AWS security Hub alerts for an AWS IAM User in 4 hours intervals.,"`aws_securityhub_firehose` ""findings{}.Resources{}.Type""= AwsIamUser | rename findings{}.Resources{}.Id as user | bucket span=4h _time | stats count AS alerts by _time user | eventstats avg(alerts) as total_launched_avg, stdev(alerts) as total_launched_stdev | eval threshold_value = 2 | eval isOutlier=if(alerts > total_launched_avg+(total_launched_stdev * threshold_value), 1, 0) | search isOutlier=1 | table _time user alerts |`detect_spike_in_aws_security_hub_alerts_for_user_filter`"
ESCU - Detect Spike in blocked Outbound Traffic from your AWS - Rule,This search will detect spike in blocked outbound network connections originating from within your AWS environment.  It will also update the cache file that factors in the latest data.,"`cloudwatchlogs_vpcflow` action=blocked (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16)  [search  `cloudwatchlogs_vpcflow` action=blocked (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16)  | stats count as numberOfBlockedConnections by src_ip | inputlookup baseline_blocked_outbound_connections append=t | fields - latestCount | stats values(*) as * by src_ip | rename numberOfBlockedConnections as latestCount | eval newAvgBlockedConnections=avgBlockedConnections + (latestCount-avgBlockedConnections)/720 | eval newStdevBlockedConnections=sqrt(((pow(stdevBlockedConnections, 2)*719 + (latestCount-newAvgBlockedConnections)*(latestCount-avgBlockedConnections))/720)) | eval avgBlockedConnections=coalesce(newAvgBlockedConnections, avgBlockedConnections), stdevBlockedConnections=coalesce(newStdevBlockedConnections, stdevBlockedConnections), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table src_ip, latestCount, numDataPoints, avgBlockedConnections, stdevBlockedConnections | outputlookup baseline_blocked_outbound_connections | eval dataPointThreshold = 5, deviationThreshold = 3 | eval isSpike=if((latestCount > avgBlockedConnections+deviationThreshold*stdevBlockedConnections) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | table src_ip] | stats values(dest_ip) as ""Blocked Destination IPs"", values(interface_id) as ""resourceId"" count as numberOfBlockedConnections, dc(dest_ip) as uniqueDestConnections by src_ip | `detect_spike_in_blocked_outbound_traffic_from_your_aws_filter`"
ESCU - Detect Spike in Network ACL Activity - Rule,This search will detect users creating spikes in API activity related to network access-control lists (ACLs)in your AWS environment.,"`cloudtrail` `network_acl_events` [search `cloudtrail` `network_acl_events` | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup network_acl_activity_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup network_acl_activity_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | stats values(eventName) as eventNames, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user | `detect_spike_in_network_acl_activity_filter`"
ESCU - Detect Spike in S3 Bucket deletion - Rule,This search detects users creating spikes in API activity related to deletion of S3 buckets in your AWS environment. It will also update the cache file that factors in the latest data.,"`cloudtrail` eventName=DeleteBucket [search `cloudtrail` eventName=DeleteBucket | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup s3_deletion_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup s3_deletion_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | spath output=bucketName path=requestParameters.bucketName | stats values(bucketName) as bucketName, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user | `detect_spike_in_s3_bucket_deletion_filter`"
ESCU - Detect Spike in Security Group Activity - Rule,This search will detect users creating spikes in API activity related to security groups in your AWS environment.  It will also update the cache file that factors in the latest data.,"`cloudtrail` `security_group_api_calls` [search `cloudtrail` `security_group_api_calls` | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup security_group_activity_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup security_group_activity_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | stats values(eventName) as eventNames, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user | `detect_spike_in_security_group_activity_filter`"
ESCU - Detect Unauthorized Assets by MAC address - Rule,"By populating the organization's assets within the assets_by_str.csv, we will be able to detect unauthorized devices that are trying to connect with the organization's network by inspecting DHCP request packets, which are issued by devices when they attempt to obtain an IP address from the DHCP server. The MAC address associated with the source of the DHCP request is checked against the list of known devices, and reports on those that are not found.","| tstats `security_content_summariesonly` count from datamodel=Network_Sessions where nodename=All_Sessions.DHCP All_Sessions.signature=DHCPREQUEST by All_Sessions.src_ip All_Sessions.src_mac | dedup All_Sessions.src_mac| `drop_dm_object_name(""Network_Sessions"")`|`drop_dm_object_name(""All_Sessions"")` | search NOT [| inputlookup asset_lookup_by_str |rename mac as src_mac | fields + src_mac] | `detect_unauthorized_assets_by_mac_address_filter`"
ESCU - Detect USB device insertion - Rule,"The search is used to detect hosts that generate Windows Event ID 4663 for successful attempts to write to or read from a removable storage and Event ID 4656 for failures, which occurs when a USB drive is plugged in. In this scenario we are querying the Change_Analysis data model to look for Windows Event ID 4656 or 4663 where the priority of the affected host is marked as high in the ES Assets and Identity Framework.","| tstats `security_content_summariesonly` count earliest(_time) AS earliest latest(_time) AS latest from datamodel=Change_Analysis where (nodename = All_Changes) All_Changes.result=""Removable Storage device"" (All_Changes.result_id=4663 OR All_Changes.result_id=4656) (All_Changes.src_priority=high) by All_Changes.dest | `drop_dm_object_name(""All_Changes"")`| `security_content_ctime(earliest)`| `security_content_ctime(latest)`  | `detect_usb_device_insertion_filter`"
ESCU - Detect Use of cmd exe to Launch Script Interpreters - Rule,"This search looks for the execution of the cscript.exe or wscript.exe processes, with a parent of cmd.exe. The search will return the count, the first and last time this execution was seen on a machine, the user, and the destination of the machine","| tstats `security_content_summariesonly` count values(Processes.process) min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""cmd.exe"" (Processes.process_name=cscript.exe OR Processes.process_name =wscript.exe) by Processes.parent_process Processes.process_name Processes.user Processes.dest | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | `detect_use_of_cmd_exe_to_launch_script_interpreters_filter`"
ESCU - Detect web traffic to dynamic domain providers - Rule,This search looks for web connections to dynamic DNS providers.,"| tstats `security_content_summariesonly` count values(Web.url) as url min(_time) as firstTime from datamodel=Web where Web.status=200 by Web.src Web.dest Web.status | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `dynamic_dns_web_traffic` | `detect_web_traffic_to_dynamic_domain_providers_filter`"
ESCU - Detect Windows DNS SIGRed via Splunk Stream - Rule,This search detects SIGRed via Splunk Stream.,"`stream_dns` | spath ""query_type{}"" | search ""query_type{}"" IN (SIG,KEY) | spath protocol_stack | search protocol_stack=""ip:tcp:dns"" | append [search `stream_tcp` bytes_out>65000] | `detect_windows_dns_sigred_via_splunk_stream_filter` | stats count by flow_id | where count>1 | fields - count"
ESCU - Detect Windows DNS SIGRed via Zeek - Rule,This search detects SIGRed via Zeek DNS and Zeek Conn data.,"| tstats `security_content_summariesonly` count from datamodel=Network_Resolution where DNS.query_type IN (SIG,KEY) by DNS.flow_id | rename DNS.flow_id as flow_id | append [| tstats  `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.bytes_in>65000 by All_Traffic.flow_id | rename All_Traffic.flow_id as flow_id] | `detect_windows_dns_sigred_via_zeek_filter` | stats count by flow_id | where count>1 | fields - count"
ESCU - Detect Zerologon via Zeek - Rule,This search detects attempts to run exploits for the Zerologon CVE-2020-1472 vulnerability via Zeek RPC,"`zeek_rpc` operation IN (NetrServerPasswordSet2,NetrServerReqChallenge,NetrServerAuthenticate3) | bin span=5m _time | stats values(operation) dc(operation) as opscount count(eval(operation==""NetrServerReqChallenge"")) as challenge count(eval(operation==""NetrServerAuthenticate3"")) as authcount count(eval(operation==""NetrServerPasswordSet2"")) as passcount count as totalcount by _time,src_ip,dest_ip | search opscount=3 authcount>4 passcount>0 | search `detect_zerologon_via_zeek_filter`"
ESCU - Detection of DNS Tunnels - Rule,"This search is used to detect DNS tunneling, by calculating the sum of the length of DNS queries and DNS answers. The search also filters out potential false positives by filtering out queries made to internal systems and the queries originating from internal DNS, Web, and Email servers. Endpoints using DNS as a method of transmission for data exfiltration, command and control, or evasion of security controls can often be detected by noting an unusually large volume of DNS traffic.","| tstats `security_content_summariesonly` dc(""DNS.query"") as count  from datamodel=Network_Resolution  where nodename=DNS ""DNS.message_type""=""QUERY"" NOT (`cim_corporate_web_domain_search(""DNS.query"")`) NOT ""DNS.query""=""*.in-addr.arpa"" NOT (""DNS.src_category""=""svc_infra_dns"" OR ""DNS.src_category""=""svc_infra_webproxy"" OR ""DNS.src_category""=""svc_infra_email*""   ) by ""DNS.src"",""DNS.query"" | rename ""DNS.src"" as src  ""DNS.query"" as message | eval length=len(message) | stats sum(length) as length by src | append [ tstats `security_content_summariesonly` dc(""DNS.answer"") as count  from datamodel=Network_Resolution  where nodename=DNS ""DNS.message_type""=""QUERY"" NOT (`cim_corporate_web_domain_search(""DNS.query"")`) NOT ""DNS.query""=""*.in-addr.arpa"" NOT (""DNS.src_category""=""svc_infra_dns"" OR ""DNS.src_category""=""svc_infra_webproxy"" OR ""DNS.src_category""=""svc_infra_email*""   ) by ""DNS.src"",""DNS.answer"" | rename ""DNS.src"" as src  ""DNS.answer"" as message | eval message=if(message==""unknown"","""", message) | eval length=len(message) | stats sum(length) as length by src ] | stats sum(length) as length by src | where length > 10000 | `detection_of_dns_tunnels_filter`         | collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - Detection of tools built by NirSoft - Rule,"This search looks for specific command-line arguments that may indicate the execution of tools made by Nirsoft, which are legitimate, but may be abused by attackers.","| tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""* /stext *"" OR Processes.process=""* /scomma *"" ) by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)` | `detection_of_tools_built_by_nirsoft_filter`"
ESCU - Disabling Remote User Account Control - Rule,The search looks for modifications to registry keys that control the enforcement of Windows User Account Control (UAC).,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path=""*Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy"" by Registry.dest, Registry.registry_key_name Registry.user Registry.registry_path Registry.action | `drop_dm_object_name(Registry)` | `disabling_remote_user_account_control_filter`"
ESCU - Discover DNS records,"The search takes corporate and common cloud provider domains configured under `cim_corporate_email_domains.csv`, `cim_corporate_web_domains.csv`, and `cloud_domains.csv` finds their responses across the last 30 days from data in the `Network_Resolution ` datamodel, then stores the output under the `discovered_dns_records.csv` lookup","| inputlookup cim_corporate_email_domains.csv | inputlookup append=T cim_corporate_web_domains.csv | inputlookup append=T cim_cloud_domains.csv | eval domain = trim(replace(domain, ""\*"", """")) | join domain [|tstats `security_content_summariesonly` count values(DNS.record_type) as type, values(DNS.answer) as answer from datamodel=Network_Resolution where DNS.message_type=RESPONSE DNS.answer!=""unknown"" DNS.answer!="""" by DNS.query | rename DNS.query as query | where query!=""unknown"" | rex field=query ""(?<domain>\w+\.\w+?)(?:$|/)""] | makemv delim="" "" answer |  makemv delim="" "" type | sort -count | table count,domain,type,query,answer | outputlookup createinapp=true discovered_dns_records.csv"
ESCU - DNS Query Length Outliers - MLTK - Rule,This search allows you to identify DNS requests that are unusually large for the record type being requested in your environment.,"| tstats `security_content_summariesonly` count min(_time) as start_time max(_time) as end_time values(DNS.src) as src values(DNS.dest) as dest from datamodel=Network_Resolution by DNS.query DNS.record_type | search DNS.record_type=* |  `drop_dm_object_name(DNS)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | eval query_length = len(query) | apply dns_query_pdfmodel threshold=0.01 | rename ""IsOutlier(query_length)"" as isOutlier | search isOutlier > 0 | sort -query_length | table start_time end_time query record_type count src dest query_length | `dns_query_length_outliers___mltk_filter`         | collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - DNS Query Length With High Standard Deviation - Rule,"This search allows you to identify DNS requests and compute the standard deviation on the length of the names being resolved, then filter on two times the standard deviation to show you those queries that are unusually large for your environment.","| tstats `security_content_summariesonly` count from datamodel=Network_Resolution by DNS.query DNS.record_type |  `drop_dm_object_name(""DNS"")` | eval query_length = len(query) | table query query_length record_type count | eventstats stdev(query_length) AS stdev avg(query_length) AS avg p50(query_length) AS p50| where query_length>(avg+stdev*2) | eval z_score=(query_length-avg)/stdev | `dns_query_length_with_high_standard_deviation_filter`         | collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - DNS Query Requests Resolved by Unauthorized DNS Servers - Rule,This search will detect DNS requests resolved by unauthorized DNS servers. Legitimate DNS servers should be identified in the Enterprise Security Assets and Identity Framework.,"| tstats `security_content_summariesonly` count from datamodel=Network_Resolution where DNS.dest_category != dns_server AND DNS.src_category != dns_server by DNS.src DNS.dest | `drop_dm_object_name(""DNS"")` | `dns_query_requests_resolved_by_unauthorized_dns_servers_filter`         | collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - DNS record changed - Rule,The search takes the DNS records and their answers results of the discovered_dns_records lookup and finds if any records have changed by searching DNS response from the Network_Resolution datamodel across the last day.,"| inputlookup discovered_dns_records.csv | rename answer as discovered_answer | join domain[|tstats `security_content_summariesonly` count values(DNS.record_type) as type, values(DNS.answer) as current_answer values(DNS.src) as src from datamodel=Network_Resolution where DNS.message_type=RESPONSE DNS.answer!=""unknown"" DNS.answer!="""" by DNS.query | rename DNS.query as query | where query!=""unknown"" | rex field=query ""(?<domain>\w+\.\w+?)(?:$|/)""] | makemv delim="" "" answer |  makemv delim="" "" type | sort -count | table count,src,domain,type,query,current_answer,discovered_answer | makemv current_answer  | mvexpand current_answer | makemv discovered_answer | eval n=mvfind(discovered_answer, current_answer) | where isnull(n) | `dns_record_changed_filter`"
ESCU - DNSTwist Domain Names,"This search creates permutations of your existing domains, removes the valid domain names and stores them in a specified lookup file so they can be checked for in the associated detection searches.","| dnstwist domainlist=domains.csv | `remove_valid_domains` | eval domain_abuse=""true"" | table domain, domain_abuse | outputlookup brandMonitoring_lookup | stats count"
ESCU - Dump LSASS via comsvcs DLL - Rule,Detect the usage of comsvcs.dll for dumping the lsass process.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rundll32.exe Processes.process=*comsvcs.dll* Processes.process=*MiniDump* by Processes.user Processes.process_name Processes.process Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `dump_lsass_via_comsvcs_dll_filter`
ESCU - EC2 Instance Modified With Previously Unseen User - Rule,This search looks for EC2 instances being modified by users who have not previously modified them.,"`cloudtrail` `ec2_modification_api_calls` [search `cloudtrail` `ec2_modification_api_calls` errorCode=success | stats earliest(_time) as firstTime latest(_time) as lastTime by userIdentity.arn | rename userIdentity.arn as arn | inputlookup append=t previously_seen_ec2_modifications_by_user | stats min(firstTime) as firstTime, max(lastTime) as lastTime by arn | outputlookup previously_seen_ec2_modifications_by_user | eval newUser=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newUser=1 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=dest responseElements.instancesSet.items{}.instanceId | spath output=user userIdentity.arn | table _time, user, dest | `ec2_instance_modified_with_previously_unseen_user_filter`"
ESCU - EC2 Instance Started In Previously Unseen Region - Rule,This search looks for CloudTrail events where an instance is started in a particular region in the last one hour and then compares it to a lookup file of previously seen regions where an instance was started,"`cloudtrail` earliest=-1h StartInstances | stats earliest(_time) as earliest latest(_time) as latest by awsRegion | inputlookup append=t previously_seen_aws_regions.csv | stats min(earliest) as earliest max(latest) as latest by awsRegion | outputlookup previously_seen_aws_regions.csv | eval regionStatus=if(earliest >= relative_time(now(),""-1d@d""), ""Instance Started in a New Region"",""Previously Seen Region"") | `security_content_ctime(earliest)` | `security_content_ctime(latest)` | where regionStatus=""Instance Started in a New Region"" | `ec2_instance_started_in_previously_unseen_region_filter`"
ESCU - EC2 Instance Started With Previously Unseen AMI - Rule,This search looks for EC2 instances being created with previously unseen AMIs.,"`cloudtrail` eventName=RunInstances [search `cloudtrail` eventName=RunInstances errorCode=success | stats earliest(_time) as firstTime latest(_time) as lastTime by requestParameters.instancesSet.items{}.imageId | rename requestParameters.instancesSet.items{}.imageId as amiID | inputlookup append=t previously_seen_ec2_amis.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by amiID | outputlookup previously_seen_ec2_amis.csv | eval newAMI=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | where newAMI=1 | rename amiID as requestParameters.instancesSet.items{}.imageId | table requestParameters.instancesSet.items{}.imageId] | rename requestParameters.instanceType as instanceType, responseElements.instancesSet.items{}.instanceId as dest, userIdentity.arn as arn, requestParameters.instancesSet.items{}.imageId as amiID | table firstTime, lastTime, arn, amiID, dest, instanceType | `ec2_instance_started_with_previously_unseen_ami_filter`"
ESCU - EC2 Instance Started With Previously Unseen Instance Type - Rule,This search looks for EC2 instances being created with previously unseen instance types.,"`cloudtrail` eventName=RunInstances [search `cloudtrail` eventName=RunInstances errorCode=success | fillnull value=""m1.small"" requestParameters.instanceType | stats earliest(_time) as earliest latest(_time) as latest by requestParameters.instanceType | rename requestParameters.instanceType as instanceType | inputlookup append=t previously_seen_ec2_instance_types.csv | stats min(earliest) as earliest max(latest) as latest by instanceType | outputlookup previously_seen_ec2_instance_types.csv | eval newType=if(earliest >= relative_time(now(), ""-70m@m""), 1, 0) | `security_content_ctime(earliest)` | `security_content_ctime(latest)` | where newType=1 | rename instanceType as requestParameters.instanceType | table requestParameters.instanceType] | spath output=user userIdentity.arn | rename requestParameters.instanceType as instanceType, responseElements.instancesSet.items{}.instanceId as dest | table _time, user, dest, instanceType | `ec2_instance_started_with_previously_unseen_instance_type_filter`"
ESCU - EC2 Instance Started With Previously Unseen User - Rule,This search looks for EC2 instances being created by users who have not created them before.,"`cloudtrail` eventName=RunInstances [search `cloudtrail` eventName=RunInstances errorCode=success | stats earliest(_time) as firstTime latest(_time) as lastTime by userIdentity.arn | rename userIdentity.arn as arn | inputlookup append=t previously_seen_ec2_launches_by_user.csv | stats min(firstTime) as firstTime, max(lastTime) as lastTime by arn | outputlookup previously_seen_ec2_launches_by_user.csv | eval newUser=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newUser=1 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename arn as userIdentity.arn | table userIdentity.arn] | rename requestParameters.instanceType as instanceType, responseElements.instancesSet.items{}.instanceId as dest, userIdentity.arn as user | table _time, user, dest, instanceType | `ec2_instance_started_with_previously_unseen_user_filter`"
ESCU - Email Attachments With Lots Of Spaces - Rule,Attackers often use spaces as a means to obfuscate an attachment's file extension. This search looks for messages with email attachments that have many spaces within the file names.,"| tstats `security_content_summariesonly` count values(All_Email.recipient) as recipient_address min(_time) as firstTime max(_time) as lastTime from datamodel=Email where All_Email.file_name=""*"" by All_Email.src_user, All_Email.file_name All_Email.message_id | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Email"")` | eval space_ratio = (mvcount(split(file_name,"" ""))-1)/len(file_name) | search space_ratio >= 0.1 |  rex field=recipient_address ""(?<recipient_user>.*)@"" | `email_attachments_with_lots_of_spaces_filter`"
ESCU - Email files written outside of the Outlook directory - Rule,The search looks at the change-analysis data model and detects email files created outside the normal Outlook directory.,"| tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where (Filesystem.file_name=*.pst OR Filesystem.file_name=*.ost) Filesystem.file_path != ""C:\\Users\\*\\My Documents\\Outlook Files\\*""  Filesystem.file_path!=""C:\\Users\\*\\AppData\\Local\\Microsoft\\Outlook*"" by Filesystem.action Filesystem.process_id Filesystem.file_name Filesystem.dest | `drop_dm_object_name(""Filesystem"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `email_files_written_outside_of_the_outlook_directory_filter`"
ESCU - Email servers sending high volume traffic to hosts - Rule,This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.,"| tstats `security_content_summariesonly` sum(All_Traffic.bytes_out) as bytes_out from datamodel=Network_Traffic where All_Traffic.src_category=email_server by All_Traffic.dest_ip _time span=1d | `drop_dm_object_name(""All_Traffic"")` | eventstats avg(bytes_out) as avg_bytes_out stdev(bytes_out) as stdev_bytes_out | eventstats count as num_data_samples avg(eval(if(_time < relative_time(now(), ""@d""), bytes_out, null))) as per_source_avg_bytes_out stdev(eval(if(_time < relative_time(now(), ""@d""), bytes_out, null))) as per_source_stdev_bytes_out by dest_ip | eval minimum_data_samples = 4, deviation_threshold = 3 | where num_data_samples >= minimum_data_samples AND bytes_out > (avg_bytes_out + (deviation_threshold * stdev_bytes_out)) AND bytes_out > (per_source_avg_bytes_out + (deviation_threshold * per_source_stdev_bytes_out)) AND _time >= relative_time(now(), ""@d"") | eval num_standard_deviations_away_from_server_average = round(abs(bytes_out - avg_bytes_out) / stdev_bytes_out, 2), num_standard_deviations_away_from_client_average = round(abs(bytes_out - per_source_avg_bytes_out) / per_source_stdev_bytes_out, 2) | table dest_ip, _time, bytes_out, avg_bytes_out, per_source_avg_bytes_out, num_standard_deviations_away_from_server_average, num_standard_deviations_away_from_client_average | `email_servers_sending_high_volume_traffic_to_hosts_filter`"
ESCU - Excessive DNS Failures - Rule,"This search identifies DNS query failures by counting the number of DNS responses that do not indicate success, and trigger on more than 50 occurrences.","| tstats `security_content_summariesonly` count values(""DNS.query"") as queries from datamodel=Network_Resolution where nodename=DNS ""DNS.reply_code""!=""No Error"" ""DNS.reply_code""!=""NoError"" DNS.reply_code!=""unknown"" NOT ""DNS.query""=""*.arpa"" ""DNS.query""=""*.*"" by ""DNS.src"",""DNS.query""| `drop_dm_object_name(""DNS"")`| lookup cim_corporate_web_domain_lookup domain as query OUTPUT domain| where isnull(domain)| lookup update=true alexa_lookup_by_str domain as query OUTPUT rank| where isnull(rank)| stats sum(count) as count mode(queries) as queries by src| `get_asset(src)`| where count>50 | `excessive_dns_failures_filter`         | collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
ESCU - Execution of File with Multiple Extensions - Rule,"This search looks for processes launched from files that have double extensions in the file name. This is typically done to obscure the ""real"" file extension and make it appear as though the file being accessed is a data file, as opposed to executable content.",| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = *.doc.exe OR Processes.process = *.htm.exe OR Processes.process = *.html.exe OR Processes.process = *.txt.exe OR Processes.process = *.pdf.exe OR Processes.process = *.doc.exe by Processes.dest Processes.user Processes.process Processes.parent_process | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `execution_of_file_with_multiple_extensions_filter`
ESCU - Execution of File With Spaces Before Extension - Rule,This search looks for processes launched from files with at least five spaces in the name before the extension. This is typically done to obfuscate the file extension by pushing it outside of the default view.,"| tstats `security_content_summariesonly` count values(Processes.process_path) as process_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*     .*"" by Processes.dest Processes.user Processes.process Processes.process_name | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `execution_of_file_with_spaces_before_extension_filter`"
ESCU - Extended Period Without Successful Netbackup Backups - Rule,This search returns a list of hosts that have not successfully completed a backup in over a week.,"`netbackup` MESSAGE=""Disk/Partition backup completed successfully."" | stats latest(_time) as latestTime by COMPUTERNAME | `security_content_ctime(latestTime)` | rename COMPUTERNAME as dest | eval isOutlier=if(latestTime <= relative_time(now(), ""-7d@d""), 1, 0) | search isOutlier=1 | table latestTime, dest | `extended_period_without_successful_netbackup_backups_filter`"
ESCU - File with Samsam Extension - Rule,The search looks for file writes with extensions consistent with a SamSam ransomware attack.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" | search file_extension=.stubbin OR file_extension=.berkshire OR file_extension=.satoshi OR file_extension=.sophos OR file_extension=.keyxml | `file_with_samsam_extension_filter`"
ESCU - First Time Seen Child Process of Zoom - Rule,This search looks for child processes spawned by zoom.exe or zoom.us that has not previously been seen.,"| tstats `security_content_summariesonly` min(_time) as firstTime values(Processes.parent_process_name) as parent_process_name values(Processes.parent_process_id) as parent_process_id values(Processes.process_name) as process_name values(Processes.process) as process from datamodel=Endpoint.Processes where (Processes.parent_process_name=zoom.exe OR Processes.parent_process_name=zoom.us) by Processes.process_id Processes.dest | `drop_dm_object_name(Processes)` | lookup zoom_first_time_child_process dest as dest process_name as process_name OUTPUT firstTimeSeen | where isnull(firstTimeSeen) OR firstTimeSeen > relative_time(now(), ""`previously_seen_zoom_child_processes_window`"") | `security_content_ctime(firstTime)` | table firstTime dest, process_id, process_name, parent_process_id, parent_process_name |`first_time_seen_child_process_of_zoom_filter`"
ESCU - First time seen command line argument - Rule,This search looks for command-line arguments that use a `/c` parameter to execute a command that has not previously been seen.,"| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = cmd.exe Processes.process = ""* /c *"" by Processes.process Processes.process_name Processes.parent_process_name Processes.dest| `drop_dm_object_name(Processes)`| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search [| tstats `security_content_summariesonly` earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = cmd.exe Processes.process = ""* /c *"" by Processes.process | `drop_dm_object_name(Processes)` | inputlookup append=t previously_seen_cmd_line_arguments | stats min(firstTime) as firstTime, max(lastTime) as lastTime by process | outputlookup previously_seen_cmd_line_arguments | eval newCmdLineArgument=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newCmdLineArgument=1 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table process] | `first_time_seen_command_line_argument_filter`"
ESCU - First Time Seen Running Windows Service - Rule,This search looks for the first and last time a Windows service is seen running in your environment. This table is then cached.,"`wineventlog_system` EventCode=7036 | rex field=Message ""The (?<service>[-\(\)\s\w]+) service entered the (?<state>\w+) state"" | where state=""running"" | lookup previously_seen_running_windows_services service as service OUTPUT firstTimeSeen | where isnull(firstTimeSeen) OR firstTimeSeen > relative_time(now(), ""`previously_seen_windows_service_window`"") | table _time dest service | `first_time_seen_running_windows_service_filter`"
ESCU - GCP Detect accounts with high risk roles by project - Rule,This search provides detection of accounts with high risk roles by projects. Compromised accounts with high risk roles can move laterally or even scalate privileges at different projects depending on organization schema.,`google_gcp_pubsub_message` data.protoPayload.request.policy.bindings{}.role=roles/owner OR roles/editor OR roles/iam.serviceAccountUser OR roles/iam.serviceAccountAdmin OR roles/iam.serviceAccountTokenCreator OR roles/dataflow.developer OR roles/dataflow.admin OR roles/composer.admin OR roles/dataproc.admin OR roles/dataproc.editor | table data.resource.type data.protoPayload.authenticationInfo.principalEmail data.protoPayload.authorizationInfo{}.permission data.protoPayload.authorizationInfo{}.resource data.protoPayload.response.bindings{}.role data.protoPayload.response.bindings{}.members{} | `gcp_detect_accounts_with_high_risk_roles_by_project_filter`
ESCU - GCP Detect gcploit framework - Rule,This search provides detection of GCPloit exploitation framework. This framework can be used to escalate privileges and move laterally from compromised high privilege accounts.,`google_gcp_pubsub_message` data.protoPayload.request.function.timeout=539s | table src src_user data.resource.labels.project_id data.protoPayload.request.function.serviceAccountEmail data.protoPayload.authorizationInfo{}.permission data.protoPayload.request.location http_user_agent | `gcp_detect_gcploit_framework_filter`
ESCU - GCP Detect high risk permissions by resource and account - Rule,This search provides detection of high risk permissions by resource and accounts. These are permissions that can allow attackers with compromised accounts to move laterally and escalate privileges.,`google_gcp_pubsub_message` data.protoPayload.authorizationInfo{}.permission=iam.serviceAccounts.getaccesstoken OR iam.serviceAccounts.setIamPolicy OR iam.serviceAccounts.actas OR dataflow.jobs.create OR composer.environments.create OR dataproc.clusters.create |table data.protoPayload.requestMetadata.callerIp data.protoPayload.authenticationInfo.principalEmail data.protoPayload.authorizationInfo{}.permission data.protoPayload.response.bindings{}.members{} data.resource.labels.project_id | `gcp_detect_high_risk_permissions_by_resource_and_account_filter`
ESCU - gcp detect oauth token abuse - Rule,"This search provides detection of possible GCP Oauth token abuse. GCP Oauth token without time limit can be exfiltrated and reused for keeping access sessions alive without further control of authentication, allowing attackers to access and move laterally.",`google_gcp_pubsub_message` type.googleapis.com/google.cloud.audit.AuditLog |table protoPayload.@type protoPayload.status.details{}.@type protoPayload.status.details{}.violations{}.callerIp protoPayload.status.details{}.violations{}.type protoPayload.status.message  | `gcp_detect_oauth_token_abuse_filter`
ESCU - GCP GCR container uploaded - Rule,"This search show information on uploaded containers including source user, account, action, bucket name event name, http user agent, message and destination path.","|tstats count min(_time) as firstTime max(_time) as lastTime  FROM datamodel=Cloud_Infrastructure.Storage where Storage.event_name=storage.objects.create by Storage.src_user Storage.account Storage.action Storage.bucket_name Storage.event_name Storage.http_user_agent Storage.msg Storage.object_path | `drop_dm_object_name(""Storage"")`  | `gcp_gcr_container_uploaded_filter`"
ESCU - GCP Kubernetes activity by src ip - Response Task,"This search provides investigation data about requests via user agent, authentication request URI, resource path and cluster name data against Kubernetes cluster from a specific IP address","sourcetype=""google:gcp:pubsub:message"" data.protoPayload.requestMetadata.callerIp={src_ip} | rename data.protoPayload.requestMetadata.callerIp as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(data.protoPayload.methodName) as method_names values(data.protoPayload.resourceName) as resource_name values(data.protoPayload.requestMetadata.callerSuppliedUserAgent) as http_user_agent values(data.protoPayload.authenticationInfo.principalEmail) as user values(data.protoPayload.status.message) by src_ip data.resource.labels.cluster_name data.resource.type"
ESCU - GCP Kubernetes cluster pod scan detection - Rule,"This search provides information of unauthenticated requests via user agent, and authentication data against Kubernetes cluster's pods",`google_gcp_pubsub_message` category=kube-audit |spath input=properties.log |search responseStatus.code=401 |table sourceIPs{} userAgent verb requestURI responseStatus.reason properties.pod | `gcp_kubernetes_cluster_pod_scan_detection_filter`
ESCU - GCP Kubernetes cluster scan detection - Rule,"This search provides information of unauthenticated requests via user agent, and authentication data against Kubernetes cluster","`google_gcp_pubsub_message` data.protoPayload.requestMetadata.callerIp!=127.0.0.1 data.protoPayload.requestMetadata.callerIp!=::1 ""data.labels.authorization.k8s.io/decision""=forbid ""data.protoPayload.status.message""=PERMISSION_DENIED data.protoPayload.authenticationInfo.principalEmail=""system:anonymous"" | rename data.protoPayload.requestMetadata.callerIp as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(data.protoPayload.methodName) as method_name values(data.protoPayload.resourceName) as resource_name values(data.protoPayload.requestMetadata.callerSuppliedUserAgent) as http_user_agent by src_ip data.resource.labels.cluster_name | rename data.resource.labels.cluster_name as cluster_name| `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`  | `gcp_kubernetes_cluster_scan_detection_filter`"
ESCU - Get All AWS Activity From City - Response Task,"This search retrieves all the activity from a specific city and will create a table containing the time, city, ARN, username, the type of user, the source IP address, the AWS region the activity was in, the API called, and whether or not the API call was successful.","| search sourcetype=aws:cloudtrail | iplocation sourceIPAddress | search City=$City$ | spath output=user path=userIdentity.arn | spath output=awsUserName path=userIdentity.userName | spath output=userType path=userIdentity.type | rename sourceIPAddress as src_ip | table _time, City, user, userName, userType, src_ip, awsRegion, eventName, errorCode"
ESCU - Get All AWS Activity From Country - Response Task,"This search retrieves all the activity from a specific country and will create a table containing the time, country, ARN, username, the type of user, the source IP address, the AWS region the activity was in, the API called, and whether or not the API call was successful.","| search sourcetype=aws:cloudtrail | iplocation sourceIPAddress | search Country=$Country$ | spath output=user path=userIdentity.arn | spath output=awsUserName path=userIdentity.userName | spath output=userType path=userIdentity.type | rename sourceIPAddress as src_ip | table _time, Country, user, userName, userType, src_ip, awsRegion, eventName, errorCode"
ESCU - Get All AWS Activity From IP Address - Response Task,"This search retrieves all the activity from a specific IP address and will create a table containing the time, ARN, username, the type of user, the IP address, the AWS region the activity was in, the API called, and whether or not the API call was successful.","| search sourcetype=aws:cloudtrail | iplocation sourceIPAddress | search sourceIPAddress=$src_ip$ | spath output=user path=userIdentity.arn | spath output=awsUserName path=userIdentity.userName | spath output=userType path=userIdentity.type | rename sourceIPAddress as src_ip | table _time, user, userName, userType, src_ip, awsRegion, eventName, errorCode"
ESCU - Get All AWS Activity From Region - Response Task,"This search retrieves all the activity from a specific geographic region and will create a table containing the time, geographic region, ARN, username, the type of user, the source IP address, the AWS region the activity was in, the API called, and whether or not the API call was successful.","| search sourcetype=aws:cloudtrail | iplocation sourceIPAddress | search Region=$Region$ | spath output=user path=userIdentity.arn | spath output=awsUserName path=userIdentity.userName | spath output=userType path=userIdentity.type | rename sourceIPAddress as src_ip | table _time, Region, user, userName, userType, src_ip, awsRegion, eventName, errorCode"
ESCU - Get Authentication Logs For Endpoint - Response Task,This search returns all users that have attempted to access a particular endpoint.,"| tstats count from datamodel=Authentication where Authentication.dest=$dest$ by _time, Authentication.dest, Authentication.user, Authentication.app, Authentication.action | `drop_dm_object_name(""Authentication"")`"
ESCU - Get Backup Logs For Endpoint - Response Task,This search will tell you the backup status from your netbackup_logs of a specific endpoint for the last week.,"| search sourcetype=""netbackup_logs"" COMPUTERNAME=$dest$ | rename COMPUTERNAME as dest, MESSAGE as signature | table _time, dest, signature"
ESCU - Get Certificate logs for a domain - Response Task,"This search queries the Certificates datamodel and give you all the information for a specific domain. Please note that the certificates issued by ""Let's Encrypt"" are widely used by attackers.",| tstats `summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Certificates.All_Certificates where All_Certificates.SSL.ssl_subject_common_name=*$domain$  by All_Certificates.dest All_Certificates.src All_Certificates.SSL.ssl_issuer_common_name All_Certificates.SSL.ssl_subject_common_name All_Certificates.SSL.ssl_hash | `drop_dm_object_name(All_Certificates)` | `drop_dm_object_name(SSL)` | rename ssl_subject_common_name as domain | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
ESCU - Get DNS Server History for a host - Response Task,While investigating any detections it is important to understand which and how many DNS servers a host has connected to in the past. This search uses data that is tagged as DNS and gives you a count and list of DNS servers that a particular host has connected to the previous 24 hours.,| search tag=dns src_ip=$src_ip$ dest_port=53 | streamstats time_window=1d count values(dest_ip) as dcip by src_ip | table date_mday src_ip dcip count | sort -count
ESCU - Get DNS traffic ratio - Response Task,"This search calculates the ratio of DNS traffic originating and coming from a host to a list of DNS servers over the last 24 hours. A high value of this ratio could be very useful to quickly understand if a src_ip (host) is sending a high volume of data out via port 53, could be an indicator of data exfiltration via DNS.","| tstats allow_old_summaries=true sum(All_Traffic.bytes_out) as ""bytes_out"" sum(All_Traffic.bytes_in) as ""bytes_in"" from datamodel=Network_Traffic where nodename=All_Traffic All_Traffic.dest_port=53 All_Traffic.src=$src_ip$ All_Traffic.dest=$dest_ip$ | eval ratio = (bytes_out/bytes_in) | table ratio"
ESCU - Get EC2 Instance Details by instanceId - Response Task,This search queries AWS description logs and returns all the information about a specific instance via the instanceId field,"| search sourcetype=""aws:description"" source=""*:ec2_instances""| dedup id sortby -_time | search id=$instanceId$ | spath output=tags path=tags | eval tags=mvzip(key,value,"" = ""), ip_address=if((ip_address == ""null""),private_ip_address,ip_address) | table id, tags.Name, aws_account_id, placement, instance_type, key_name, ip_address, launch_time, state, vpc_id, subnet_id, tags | rename aws_account_id as ""Account ID"", id as ID, instance_type as Type, ip_address as ""IP Address"", key_name as ""Key Pair"", launch_time as ""Launch Time"", placement as ""Availability Zone"", state as State, subnet_id as Subnet, ""tags.Name"" as Name, vpc_id as VPC"
ESCU - Get EC2 Launch Details - Response Task,This search returns some of the launch details for a EC2 instance.,"| search sourcetype=aws:cloudtrail responseElements.instancesSet.items{}.instanceId=$dest$ |rename userIdentity.arn as arn, responseElements.instancesSet.items{}.instanceId as instanceId, responseElements.instancesSet.items{}.privateIpAddress as privateIpAddress, responseElements.instancesSet.items{}.imageId as amiID, responseElements.instancesSet.items{}.architecture as architecture, responseElements.instancesSet.items{}.keyName as keyName | table arn, awsRegion, instanceId, architecture, privateIpAddress, amiID, keyName"
ESCU - Get Email Info - Response Task,This search returns all the information Splunk might have collected a specific email message over the last 2 hours.,| from datamodel Email.All_Email | search message_id=$message_id$
ESCU - Get Emails From Specific Sender - Response Task,This search returns all the emails from a specific sender over the last 24 and next hours.,| from datamodel Email.All_Email | search src_user=$src_user$
ESCU - Get First Occurrence and Last Occurrence of a MAC Address - Response Task,This search allows you to gather more context around a notable which has detected a new device connecting to your network. Use this search to determine the first and last occurrences of the suspicious device attempting to connect with your network.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Sessions where nodename=All_Sessions.DHCP All_Sessions.signature=DHCPREQUEST All_Sessions.All_Sessions.src_mac= $src_mac$ by All_Sessions.src_ip All_Sessions.user | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`
ESCU - Get History Of Email Sources - Response Task,"This search returns a list of all email sources seen in the 48 hours prior to the notable event to 24 hours after, and the number of emails from each source.",|tstats `security_content_summariesonly` values(All_Email.dest) as dest values(All_Email.recipient) as recepient  min(_time) as firstTime max(_time) as lastTime count from datamodel=Email.All_Email by All_Email.src |`drop_dm_object_name(All_Email)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
ESCU - Get Logon Rights Modifications For Endpoint - Response Task,This search allows you to retrieve any modifications to logon rights associated with a specific host.,"| search eventtype=wineventlog_security (signature_id=4718 OR signature_id=4717) dest=$dest$ | rename user as ""Account Modified"" | table _time, dest, ""Account Modified"", Access_Right, signature"
ESCU - Get Logon Rights Modifications For User - Response Task,This search allows you to retrieve any modifications to logon rights for a specific user account.,"| search eventtype=wineventlog_security (signature_id=4718 OR signature_id=4717) user=$user$ | rename user as ""Account Modified"" | table _time, dest, ""Account Modified"", Access_Right, signature"
ESCU - Get Notable History - Response Task,"This search queries the notable index and returns all the Notable Events for the particular destination host, giving the analyst an overview of the incidents that may have occurred with the host under investigation.","| search `notable` | search dest=$dest$ | table _time, rule_name, owner, priority, severity, status_description"
ESCU - Get Notable Info - Response Task,"This search queries the notable index to retrieve detailed information captured within the notable. Every notable has a unique ID associated with it, which is used to point us directly to the notable event under investigation.","| search `notable_by_id($event_id$)` | table time, rule_name, dest, dest_asset_id, dest_owner, priority, severity, owner, status_description"
ESCU - Get Outbound Emails to Hidden Cobra Threat Actors - Response Task,"This search returns the information of the users that sent emails to the accounts controlled by the Hidden Cobra Threat Actors: specifically to `misswang8107@gmail.com`, and from `redhat@gmail.com`.","| from datamodel Email.All_Email | search recipient=misswang8107@gmail.com OR src_user=redhat@gmail.com | stats count earliest(_time) as firstTime, latest(_time) as lastTime values(dest) values(src) by src_user recipient | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
ESCU - Get Parent Process Info - Response Task,This search queries the Endpoint data model to give you details about the parent process of a process running on a host which is under investigation. Enter the values of the process name in question and the dest,"| tstats `summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name = $process_name$ Processes.dest = $dest$ by Processes.user Processes.parent_process_name  Processes.process_name  | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`"
ESCU - Get Process File Activity - Response Task,This search returns the file activity for a specific process on a specific endpoint,"| tstats `security_content_summariesonly` values(Filesystem.file_name) as file_name values(Filesystem.dest) as dest, values(Filesystem.process_id) as process_id from datamodel=Endpoint.Filesystem where Filesystem.dest=$dest$ Filesystem.process_id=$process_id$ by Filesystem.file_path, Filesystem.action, _time | `drop_dm_object_name(Filesystem)`  | sort _time | table _time, process_id, dest, action, file_name, file_path"
ESCU - Get Process Info - Response Task,"This search queries the Endpoint data model to give you details about the process running on a host which is under investigation. To gather the process info, enter the values for the process name in question and the destination IP address.",| tstats `security_content_summariesonly` count min(_time)  max(_time) as lastTime from datamodel=Endpoint.Processes where Proceses.dest=$dest$ Proceses.process_name=$process_name$ by Processes.parent_process Processes.process_name Processes.user Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`
ESCU - Get Process Information For Port Activity - Response Task,This search will return information about the process associated with observed network traffic to a specific destination port from a specific host.,| tstats `security_content_summariesonly` count min(_time)  max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.dest = $dest$ by Processes.process_name Processes.user Processes.dest Processes.process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | search [| tstats `security_content_summariesonly` count from datamodel=Endpoint.Ports where Ports.dest_port=$dest_port$ by Ports.process_id Ports.src  | `drop_dm_object_name(Ports)` | rename src as dest]
ESCU - Get Process Registry Activity - Response Task,This search returns the registry activity for a specific process on a specific endpoint,"| tstats `security_content_summariesonly` values(Registry.registry_key_name) as registry_key_name, values(Registry.dest) as dest, values(Registry.process_id) as process_id from datamodel=Endpoint.Registry where Registry.process_id=$process_id$ AND Registry.dest=$dest$ by Registry.registry_path, Registry.action, _time | `drop_dm_object_name(Registry)` | sort _time | table _time, process_id, dest, action, registry_key_name, registry_path"
ESCU - Get Process Responsible For The DNS Traffic - Response Task,"While investigating, an analyst will want to know what process and parent_process is responsible for generating suspicious DNS traffic. Use the following search and enter the value of `dest` in the search to get specific details on the process responsible for creating the DNS traffic.",| tstats `security_content_summariesonly` count min(_time)  max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.dest = $dest$ by Processes.parent_process Processes.process_name Processes.user Processes.dest Processes.process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | search [| tstats `security_content_summariesonly` count from datamodel=Endpoint.Ports where Ports.dest_port=53 by Ports.process_id Ports.src | `drop_dm_object_name(Ports)` | rename src as dest]
ESCU - Get Registry Activities - Response Task,This search queries the Endpoint Datamodel to give you details of the latest registry values for a specific destination computer.,"| tstats `security_content_summariesonly` values(Registry.registry_path) as registry_path values(Registry.registry_key_name) as registry_key_name count FROM datamodel=Endpoint.Registry where Registry.dest = ""$dest$"" by Registry.process_id Registry.dest | `drop_dm_object_name(""Registry"")` | join [| tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name = reg.exe by Processes.process_id | `drop_dm_object_name(""Processes"")`]"
ESCU - Get Risk Modifiers For Endpoint - Response Task,"For the last 7 days, the search will query the Risk data model in Splunk Enterprise Security and calculate the count, sum of the risk\_scores, names of the correlation searches that contributed to create a risk score for a specific endpoint(machine\_name)",| from datamodel:Risk.All_Risk | search risk_object_type=system risk_object=$dest$ | stats count sum(risk_score) as risk_score values(search_name)  min(_time) as firstTime max(_time) as lastTime by risk_object | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
ESCU - Get Risk Modifiers For User - Response Task,"For the last 7 days, the search will query the Risk data model in Splunk Enterprise Security and calculate the count, sum of the risk_scores, names of the correlation searches that contributed to create a risk score for a specific user",| from datamodel:Risk.All_Risk | search risk_object_type=user risk_object=$user$ | stats count sum(risk_score) as risk_score values(search_name)  min(_time) as firstTime max(_time) as lastTime by risk_object |`security_content_ctime(firstTime)` |`security_content_ctime(lastTime)`
ESCU - Get Sysmon WMI Activity for Host - Response Task,This search queries Sysmon WMI events for the host of interest.,"sourcetype=""XmlWinEventLog:Microsoft-Windows-Sysmon/Operational"" EventCode>18 EventCode<22 host=$dest$ | rename host as dest | table _time, dest, user, Name, Operation, EventType, Type, Query, Consumer, Filter"
ESCU - Get Update Logs For Endpoint - Response Task,This search will tell you give you the update logs for a specific endpoint for the last week.,"| from datamodel Updates.Updates  | search (vendor_product=""Microsoft Windows"" OR vendor_product=""OSX:Update"" OR vendor_product=""Linux:Update"") dest=$dest$"
ESCU - Get User Information from Identity Table - Response Task,Gather more information about the user identified in the Notable Event.,"| `identities` | search identity=$user$ | table _time, identity, first, last, email, category, watchlist"
ESCU - Get Vulnerability Logs For Endpoint - Response Task,This search will show you any vulnerabilities noted for a specific endpoint for the last week.,| from datamodel Vulnerabilities.Vulnerabilities | search dest=$dest$
ESCU - Get Web Session Information via session id - Response Task,"This search helps an analyst investigate a notable event to find out more about a specific web session. The search looks for a specific web session ID in the HTTP web traffic and outputs the URL and user agents, grouped by source IP address and HTTP status code.",| search sourcetype=stream:http $session_id$ | stats values(url) values(http_user_agent) by src_ip status
ESCU - Hiding Files And Directories With Attrib exe - Rule,"Attackers leverage an existing Windows binary, attrib.exe, to mark specific as hidden by using specific flags so that the victim does not see the file.  The search looks for specific command-line arguments to detect the use of attrib.exe to hide files.","| tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=attrib.exe (Processes.process=*+h*) by Processes.parent_process Processes.process_name Processes.user Processes.dest | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`| `hiding_files_and_directories_with_attrib_exe_filter`"
ESCU - Hosts receiving high volume of network traffic from email server - Rule,This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.,"| tstats `security_content_summariesonly` sum(All_Traffic.bytes_in) as bytes_in from datamodel=Network_Traffic where All_Traffic.dest_category=email_server by All_Traffic.src_ip _time span=1d | `drop_dm_object_name(""All_Traffic"")` | eventstats avg(bytes_in) as avg_bytes_in stdev(bytes_in) as stdev_bytes_in | eventstats count as num_data_samples avg(eval(if(_time < relative_time(now(), ""@d""), bytes_in, null))) as per_source_avg_bytes_in stdev(eval(if(_time < relative_time(now(), ""@d""), bytes_in, null))) as per_source_stdev_bytes_in by src_ip | eval minimum_data_samples = 4, deviation_threshold = 3 | where num_data_samples >= minimum_data_samples AND bytes_in > (avg_bytes_in + (deviation_threshold * stdev_bytes_in)) AND bytes_in > (per_source_avg_bytes_in + (deviation_threshold * per_source_stdev_bytes_in)) AND _time >= relative_time(now(), ""@d"") | eval num_standard_deviations_away_from_server_average = round(abs(bytes_in - avg_bytes_in) / stdev_bytes_in, 2), num_standard_deviations_away_from_client_average = round(abs(bytes_in - per_source_avg_bytes_in) / per_source_stdev_bytes_in, 2) | table src_ip, _time, bytes_in, avg_bytes_in, per_source_avg_bytes_in, num_standard_deviations_away_from_server_average, num_standard_deviations_away_from_client_average | `hosts_receiving_high_volume_of_network_traffic_from_email_server_filter`"
ESCU - Identify New User Accounts - Rule,This detection search will help profile user accounts in your environment by identifying newly created accounts that have been added to your network in the past week.,"| from datamodel Identity_Management.All_Identities  | eval empStatus=case((now()-startDate)<604800, ""Accounts created in last week"") | search empStatus=""Accounts created in last week""| `security_content_ctime(endDate)` | `security_content_ctime(startDate)`| table identity empStatus endDate startDate | `identify_new_user_accounts_filter`"
ESCU - Identify Systems Creating Remote Desktop Traffic,This search counts the numbers of times the system has generated remote desktop traffic.,"| tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=3389 by All_Traffic.src | `drop_dm_object_name(""All_Traffic"")` | sort - count"
ESCU - Identify Systems Receiving Remote Desktop Traffic,This search counts the numbers of times the system has created remote desktop traffic,"| tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=3389 by All_Traffic.dest | `drop_dm_object_name(""All_Traffic"")` | sort - count"
ESCU - Identify Systems Using Remote Desktop,"This search counts the numbers of times the remote desktop process, mstsc.exe, has run on each system.","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Processes where Processes.process_name=""*mstsc.exe*"" by Processes.dest Processes.process_name | `drop_dm_object_name(Processes)` | sort - count"
ESCU - Investigate AWS activities via region name - Response Task,"This search lists all the user activities logged by CloudTrail for a specific region in question and will create a table of the values of parameters requested, the type of the event and the response from the AWS API by each user",| search sourcetype=aws:cloudtrail awsRegion=$awsRegion$| rename requestParameters.instancesSet.items{}.instanceId as instanceId| stats values(eventName) by userName instanceId
ESCU - Investigate AWS ECR container listing activity - Response Task,"This search lists all the users performing a list image operation on AWS Elastic Container Registry. Listing source user, image id, source IP, user type, http user agent. This search also gives counts of unique user agents per listing source.","|tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Cloud_Infrastructure.Compute where Compute.user_type!=""AssumeRole"" AND Compute.event_name=""ListImages"" by Compute.image_id Compute.src_user Compute.src Compute.http_user_agent Compute.user_type | rename ""Compute.*"" as * |stats values(http_user_agent) as http_user_agent distinct_count(http_user_agent) as unique_ua_count by src_user, image_id, src, user_type | where unique_ua_count > 1"
ESCU - Investigate AWS User Activities by user field - Response Task,"This search lists all the logged CloudTrail activities by a specific user and will create a table containing the source of the user, the region of the activity, the name and type of the event, the action taken, and the user's identity information.",| search sourcetype=aws:cloudtrail user=$user$ | table _time userIdentity.type userIdentity.userName userIdentity.arn aws_account_id src awsRegion eventName eventType
ESCU - Investigate Cloud Compute Instance Activities - Response Task,This search returns a logs of events that operated on the compute instance.,| from datamodel:Cloud_Infrastructure.Compute | search dest=$dest$ | fields - _*
ESCU - Investigate Failed Logins for Multiple Destinations - Response Task,This search returns failed logins to multiple destinations by user.,"| tstats count `security_content_summariesonly` earliest(_time) as first_login latest(_time) as last_login dc(Authentication.dest) AS distinct_count_dest values(Authentication.dest) AS Authentication.dest values(Authentication.app) AS Authentication.app  from datamodel=Authentication where Authentication.action=failure by Authentication.user | where distinct_count_dest > 1 | `security_content_ctime(first_login)` | `security_content_ctime(last_login)` | `drop_dm_object_name(""Authentication"")`"
ESCU - Investigate Network Traffic From src ip - Response Task,This search allows you to find all the network traffic from a specific IP address.,| from datamodel Network_Traffic.All_Traffic | search src_ip=$src_ip$
ESCU - Investigate Okta Activity by app - Response Task,This search returns all okta events associated with a specific app,"eventtype=okta_log app=$app$ | rename client.geographicalContext.country as country, client.geographicalContext.state as state, client.geographicalContext.city as city | table _time, user, displayMessage, app, src_ip, state, city, result, outcome.reason"
ESCU - Investigate Okta Activity by IP Address - Response Task,This search returns all okta events from a specific IP address.,"eventtype=okta_log src_ip={src_ip} | rename client.geographicalContext.country as country, client.geographicalContext.state as state, client.geographicalContext.city as city | table _time, user, displayMessage, app, src_ip, state, city, result, outcome.reason"
ESCU - Investigate Pass the Hash Attempts - Response Task,This search hunts for dumped NTLM hashes used for pass the hash.,`wineventlog_security` EventCode=4624 Logon_Type=9 AuthenticationPackageName=Negotiate | stats count earliest(_time) as first_login latest(_time) as last_login by src_user dest | `security_content_ctime(first_login)` | `security_content_ctime(last_login)`
ESCU - Investigate Pass the Ticket Attempts - Response Task,This search hunts for dumped kerberos ticket from LSASS memory.,"`wineventlog_security` EventCode=4768 OR EventCode=4769 | rex field=user ""(?<new_user>[^\@]+)"" | stats count BY new_user, dest, EventCode | stats max(count) AS max_count sum(count) AS sum_count BY new_user, dest | where sum_count/max_count!=2 | rename new_user AS user"
ESCU - Investigate Previous Unseen User - Response Task,"This search returns previous unseen user, which didn't log in for 30 days.","| tstats count `security_content_summariesonly` earliest(_time) as first_login latest(_time) as last_login values(Authentication.dest) AS Authentication.dest values(Authentication.app) AS Authentication.app values(Authentication.action) AS Authentication.action from datamodel=Authentication where Authentication.action=success by _time, Authentication.user | bucket _time span=30d | stats count min(first_login) as first_login max(last_login) as last_login values(Authentication.dest) AS Authentication.dest by Authentication.user | where count=1 | where first_login >= relative_time(now(), ""-30d"") | `security_content_ctime(first_login)` | `security_content_ctime(last_login)` | `drop_dm_object_name(""Authentication"")`"
ESCU - Investigate Successful Remote Desktop Authentications - Response Task,"This search returns the source, destination, and user for all successful remote-desktop authentications. A successful authentication after a brute-force attack on a destination machine is suspicious behavior.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Authentication where Authentication.signature_id=4624 Authentication.app=win:remote by Authentication.src Authentication.dest Authentication.app Authentication.user Authentication.signature Authentication.src_nt_domain | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(""Authentication"")`| table firstTime lastTime src src_nt_domain dest user app count | sort count"
ESCU - Investigate Suspicious Strings in HTTP Header - Response Task,"This search helps an analyst investigate a notable event related to a potential Apache Struts exploitation. To investigate, we will want to isolate and analyze the ""payload"" or the commands that were passed to the vulnerable hosts by creating a few regular expressions to carve out the commands focusing on common keywords from the payload, such as cmd.exe, /bin/bash and whois. The search returns these suspicious strings found in the HTTP logs of the system of interest.","| search sourcetype=stream:http src_ip=""$src_ip$"" dest_ip=""$dest_ip$"" | eval cs_content_type_length = len(cs_content_type) | search cs_content_type_length > 100 | rex field=""cs_content_type"" (?<suspicious_strings>cmd.exe) | eval suspicious_strings_found=if(match(cs_content_type, ""application""), ""True"", ""False"")  | rename suspicious_strings_found AS ""Suspicious Content-Type Found"" | fields ""Suspicious Content-Type Found"", dest_ip, src_ip, suspicious_strings, cs_content_type, cs_content_type_length, url"
ESCU - Investigate User Activities In All Cloud Regions - Response Task,This search lists all the logged cloud infrastructure activities by a specific cloud user,| from datamodel:Cloud_Infrastructure.Compute | search user=$src_user$ | fields - _*
ESCU - Investigate User Activities In Okta - Response Task,This search returns all okta events by a specific user,"eventtype=okta_log user=$user$ | rename client.geographicalContext.country as country, client.geographicalContext.state as state, client.geographicalContext.city as city | table _time, user, displayMessage, app, src_ip, state, city, result, outcome.reason"
ESCU - Investigate User Activities In Single Cloud Region - Response Task,This search lists all the logged cloud infrastructure activities by a specific cloud user in a specific cloud region,| from datamodel:Cloud_Infrastructure.Compute | search region=$region$ user=$src_user$ | fields - _*
ESCU - Investigate Web Activity From Host - Response Task,"This search allows you to find all the web activity from a specific host. During an investigation, it is important to profile web activity to characterize user or host activity.",| from datamodel Web.Web | search src=$dest$
ESCU - Investigate Web Activity From src ip - Response Task,"This search searches for all web activity from a specific host. During an investigation, it is important to profile web activity to characterize user or host activity.",| from datamodel Web.Web | search src=$src_ip$
ESCU - Investigate Web POSTs From src - Response Task,"This investigative search retrieves POST requests from a specified source IP or hostname. Identifying the POST requests, as well as their associated destination URLs and user agent(s), may help you scope and characterize the suspicious traffic.","| tstats `security_content_summariesonly` values(Web.url) as url from datamodel=Web by Web.src,Web.http_user_agent,Web.http_method | `drop_dm_object_name(""Web"")`| where like(src, ""$src$"") and like(http_method, ""POST"")"
ESCU - Kerberoasting spn request with RC4 encryption - Rule,This search detects a potential kerberoasting attack via service principal name requests,"`wineventlog_security` EventCode=4769 Ticket_Options=0x40810000 Ticket_Encryption_Type=0x17 | stats count min(_time) as firstTime max(_time) as lastTime by dest, service, service_id, Ticket_Encryption_Type, Ticket_Options | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `kerberoasting_spn_request_with_rc4_encryption_filter`"
ESCU - Kubernetes AWS detect most active service accounts by pod - Rule,"This search provides information on Kubernetes service accounts,accessing pods by IP address, verb and decision",`aws_cloudwatchlogs_eks` user.groups{}=system:serviceaccounts  objectRef.resource=pods | table  sourceIPs{} user.username userAgent verb annotations.authorization.k8s.io/decision  | top  sourceIPs{} user.username verb annotations.authorization.k8s.io/decision |`kubernetes_aws_detect_most_active_service_accounts_by_pod_filter`
ESCU - Kubernetes AWS detect RBAC authorization by account - Rule,"This search provides information on Kubernetes RBAC authorizations by accounts, this search can be modified by adding top to see both extremes of RBAC by accounts occurrences",`aws_cloudwatchlogs_eks` annotations.authorization.k8s.io/reason=* | table sourceIPs{} user.username userAgent annotations.authorization.k8s.io/reason | stats count by user.username annotations.authorization.k8s.io/reason | rare user.username annotations.authorization.k8s.io/reason |`kubernetes_aws_detect_rbac_authorization_by_account_filter`
ESCU - Kubernetes AWS detect sensitive role access - Rule,This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,`aws_cloudwatchlogs_eks` objectRef.resource=clusterroles OR clusterrolebindings sourceIPs{}!=::1 sourceIPs{}!=127.0.0.1  | table sourceIPs{} user.username user.groups{} objectRef.namespace requestURI annotations.authorization.k8s.io/reason | dedup user.username user.groups{} |`kubernetes_aws_detect_sensitive_role_access_filter`
ESCU - Kubernetes AWS detect service accounts forbidden failure access - Rule,"This search provides information on Kubernetes service accounts with failure or forbidden access status, this search can be extended by using top or rare operators to find trends or rarities in failure status, user agents, source IPs and request URI",`aws_cloudwatchlogs_eks` user.groups{}=system:serviceaccounts responseStatus.status = Failure | table sourceIPs{} user.username userAgent verb responseStatus.status requestURI | `kubernetes_aws_detect_service_accounts_forbidden_failure_access_filter`
ESCU - Kubernetes AWS detect suspicious kubectl calls - Rule,"This search provides information on anonymous Kubectl calls with IP, verb namespace and object access context",`aws_cloudwatchlogs_eks` userAgent=kubectl* sourceIPs{}!=127.0.0.1 sourceIPs{}!=::1 src_user=system:anonymous  | table  src_ip src_user verb userAgent requestURI  | stats  count by src_ip src_user verb userAgent requestURI |`kubernetes_aws_detect_suspicious_kubectl_calls_filter`
ESCU - Kubernetes Azure detect most active service accounts by pod namespace - Rule,"This search provides information on Kubernetes service accounts,accessing pods and namespaces by IP address and verb",`kubernetes_azure` category=kube-audit | spath input=properties.log | search user.groups{}=system:serviceaccounts* OR user.username=system.anonymous OR annotations.authorization.k8s.io/decision=allow  | table  sourceIPs{} user.username userAgent verb responseStatus.reason responseStatus.status properties.pod objectRef.namespace | top sourceIPs{} user.username verb responseStatus.status properties.pod objectRef.namespace |`kubernetes_azure_detect_most_active_service_accounts_by_pod_namespace_filter`
ESCU - Kubernetes Azure detect RBAC authorization by account - Rule,"This search provides information on Kubernetes RBAC authorizations by accounts, this search can be modified by adding rare or top to see both extremes of RBAC by accounts occurrences",sourcetype:mscs:storage:blob:json category=kube-audit | spath input=properties.log | search annotations.authorization.k8s.io/reason=* | table sourceIPs{} user.username userAgent annotations.authorization.k8s.io/reason |stats count by user.username annotations.authorization.k8s.io/reason | rare user.username annotations.authorization.k8s.io/reason |`kubernetes_azure_detect_rbac_authorization_by_account_filter`
ESCU - Kubernetes Azure detect sensitive object access - Rule,This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,`kubernetes_azure` category=kube-audit | spath input=properties.log| search objectRef.resource=secrets OR configmaps user.username=system.anonymous OR annotations.authorization.k8s.io/decision=allow  |table user.username user.groups{} objectRef.resource objectRef.namespace objectRef.name annotations.authorization.k8s.io/reason |dedup user.username user.groups{} |`kubernetes_azure_detect_sensitive_object_access_filter`
ESCU - Kubernetes Azure detect sensitive role access - Rule,This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,`kubernetes_azure` category=kube-audit | spath input=properties.log| search objectRef.resource=clusterroles OR clusterrolebindings | table sourceIPs{} user.username user.groups{} objectRef.namespace requestURI annotations.authorization.k8s.io/reason | dedup user.username user.groups{} |`kubernetes_azure_detect_sensitive_role_access_filter`
ESCU - Kubernetes Azure detect service accounts forbidden failure access - Rule,This search provides information on Kubernetes service accounts with failure or forbidden access status,`kubernetes_azure` category=kube-audit | spath input=properties.log | search user.groups{}=system:serviceaccounts*  responseStatus.reason=Forbidden | table  sourceIPs{} user.username userAgent verb responseStatus.reason responseStatus.status properties.pod objectRef.namespace  |`kubernetes_azure_detect_service_accounts_forbidden_failure_access_filter`
ESCU - Kubernetes Azure detect suspicious kubectl calls - Rule,"This search provides information on rare Kubectl calls with IP, verb namespace and object access context",`kubernetes_azure` category=kube-audit | spath input=properties.log | spath input=responseObject.metadata.annotations.kubectl.kubernetes.io/last-applied-configuration | search userAgent=kubectl* sourceIPs{}!=127.0.0.1 sourceIPs{}!=::1 | table sourceIPs{} verb userAgent user.groups{} objectRef.resource objectRef.namespace requestURI | rare sourceIPs{} verb userAgent user.groups{} objectRef.resource objectRef.namespace requestURI|`kubernetes_azure_detect_suspicious_kubectl_calls_filter`
ESCU - Kubernetes Azure pod scan fingerprint - Rule,"This search provides information of unauthenticated requests via source IP user agent, request URI and response status data against Kubernetes cluster pod in Azure",`kubernetes_azure` category=kube-audit | spath input=properties.log | search responseStatus.code=401 | table  sourceIPs{} userAgent verb requestURI responseStatus.reason properties.pod |`kubernetes_azure_pod_scan_fingerprint_filter`
ESCU - Kubernetes Azure scan fingerprint - Rule,"This search provides information of unauthenticated requests via source IP user agent, request URI and response status data against Kubernetes cluster in Azure",`kubernetes_azure` category=kube-audit | spath input=properties.log | search responseStatus.code=401 | table  sourceIPs{} userAgent verb requestURI responseStatus.reason |`kubernetes_azure_scan_fingerprint_filter`
ESCU - Kubernetes GCP detect most active service accounts by pod - Rule,"This search provides information on Kubernetes service accounts,accessing pods by IP address, verb and decision",`google_gcp_pubsub_message`  data.protoPayload.request.spec.group{}=system:serviceaccounts | table src_ip src_user http_user_agent data.protoPayload.request.spec.nonResourceAttributes.verb data.labels.authorization.k8s.io/decision data.protoPayload.response.spec.resourceAttributes.resource | top src_ip src_user http_user_agent data.labels.authorization.k8s.io/decision data.protoPayload.response.spec.resourceAttributes.resource |`kubernetes_gcp_detect_most_active_service_accounts_by_pod_filter`
ESCU - Kubernetes GCP detect RBAC authorizations by account - Rule,"This search provides information on Kubernetes RBAC authorizations by accounts, this search can be modified by adding top to see both extremes of RBAC by accounts occurrences",`google_gcp_pubsub_message` data.labels.authorization.k8s.io/reason=ClusterRoleBinding OR Clusterrole  | table src_ip src_user data.labels.authorization.k8s.io/decision data.labels.authorization.k8s.io/reason | rare src_user data.labels.authorization.k8s.io/reason |`kubernetes_gcp_detect_rbac_authorizations_by_account_filter`
ESCU - Kubernetes GCP detect sensitive object access - Rule,This search provides information on Kubernetes accounts accessing sensitve objects such as configmaps or secrets,`google_gcp_pubsub_message` data.protoPayload.authorizationInfo{}.resource=configmaps OR secrets  | table data.protoPayload.requestMetadata.callerIp src_user data.resource.labels.cluster_name data.protoPayload.request.metadata.namespace data.labels.authorization.k8s.io/decision | dedup data.protoPayload.requestMetadata.callerIp src_user data.resource.labels.cluster_name |`kubernetes_gcp_detect_sensitive_object_access_filter`
ESCU - Kubernetes GCP detect sensitive role access - Rule,This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,`google_gcp_pubsub_message` data.labels.authorization.k8s.io/reason=ClusterRoleBinding OR Clusterrole dest=apis/rbac.authorization.k8s.io/v1 src_ip!=::1  | table src_ip src_user http_user_agent data.labels.authorization.k8s.io/decision data.labels.authorization.k8s.io/reason | dedup src_ip src_user |`kubernetes_gcp_detect_sensitive_role_access_filter`
ESCU - Kubernetes GCP detect service accounts forbidden failure access - Rule,"This search provides information on Kubernetes service accounts with failure or forbidden access status, this search can be extended by using top or rare operators to find trends or rarities in failure status, user agents, source IPs and request URI",`google_gcp_pubsub_message` system:serviceaccounts data.protoPayload.response.status.allowed!=* | table src_ip src_user http_user_agent data.protoPayload.response.spec.resourceAttributes.namespace data.resource.labels.cluster_name data.protoPayload.response.spec.resourceAttributes.verb  data.protoPayload.request.status.allowed data.protoPayload.response.status.reason data.labels.authorization.k8s.io/decision | dedup src_ip src_user | `kubernetes_gcp_detect_service_accounts_forbidden_failure_access_filter`
ESCU - Kubernetes GCP detect suspicious kubectl calls - Rule,"This search provides information on anonymous Kubectl calls with IP, verb namespace and object access context",`google_gcp_pubsub_message` data.protoPayload.requestMetadata.callerSuppliedUserAgent=kubectl* src_user=system:unsecured OR src_user=system:anonymous | table src_ip src_user data.protoPayload.requestMetadata.callerSuppliedUserAgent data.protoPayload.authorizationInfo{}.granted object_path |dedup src_ip src_user |`kubernetes_gcp_detect_suspicious_kubectl_calls_filter`
ESCU - Large Volume of DNS ANY Queries - Rule,The search is used to identify attempts to use your DNS Infrastructure for DDoS purposes via a DNS amplification attack leveraging ANY queries.,"| tstats `security_content_summariesonly` count from datamodel=Network_Resolution where nodename=DNS ""DNS.message_type""=""QUERY"" ""DNS.record_type""=""ANY"" by ""DNS.dest"" | `drop_dm_object_name(""DNS"")` | where count>200 | `large_volume_of_dns_any_queries_filter`"
ESCU - MacOS - Re-opened Applications - Rule,This search looks for processes referencing the plist files that determine which applications are re-opened when a user reboots their machine.,"| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*com.apple.loginwindow*"" by Processes.user Processes.process_name Processes.parent_process_name Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `macos___re_opened_applications_filter`"
ESCU - Malicious PowerShell Process - Connect To Internet With Hidden Window - Rule,"This search looks for PowerShell processes started with parameters to modify the execution policy of the run, run in a hidden window, and connect to the Internet. This combination of command-line options is suspicious because it's overriding the default PowerShell execution policy, attempts to hide its activity from the user, and connects to the Internet.","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process=""*-Exec*"" process=""*-WindowStyle*"" process=""*hidden*"" process=""*New-Object*"" process=""*System.Net.WebClient*"" | `malicious_powershell_process___connect_to_internet_with_hidden_window_filter`"
ESCU - Malicious PowerShell Process - Encoded Command - Rule,"This search looks for PowerShell processes that have encoded the script within the command-line. Malware has been seen using this parameter, as it obfuscates the code and makes it relatively easy to pass a script on the command-line.",| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = powershell.exe (Processes.process=*-EncodedCommand* OR Processes.process=*-enc*) by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `malicious_powershell_process___encoded_command_filter`
ESCU - Malicious PowerShell Process - Execution Policy Bypass - Rule,This search looks for PowerShell processes started with parameters used to bypass the local execution policy for scripts. These parameters are often observed in attacks leveraging PowerShell scripts as they override the default PowerShell execution policy.,"| tstats `security_content_summariesonly` values(Processes.process_id) as process_id, values(Processes.parent_process_id) as parent_process_id values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe AND (Processes.process=""* -ex*"" OR Processes.process=""* bypass *"") by Processes.process_id, Processes.user, Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `malicious_powershell_process___execution_policy_bypass_filter`"
ESCU - Malicious PowerShell Process - Multiple Suspicious Command-Line Arguments - Rule,"This search looks for PowerShell processes started with a base64 encoded command-line passed to it, with parameters to modify the execution policy for the process, and those that prevent the display of an interactive prompt to the user. This combination of command-line options is suspicious because it overrides the default PowerShell execution policy, attempts to hide itself from the user, and passes an encoded script to be run on the command-line.",| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| search (process=*-EncodedCommand* OR process=*-enc*) process=*-Exec* AND process=*-NonI* | `malicious_powershell_process___multiple_suspicious_command_line_arguments_filter`
ESCU - Malicious PowerShell Process With Obfuscation Techniques - Rule,This search looks for PowerShell processes launched with arguments that have characters indicative of obfuscation on the command-line.,"| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest Processes.process | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| eval num_obfuscation = (mvcount(split(process, ""`""))-1) + (mvcount(split(process, ""^""))-1) | `malicious_powershell_process_with_obfuscation_techniques_filter` | search num_obfuscation > 0"
ESCU - Monitor DNS For Brand Abuse - Rule,This search looks for DNS requests for faux domains similar to the domains that you want to have monitored for abuse.,"| tstats `security_content_summariesonly` values(DNS.answer) as IPs min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query | `drop_dm_object_name(""DNS"")` | `security_content_ctime(firstTime)`| `brand_abuse_dns` | `monitor_dns_for_brand_abuse_filter`"
ESCU - Monitor Email For Brand Abuse - Rule,This search looks for emails claiming to be sent from a domain similar to one that you want to have monitored for abuse.,"| tstats `security_content_summariesonly` values(All_Email.recipient) as recipients, min(_time) as firstTime, max(_time) as lastTime from datamodel=Email by All_Email.src_user, All_Email.message_id | `drop_dm_object_name(""All_Email"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | eval temp=split(src_user, ""@"") | eval email_domain=mvindex(temp, 1) | lookup update=true brandMonitoring_lookup domain as email_domain OUTPUT domain_abuse | search domain_abuse=true | table message_id, src_user, email_domain, recipients, firstTime, lastTime | `monitor_email_for_brand_abuse_filter`"
ESCU - Monitor Registry Keys for Print Monitors - Rule,"This search looks for registry activity associated with modifications to the registry key `HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors`. In this scenario, an attacker can load an arbitrary .dll into the print-monitor registry by giving the full path name to the after.dll. The system will execute the .dll with elevated (SYSTEM) permissions and will persist after reboot.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.action=modified AND Registry.registry_path=""*CurrentControlSet\\Control\\Print\\Monitors*"" by Registry.dest, Registry.registry_key_name Registry.status Registry.user Registry.registry_path Registry.action | `drop_dm_object_name(Registry)` | `monitor_registry_keys_for_print_monitors_filter`"
ESCU - Monitor Successful Backups,This search is intended to give you a feel for how often successful backups are conducted in your environment. Fluctuations in these numbers will allow you to determine when you should investigate.,"`netbackup` ""Disk/Partition backup completed successfully."" | bucket _time span=1d | stats dc(COMPUTERNAME) as count values(COMPUTERNAME) as dest by _time, MESSAGE"
ESCU - Monitor Unsuccessful Backups,This search is intended to give you a feel for how often backup failures happen in your environments.  Fluctuations in these numbers will allow you to determine when you should investigate.,"`netbackup` ""An error occurred, failed to backup."" | bucket _time span=1d | stats dc(COMPUTERNAME) as count values(COMPUTERNAME) as dest by _time, MESSAGE"
ESCU - Monitor Web Traffic For Brand Abuse - Rule,This search looks for Web requests to faux domains similar to the one that you want to have monitored for abuse.,"| tstats `security_content_summariesonly` values(Web.url) as urls min(_time) as firstTime from datamodel=Web by Web.src | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `brand_abuse_web` | `monitor_web_traffic_for_brand_abuse_filter`"
ESCU - Multiple Okta Users With Invalid Credentails From The Same IP - Rule,This search detects Okta login failures due to bad credentials for multiple users originating from the same ip address.,"`okta` outcome.reason=INVALID_CREDENTIALS | rename client.geographicalContext.country as country, client.geographicalContext.state as state, client.geographicalContext.city as city | stats min(_time) as firstTime max(_time) as lastTime dc(user) as distinct_users values(user) as users by src_ip, displayMessage, outcome.reason, country, state, city  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` |  search distinct_users > 5| `multiple_okta_users_with_invalid_credentails_from_the_same_ip_filter`"
ESCU - New container uploaded to AWS ECR - Rule,"This searches show information on uploaded containers including source user, image id, source IP user type, http user agent, region, first time, last time of operation (PutImage). These searches are based on Cloud Infrastructure Data Model.","| tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Cloud_Infrastructure.Compute where Compute.user_type!=""AssumeRole"" AND Compute.http_user_agent=""AWS Internal"" AND Compute.event_name=""PutImage"" by Compute.image_id Compute.src_user Compute.src Compute.region Compute.msg Compute.user_type | `drop_dm_object_name(""Compute"")` | `new_container_uploaded_to_aws_ecr_filter`"
ESCU - No Windows Updates in a time frame - Rule,This search looks for Windows endpoints that have not generated an event indicating a successful Windows update in the last 60 days. Windows updates are typically released monthly and applied shortly thereafter. An endpoint that has not successfully applied an update in this time frame indicates the endpoint is not regularly being patched for some reason.,"| tstats `security_content_summariesonly` max(_time) as lastTime from datamodel=Updates where Updates.status=Installed Updates.vendor_product=""Microsoft Windows"" by Updates.dest Updates.status Updates.vendor_product | rename Updates.dest as Host | rename Updates.status as ""Update Status"" | rename Updates.vendor_product as Product | eval isOutlier=if(lastTime <= relative_time(now(), ""-60d@d""), 1, 0)  | `security_content_ctime(lastTime)`  | search isOutlier=1 | rename lastTime as ""Last Update Time"", | table Host, ""Update Status"", Product, ""Last Update Time"" | `no_windows_updates_in_a_time_frame_filter`"
ESCU - Okta Account Lockout Events - Rule,Detect Okta user lockout events,"`okta` displayMessage=""Max sign in attempts exceeded"" | rename client.geographicalContext.country as country, client.geographicalContext.state as state, client.geographicalContext.city as city | table _time, user, country, state, city, src_ip | `okta_account_lockout_events_filter`"
ESCU - Okta Failed SSO Attempts - Rule,Detect failed Okta SSO events,"`okta` displayMessage=""User attempted unauthorized access to app"" | stats  min(_time) as firstTime max(_time) as lastTime values(app) as Apps count by user, result ,displayMessage, src_ip | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `okta_failed_sso_attempts_filter`"
ESCU - Okta User Logins From Multiple Cities - Rule,This search detects logins from the same user from different states in a 24 hour period.,"`okta` displayMessage=""User login to Okta"" client.geographicalContext.city!=null | stats min(_time) as firstTime max(_time) as lastTime dc(client.geographicalContext.city) as locations values(client.geographicalContext.city) as cities values(client.geographicalContext.state) as states by user | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `okta_user_logins_from_multiple_cities_filter` | search locations > 1"
ESCU - Open Redirect in Splunk Web - Rule,"This search allows you to look for evidence of exploitation for CVE-2016-4859, the Splunk Open Redirect Vulnerability.","index=_internal sourcetype=splunk_web_access return_to=""/%09/*"" | `open_redirect_in_splunk_web_filter`"
ESCU - Osquery pack - ColdRoot detection - Rule,This search looks for ColdRoot events from the osx-attacks osquery pack.,"| from datamodel Alerts.Alerts | search app=osquery:results (name=pack_osx-attacks_OSX_ColdRoot_RAT_Launchd OR name=pack_osx-attacks_OSX_ColdRoot_RAT_Files) | rename columns.path as path | bucket _time span=30s | stats count(path) by _time, host, user, path | `osquery_pack___coldroot_detection_filter`"
ESCU - Overwriting Accessibility Binaries - Rule,Microsoft Windows contains accessibility features that can be launched with a key combination before a user has logged in. An adversary can modify or replace these programs so they can get a command prompt or backdoor without logging in to the system. This search looks for modifications to these binaries.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem where (Filesystem.file_path=*\\Windows\\System32\\sethc.exe* OR Filesystem.file_path=*\\Windows\\System32\\utilman.exe* OR Filesystem.file_path=*\\Windows\\System32\\osk.exe* OR Filesystem.file_path=*\\Windows\\System32\\Magnify.exe* OR Filesystem.file_path=*\\Windows\\System32\\Narrator.exe* OR Filesystem.file_path=*\\Windows\\System32\\DisplaySwitch.exe* OR Filesystem.file_path=*\\Windows\\System32\\AtBroker.exe*) by Filesystem.file_name Filesystem.dest | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `overwriting_accessibility_binaries_filter`
ESCU - Previously seen API call per user roles in CloudTrail,"This search looks for successful API calls made by different user roles, then creates a baseline of the earliest and latest times we have encountered this user role. It also returns the name of the API call in our dataset--grouped by user role and name of the API call--that occurred within the last 30 days. In this support search, we are only looking for events where the user identity is Assumed Role.",`cloudtrail` eventType=AwsApiCall errorCode=success userIdentity.type=AssumedRole | stats earliest(_time) as earliest latest(_time) as latest by userName eventName | outputlookup previously_seen_api_calls_from_user_roles | stats count
ESCU - Previously Seen AWS Cross Account Activity,"This search looks for **AssumeRole** events where the requesting account differs from the requested account, then writes these relationships to a lookup file.","`cloudtrail` eventName=AssumeRole | spath output=requestingAccountId path=userIdentity.accountId | spath output=requestedAccountId path=resources{}.accountId | search requestingAccountId=* | where requestingAccountId!=requestedAccountId | stats earliest(_time) as firstTime latest(_time) as lastTime by requestingAccountId, requestedAccountId | outputlookup previously_seen_aws_cross_account_activity | stats count"
ESCU - Previously Seen AWS Provisioning Activity Sources,This search builds a table of the first and last times seen for every IP address (along with its physical location) previously associated with cloud-provisioning activity. This is broadly defined as any event that runs or creates something.,"`cloudtrail` (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats count"
ESCU - Previously Seen AWS Regions,This search looks for CloudTrail events where an AWS instance is started and creates a baseline of most recent time (latest) and the first time (earliest) we've seen this region in our dataset grouped by the value awsRegion for the last 30 days,`cloudtrail` StartInstances | stats earliest(_time) as earliest latest(_time) as latest by awsRegion | outputlookup previously_seen_aws_regions.csv | stats count
ESCU - Previously Seen Cloud Compute Creations By User,This search builds a table of previously seen users that have launched a cloud compute instance.,"| tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `previously_seen_cloud_compute_creations_by_user_input_filter` by Compute.src_user | `drop_dm_object_name(""Compute"")` | outputlookup previously_seen_cloud_compute_creations_by_user | stats count"
ESCU - Previously Seen Cloud Compute Images,This search builds a table of previously seen images used to launch cloud compute instances,"| tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `previously_seen_cloud_compute_image_input_filter` by Compute.image_id | `drop_dm_object_name(""Compute"")` | outputlookup previously_seen_cloud_compute_images | stats count"
ESCU - Previously Seen Cloud Compute Instance Types,This search builds a table of previously seen cloud compute instance types,"| tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `previously_seen_cloud_compute_instance_types_input_filter` by Compute.instance_type | `drop_dm_object_name(""Compute"")` | outputlookup previously_seen_cloud_compute_instance_types | stats count"
ESCU - Previously Seen Cloud Regions,"This search looks for cloud compute events where a compute instance is started and creates a baseline of most recent time, `lastTime` and the first time `firstTime` we've seen this region in our dataset grouped by the region for the last 30 days","| tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=start `previously_seen_cloud_regions_input_filter` by Compute.region | `drop_dm_object_name(""Compute"")` | outputlookup previously_seen_cloud_regions | stats count"
ESCU - Previously seen command line arguments,"This search looks for command-line arguments where `cmd.exe /c` is used to execute a program, then creates a baseline of the earliest and latest times we have encountered this command-line argument in our dataset within the last 30 days.","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe AND Processes.process=""* /c *"" by Processes.process | `drop_dm_object_name(Processes)`"
ESCU - Previously Seen EC2 AMIs,This search builds a table of previously seen AMIs used to launch EC2 instances,`cloudtrail` eventName=RunInstances errorCode=success | rename requestParameters.instancesSet.items{}.imageId as amiID | stats earliest(_time) as firstTime latest(_time) as lastTime by amiID | outputlookup previously_seen_ec2_amis.csv | stats count
ESCU - Previously Seen EC2 Instance Types,This search builds a table of previously seen EC2 instance types,"`cloudtrail` eventName=RunInstances errorCode=success | rename requestParameters.instanceType as instanceType | fillnull value=""m1.small"" instanceType | stats earliest(_time) as earliest latest(_time) as latest by instanceType | outputlookup previously_seen_ec2_instance_types.csv | stats count"
ESCU - Previously Seen EC2 Launches By User,This search builds a table of previously seen ARNs that have launched a EC2 instance.,`cloudtrail` eventName=RunInstances errorCode=success | rename userIdentity.arn as arn | stats earliest(_time) as firstTime latest(_time) as lastTime by arn | outputlookup previously_seen_ec2_launches_by_user.csv | stats count
ESCU - Previously Seen EC2 Modifications By User,This search builds a table of previously seen ARNs that have launched a EC2 instance.,`cloudtrail` `ec2_modification_api_calls` errorCode=success | spath output=arn userIdentity.arn | stats earliest(_time) as firstTime latest(_time) as lastTime by arn | outputlookup previously_seen_ec2_modifications_by_user | stats count
ESCU - Previously Seen Running Windows Services - Initial,This collects the services that have been started across your entire enterprise.,"`wineventlog_system` EventCode=7036 | rex field=Message ""The (?<service>[-\(\)\s\w]+) service entered the (?<state>\w+) state"" | where state=""running"" | stats earliest(_time) as firstTimeSeen, latest(_time) as lastTimeSeen by service | outputlookup previously_seen_running_windows_services"
ESCU - Previously Seen Running Windows Services - Update,This search returns the first and last time a Windows service was seen across your enterprise within the last hour. It then updates this information with historical data and filters out Windows services pairs that have not been seen within the specified time window. This updated table is then cached.,"`wineventlog_system` EventCode=7036 | rex field=Message ""The (?<service>[-\(\)\s\w]+) service entered the (?<state>\w+) state"" | where state=""running"" | stats earliest(_time) as firstTimeSeen, latest(_time) as lastTimeSeen by service | inputlookup previously_seen_running_windows_services append=t | stats min(firstTimeSeen) as firstTimeSeen, max(lastTimeSeen) as lastTimeSeen by service | where lastTimeSeen > relative_time(now(), ""`previously_seen_windows_service_forget_window`"") | outputlookup previously_seen_running_windows_services"
ESCU - Previously seen S3 bucket access by remote IP,"This search looks for successful access to S3 buckets from remote IP addresses, then creates a baseline of the earliest and latest times we have encountered this remote IP within the last 30 days. In this support search, we are only looking for S3 access events where the HTTP response code from AWS is ""200""",`aws_s3_accesslogs` http_status=200  | stats  earliest(_time) as earliest latest(_time) as latest by bucket_name remote_ip | outputlookup previously_seen_S3_access_from_remote_ip | stats count
ESCU - Previously seen users in CloudTrail,"This search looks for CloudTrail events where a user logs into the console, then creates a baseline of the latest and earliest times, City, Region, and Country we have encountered this user in our dataset, grouped by ARN, within the last 30 days.","`cloudtrail` eventName=ConsoleLogin | rename userIdentity.arn as user | iplocation src | eval City=if(City LIKE """",src,City),Region=if(Region LIKE """",src,Region) | stats earliest(_time) as firstTime latest(_time) as lastTime by user src City Region Country | outputlookup previously_seen_users_console_logins.csv | stats count"
ESCU - Previously seen users in CloudTrail - DM,"This search looks for CloudTrail events where a user logs into the console, then creates a baseline of the latest and earliest times, City, Region, and Country we have encountered this user in our dataset, grouped by username, within the last 30 days.",| tstats earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Authentication where Authentication.signature=ConsoleLogin by Authentication.user Authentication.src | iplocation Authentication.src | rename Authentication.user as user Authentication.src as src | table user src City Region Country firstTime lastTime | outputlookup previously_seen_users_console_logins.csv | stats count
ESCU - Previously Seen Zoom Child Processes - Initial,This search returns the first and last time a process was seen per endpoint with a parent process of zoom.exe (Windows) or zoom.us (macOS). This table is then cached.,"| tstats `security_content_summariesonly` min(_time) as firstTimeSeen max(_time) as lastTimeSeen from datamodel=Endpoint.Processes where (Processes.parent_process_name=zoom.exe OR Processes.parent_process_name=zoom.us) by Processes.process_name Processes.dest| `drop_dm_object_name(Processes)` | table dest, process_name, firstTimeSeen, lastTimeSeen | outputlookup zoom_first_time_child_process"
ESCU - Previously Seen Zoom Child Processes - Update,This search returns the first and last time a process was seen per endpoint with a parent process of zoom.exe (Windows) or zoom.us (macOS) within the last hour. It then updates this information with historical data and filters out proces_name and endpoint pairs that have not been seen within the specified time window. This updated table is outputed to disk.,"| tstats `security_content_summariesonly` min(_time) as firstTimeSeen max(_time) as lastTimeSeen from datamodel=Endpoint.Processes where (Processes.parent_process_name=zoom.exe OR Processes.parent_process_name=zoom.us) by Processes.process_name Processes.dest| `drop_dm_object_name(Processes)` | table firstTimeSeen, lastTimeSeen, process_name, dest | inputlookup zoom_first_time_child_process append=t | stats min(firstTimeSeen) as firstTimeSeen max(lastTimeSeen) as lastTimeSeen by process_name, dest | where lastTimeSeen > relative_time(now(), ""`previously_seen_zoom_child_processes_forget_window`"") | outputlookup zoom_first_time_child_process"
ESCU - Process Chain Analysis - Response Task,"Analyze the Process Chain and identify the malicious file. By analyzing the parent process guid and searching for the process guid, the spawning process chain can be identified.",`sysmon` EventCode=1 NOT process=*Splunk* | rename process_guid AS out_process_guid process_name AS out_process_name parent_process_guid AS out_parent_process_guid parent_process_name AS out_parent_process_name | stats count by out_process_guid out_process_name out_parent_process_guid out_parent_process_name | eval join_process_guid = out_process_guid | join join_process_guid [ search `sysmon` process_guid={process_guid} EventCode=1 | rename process_name AS sub_process_name process_guid AS sub_process_guid parent_process_name AS sub_parent_process_name parent_process_guid AS sub_parent_process_guid | stats count by sub_process_name sub_process_guid sub_parent_process_name sub_parent_process_guid | eval join_process_guid = sub_parent_process_guid] | rename sub_process_guid AS process_guid sub_process_name AS process_name out_process_guid AS parent_process_guid out_process_name AS parent_process_name out_parent_process_guid AS grandparent_process_guid out_parent_process_name AS grandparent_process_name | stats count by process_guid process_name parent_process_guid parent_process_name grandparent_process_guid grandparent_process_name | head 1 | fields - count
ESCU - Process Execution via WMI - Rule,This search looks for processes launched via WMI.,"| tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name = *WmiPrvSE.exe by Processes.user Processes.dest Processes.process_name  | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `process_execution_via_wmi_filter`"
ESCU - Processes created by netsh - Rule,"This search looks for processes launching netsh.exe to execute various commands via the netsh command-line utility. Netsh.exe is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper .dll when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe that are executing commands via the command line.","| tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process=""*C:\\Windows\\System32\\netsh.exe*"" AND Processes.process_path!=""C:\\Program Files\\rempl\\sedlauncher.exe"") by Processes.user Processes.dest Processes.parent_process Processes.parent_process_name Processes.process_name | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `processes_created_by_netsh_filter`"
ESCU - Processes launching netsh - Rule,"This search looks for processes launching netsh.exe. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.","| tstats `security_content_summariesonly` count values(Processes.process) AS Processes.process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=netsh.exe by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.user Processes.dest |`drop_dm_object_name(""Processes"")` |`security_content_ctime(firstTime)` |`security_content_ctime(lastTime)` |`processes_launching_netsh_filter`"
ESCU - Processes Tapping Keyboard Events - Rule,"This search looks for processes in an MacOS system that is tapping keyboard events in MacOS, and essentially monitoring all keystrokes made by a user. This is a common technique used by RATs to log keystrokes from a victim, although it can also be used by legitimate processes like Siri to react on human input","| from datamodel Alerts.Alerts | search app=osquery:results name=pack_osx-attacks_Keyboard_Event_Taps | rename columns.cmdline as cmd, columns.name as process_name, columns.pid as process_id| dedup host,process_name | table host,process_name, cmd, process_id | `processes_tapping_keyboard_events_filter`"
ESCU - Prohibited Network Traffic Allowed - Rule,"This search looks for network traffic defined by port and transport layer protocol in the Enterprise Security lookup table ""lookup_interesting_ports"", that is marked as prohibited, and has an associated 'allow' action in the Network_Traffic data model. This could be indicative of a misconfigured network device.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.action = allowed by All_Traffic.src_ip All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.action | lookup update=true interesting_ports_lookup dest_port as All_Traffic.dest_port OUTPUT app is_prohibited note transport | search is_prohibited=true | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")` | `prohibited_network_traffic_allowed_filter`"
ESCU - Prohibited Software On Endpoint - Rule,This search looks for applications on the endpoint that you have marked as prohibited.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.user Processes.process_name | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `prohibited_softwares` | `prohibited_software_on_endpoint_filter`
ESCU - Protocol or Port Mismatch - Rule,"This search looks for network traffic on common ports where a higher layer protocol does not match the port that is being used. For example, this search should identify cases where protocols other than HTTP are running on TCP port 80. This can be used by attackers to circumvent firewall restrictions, or as an attempt to hide malicious communications over ports and protocols that are typically allowed and not well inspected.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where (All_Traffic.app=dns NOT All_Traffic.dest_port=53) OR ((All_Traffic.app=web-browsing OR All_Traffic.app=http) NOT (All_Traffic.dest_port=80 OR All_Traffic.dest_port=8080 OR All_Traffic.dest_port=8000)) OR (All_Traffic.app=ssl NOT (All_Traffic.dest_port=443 OR All_Traffic.dest_port=8443)) OR (All_Traffic.app=smtp NOT All_Traffic.dest_port=25) by All_Traffic.src_ip, All_Traffic.dest_ip, All_Traffic.app, All_Traffic.dest_port |`security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")` | `protocol_or_port_mismatch_filter`"
ESCU - Protocols passing authentication in cleartext - Rule,"This search looks for cleartext protocols at risk of leaking credentials. Currently, this consists of legacy protocols such as telnet, POP3, IMAP, and non-anonymous FTP sessions. While some of these protocols can be used over SSL, they typically run on different assigned ports in those cases.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.protocol=""tcp"" AND (All_Traffic.dest_port=""23"" OR All_Traffic.dest_port=""143"" OR All_Traffic.dest_port=""110"" OR (All_Traffic.dest_port=""21"" AND All_Traffic.user != ""anonymous"")) groupby All_Traffic.user All_Traffic.src All_Traffic.dest All_Traffic.dest_port | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")` | `protocols_passing_authentication_in_cleartext_filter`"
ESCU - Reg exe Manipulating Windows Services Registry Keys - Rule,The search looks for reg.exe modifying registry keys that define Windows services and their configurations.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name values(Processes.user) as user FROM datamodel=Endpoint.Processes where Processes.process_name=reg.exe Processes.process=*reg* Processes.process=*add* Processes.process=*Services* by Processes.process_id Processes.dest Processes.process | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `reg_exe_manipulating_windows_services_registry_keys_filter`"
ESCU - Reg exe used to hide files directories via registry keys - Rule,The search looks for command-line arguments used to hide a file or directory using the reg add command.,"| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = reg.exe Processes.process=""*add*"" Processes.process=""*Hidden*"" Processes.process=""*REG_DWORD*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)`| regex process = ""(/d\s+2)"" | `reg_exe_used_to_hide_files_directories_via_registry_keys_filter`"
ESCU - Registry Keys for Creating SHIM Databases - Rule,"This search looks for registry activity associated with application compatibility shims, which can be leveraged by attackers for various nefarious purposes.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Change_Analysis.All_Changes where All_Changes.object_category=registry AND (All_Changes.object_path=""*CurrentVersion\\AppCompatFlags\\Custom*"" OR All_Changes.object_path=""*CurrentVersion\\AppCompatFlags\\InstalledSDB*"") by All_Changes.dest, All_Changes.command, All_Changes.user, All_Changes.object, All_Changes.object_path | `drop_dm_object_name(""All_Changes"")` | `registry_keys_for_creating_shim_databases_filter`"
ESCU - Registry Keys Used For Persistence - Rule,The search looks for modifications to registry keys that can be used to launch an application or service at system startup.,"| tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=*currentversion\\run* OR Registry.registry_path=*currentVersion\\Windows\\Appinit_Dlls* OR Registry.registry_path=CurrentVersion\\Winlogon\\Shell* OR Registry.registry_path=*CurrentVersion\\Winlogon\\Userinit* OR Registry.registry_path=*CurrentVersion\\Winlogon\\VmApplet* OR Registry.registry_path=*currentversion\\policies\\explorer\\run* OR Registry.registry_path=*currentversion\\runservices* OR Registry.registry_path=*\\CurrentControlSet\\Control\\Lsa\\* OR Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"" OR Registry.registry_path=HKLM\\SOFTWARE\\Microsoft\\Netsh\\*) by Registry.dest , Registry.status, Registry.user | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(Registry)` | `registry_keys_used_for_persistence_filter`"
ESCU - Registry Keys Used For Privilege Escalation - Rule,"This search looks for modifications to registry keys that can be used to elevate privileges. The registry keys under ""Image File Execution Options"" are used to intercept calls to an executable and can be used to attach malicious binaries to benign system binaries.","| tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"") AND (Registry.registry_key_name=GlobalFlag OR Registry.registry_key_name=Debugger) by Registry.dest  Registry.user | `security_content_ctime(lastTime)`  | `security_content_ctime(firstTime)` | `drop_dm_object_name(Registry)` | `registry_keys_used_for_privilege_escalation_filter`"
ESCU - Remote Desktop Network Bruteforce - Rule,This search looks for RDP application network traffic and filters any source/destination pair generating more than twice the standard deviation of the average traffic.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.app=rdp by All_Traffic.src All_Traffic.dest All_Traffic.dest_port | eventstats stdev(count) AS stdev avg(count) AS avg p50(count) AS p50 | where count>(avg + stdev*2) | rename All_Traffic.src AS src All_Traffic.dest AS dest | table firstTime lastTime src dest count avg p50 stdev | `remote_desktop_network_bruteforce_filter`
ESCU - Remote Desktop Network Traffic - Rule,"This search looks for network traffic on TCP/3389, the default port used by remote desktop. While remote desktop traffic is not uncommon on a network, it is usually associated with known hosts. This search allows for whitelisting both source and destination hosts to remove them from the output of the search so you can focus on the uncommon uses of remote desktop on your network.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.dest_port=3389 AND All_Traffic.dest_category!=common_rdp_destination AND All_Traffic.src_category!=common_rdp_source by All_Traffic.src All_Traffic.dest All_Traffic.dest_port | `drop_dm_object_name(""All_Traffic"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `remote_desktop_network_traffic_filter`"
ESCU - Remote Desktop Process Running On System - Rule,This search looks for the remote desktop process mstsc.exe running on systems upon which it doesn't typically run. This is accomplished by filtering out all systems that are noted in the `common_rdp_source category` in the Assets and Identity framework.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=*mstsc.exe AND Processes.dest_category!=common_rdp_source by Processes.dest Processes.user Processes.process | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `remote_desktop_process_running_on_system_filter`
ESCU - Remote Process Instantiation via WMI - Rule,This search looks for wmic.exe being launched with parameters to spawn a process on a remote system.,"| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = wmic.exe Processes.process=""*/node*"" Processes.process=""*process*"" Processes.process=""*call*"" Processes.process=""*create*""   by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)` | `remote_process_instantiation_via_wmi_filter`"
ESCU - Remote Registry Key modifications - Rule,This search monitors for remote modifications to registry keys.,"| tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where  Registry.registry_path=""\\\\*""  by Registry.dest , Registry.user | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(Registry)` | `remote_registry_key_modifications_filter`"
ESCU - Remote WMI Command Attempt - Rule,This search looks for wmic.exe being launched with parameters to operate on remote systems.,| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic.exe  AND Processes.process= */node* by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `remote_wmi_command_attempt_filter`
ESCU - RunDLL Loading DLL By Ordinal - Rule,This search looks for DLLs under %AppData% being loaded by rundll32.exe that are calling the exported function at ordinal 2. Calling exported functions by ordinal is not as common as calling by exported name. There was a bug fixed in IDAPro on 2016-08-08 that would not display functions without names.  Calling functions by ordinal would overcome the lack of name and make it harder for analyst to reverse engineer.,"| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = rundll32.exe Processes.process=""*AppData*"" Processes.process=""*,#2"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `rundll_loading_dll_by_ordinal_filter`"
ESCU - Ryuk Test Files Detected - Rule,"The search looks for files that contain the key word *Ryuk* under any folder in the C drive, which is consistent with Ryuk propagation.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) lastTime FROM datamodel=Endpoint.Filesystem WHERE ""Filesystem.file_path""=C:\\*Ryuk* BY ""Filesystem.dest"", ""Filesystem.user"", ""Filesystem.file_path"" | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `ryuk_test_files_detected_filter`"
ESCU - Samsam Test File Write - Rule,"The search looks for a file named ""test.txt"" written to the windows system directory tree, which is consistent with Samsam propagation.",| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_name) as file_name from datamodel=Endpoint.Filesystem where Filesystem.file_path=*\\windows\\system32\\test.txt by Filesystem.file_path | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `samsam_test_file_write_filter`
ESCU - Sc exe Manipulating Windows Services - Rule,This search looks for arguments to sc.exe indicating the creation or modification of a Windows service.,"| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sc.exe (Processes.process=""* create *"" OR Processes.process=""* config *"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `sc_exe_manipulating_windows_services_filter`"
ESCU - Scheduled Task Name Used by Dragonfly Threat Actors - Rule,This search looks for flags passed to schtasks.exe on the command-line that indicate a task name associated with the Dragonfly threat actor was created or deleted.,| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe  by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search (process=*delete* OR process=*create*) process=*reset* | `scheduled_task_name_used_by_dragonfly_threat_actors_filter`
ESCU - Scheduled tasks used in BadRabbit ransomware - Rule,This search looks for flags passed to schtasks.exe on the command-line that indicate that task names related to the execution of Bad Rabbit ransomware were created or deleted.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process  from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe (Processes.process= ""*create*""  OR Processes.process= ""*delete*"") by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | search (process=*rhaegal* OR process=*drogon* OR *viserion_*) | `scheduled_tasks_used_in_badrabbit_ransomware_filter`"
ESCU - Schtasks scheduling job on remote system - Rule,This search looks for flags passed to schtasks.exe on the command-line that indicate a job is being scheduled on a remote system.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = schtasks.exe Processes.process=""*/create*"" Processes.process=""* /s *"" by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `schtasks_scheduling_job_on_remote_system_filter`"
ESCU - Schtasks used for forcing a reboot - Rule,This search looks for flags passed to schtasks.exe on the command-line that indicate that a forced reboot of system is scheduled.,"| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = schtasks.exe Processes.process=""*shutdown*"" Processes.process=""*/r*"" Processes.process=""*/f*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `schtasks_used_for_forcing_a_reboot_filter`"
ESCU - Script Execution via WMI - Rule,This search looks for scripts launched via WMI.,"| tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name = ""scrcons.exe"" by Processes.user Processes.dest Processes.process_name  | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `script_execution_via_wmi_filter`"
ESCU - Shim Database File Creation - Rule,"This search looks for shim database files being written to default directories. The sdbinst.exe application is used to install shim database files (.sdb). According to Microsoft, a shim is a small library that transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.",| tstats `security_content_summariesonly` count values(Filesystem.action) values(Filesystem.file_hash) as file_hash values(Filesystem.file_path) as file_path  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path=*Windows\AppPatch\Custom* by Filesystem.file_name Filesystem.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` |`drop_dm_object_name(Filesystem)` | `shim_database_file_creation_filter`
ESCU - Shim Database Installation With Suspicious Parameters - Rule,"This search detects the process execution and arguments required to silently create a shim database.  The sdbinst.exe application is used to install shim database files (.sdb). A shim is a small library which transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sdbinst.exe Processes.process=""*-p*"" Processes.process=""*-q*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `shim_database_installation_with_suspicious_parameters_filter`"
ESCU - Short Lived Windows Accounts - Rule,This search detects accounts that were created and deleted in a short time period.,"| tstats `security_content_summariesonly` values(All_Changes.result_id) as result_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Change where All_Changes.result_id=4720 OR All_Changes.result_id=4726 by _time span=4h All_Changes.user All_Changes.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(""All_Changes"")` | search result_id = 4720 result_id=4726 | transaction user connected=false maxspan=240m | table firstTime lastTime count user dest result_id | `short_lived_windows_accounts_filter`"
ESCU - Single Letter Process On Endpoint - Rule,This search looks for process names that consist only of a single letter.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest, Processes.user, Processes.process, Processes.process_name | `drop_dm_object_name(Processes)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | eval process_name_length = len(process_name), endExe = if(substr(process_name, -4) == "".exe"", 1, 0) | search process_name_length=5 AND endExe=1 | table count, firstTime, lastTime, dest, user, process, process_name | `single_letter_process_on_endpoint_filter`"
ESCU - SMB Traffic Spike - MLTK - Rule,This search uses the Machine Learning Toolkit (MLTK) to identify spikes in the number of Server Message Block (SMB) connections.,"| tstats `security_content_summariesonly` count values(All_Traffic.dest_ip) as dest values(All_Traffic.dest_port) as port from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=1h, All_Traffic.src | eval HourOfDay=strftime(_time, ""%H"") | eval DayOfWeek=strftime(_time, ""%A"") | `drop_dm_object_name(All_Traffic)` | apply smb_pdfmodel threshold=0.001 | rename ""IsOutlier(count)"" as isOutlier | search isOutlier > 0 | sort -count | table _time src dest port count | `smb_traffic_spike___mltk_filter`"
ESCU - SMB Traffic Spike - Rule,This search looks for spikes in the number of Server Message Block (SMB) traffic connections.,"| tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=1h, All_Traffic.src | `drop_dm_object_name(""All_Traffic"")` | eventstats max(_time) as maxtime | stats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, ""-70m@m""), count, null))) as count avg(eval(if(_time<relative_time(maxtime, ""-70m@m""), count, null))) as avg stdev(eval(if(_time<relative_time(maxtime, ""-70m@m""), count, null))) as stdev by src | eval upperBound=(avg+stdev*2), isOutlier=if(count > upperBound AND num_data_samples >=50, 1, 0) | where isOutlier=1 | table src count | `smb_traffic_spike_filter`"
ESCU - Spectre and Meltdown Vulnerable Systems - Rule,The search is used to detect systems that are still vulnerable to the Spectre and Meltdown vulnerabilities.,"| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Vulnerabilities where Vulnerabilities.cve =""CVE-2017-5753"" OR Vulnerabilities.cve =""CVE-2017-5715"" OR Vulnerabilities.cve =""CVE-2017-5754"" by Vulnerabilities.dest | `drop_dm_object_name(Vulnerabilities)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `spectre_and_meltdown_vulnerable_systems_filter`"
ESCU - Spike in File Writes - Rule,The search looks for a sharp increase in the number of files written to a particular host,"| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.action=created by _time span=1h, Filesystem.dest | `drop_dm_object_name(Filesystem)` | eventstats max(_time) as maxtime | stats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, ""-1d@d""), count, null))) as ""count"" avg(eval(if(_time<relative_time(maxtime, ""-1d@d""), count,null))) as avg stdev(eval(if(_time<relative_time(maxtime, ""-1d@d""), count, null))) as stdev by ""dest"" | eval upperBound=(avg+stdev*4), isOutlier=if((count > upperBound) AND num_data_samples >=20, 1, 0) | search isOutlier=1 | `spike_in_file_writes_filter`"
ESCU - Splunk Enterprise Information Disclosure - Rule,"This search allows you to look for evidence of exploitation for CVE-2018-11409, a Splunk Enterprise Information Disclosure Bug.","index=_internal sourcetype=splunkd_ui_access server-info | search clientip!=127.0.0.1 uri_path=""*raw/services/server/info/server-info"" | rename clientip as src_ip, splunk_server as dest | stats earliest(_time) as firstTime, latest(_time) as lastTime, values(uri) as uri, values(useragent) as http_user_agent, values(user) as user by src_ip, dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `splunk_enterprise_information_disclosure_filter`"
ESCU - SQL Injection with Long URLs - Rule,This search looks for long URLs that have several SQL commands visible within them.,"| tstats `security_content_summariesonly` count from datamodel=Web where Web.dest_category=web_server AND (Web.url_length > 1024 OR Web.http_user_agent_length > 200) by Web.src Web.dest Web.url Web.url_length Web.http_user_agent | `drop_dm_object_name(""Web"")` | eval num_sql_cmds=mvcount(split(url, ""alter%20table"")) + mvcount(split(url, ""between"")) + mvcount(split(url, ""create%20table"")) + mvcount(split(url, ""create%20database"")) + mvcount(split(url, ""create%20index"")) + mvcount(split(url, ""create%20view"")) + mvcount(split(url, ""delete"")) + mvcount(split(url, ""drop%20database"")) + mvcount(split(url, ""drop%20index"")) + mvcount(split(url, ""drop%20table"")) + mvcount(split(url, ""exists"")) + mvcount(split(url, ""exec"")) + mvcount(split(url, ""group%20by"")) + mvcount(split(url, ""having"")) + mvcount(split(url, ""insert%20into"")) + mvcount(split(url, ""inner%20join"")) + mvcount(split(url, ""left%20join"")) + mvcount(split(url, ""right%20join"")) + mvcount(split(url, ""full%20join"")) + mvcount(split(url, ""select"")) + mvcount(split(url, ""distinct"")) + mvcount(split(url, ""select%20top"")) + mvcount(split(url, ""union"")) + mvcount(split(url, ""xp_cmdshell"")) - 24 | where num_sql_cmds > 3 | `sql_injection_with_long_urls_filter`"
ESCU - Suspicious Changes to File Associations - Rule,"This search looks for changes to registry values that control Windows file associations, executed by a process that is not typical for legitimate, routine changes to this area.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name!=Explorer.exe AND Processes.process_name!=OpenWith.exe by Processes.process_id Processes.dest | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | join [| tstats `security_content_summariesonly` values(Registry.registry_path) as registry_path count  FROM datamodel=Endpoint.Registry where Registry.registry_path=*\\Explorer\\FileExts* by Registry.process_id Registry.dest | `drop_dm_object_name(""Registry"")` | table process_id dest registry_path]| `suspicious_changes_to_file_associations_filter`"
ESCU - Suspicious Email - UBA Anomaly - Rule,"This detection looks for emails that are suspicious because of their sender, domain rareness, or behavior differences. This is an anomaly generated by Splunk User Behavior Analytics (UBA).","|tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(All_UEBA_Events.category) as category from datamodel=UEBA where nodename=All_UEBA_Events.UEBA_Anomalies All_UEBA_Events.UEBA_Anomalies.uba_model = ""SuspiciousEmailDetectionModel"" by All_UEBA_Events.description All_UEBA_Events.severity All_UEBA_Events.user All_UEBA_Events.uba_event_type All_UEBA_Events.link All_UEBA_Events.signature All_UEBA_Events.url All_UEBA_Events.UEBA_Anomalies.uba_model | `drop_dm_object_name(All_UEBA_Events)` | `drop_dm_object_name(UEBA_Anomalies)`| `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `suspicious_email___uba_anomaly_filter`"
ESCU - Suspicious Email Attachment Extensions - Rule,This search looks for emails that have attachments with suspicious file extensions.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Email where All_Email.file_name=""*"" by All_Email.src_user, All_Email.file_name All_Email.message_id | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Email"")` | `suspicious_email_attachments` | `suspicious_email_attachment_extensions_filter`"
ESCU - Suspicious File Write - Rule,The search looks for files created with names that have been linked to malicious activity.,| tstats `security_content_summariesonly` count values(Filesystem.action) as action values(Filesystem.file_path) as file_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem by Filesystem.file_name Filesystem.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(Filesystem)` | `suspicious_writes` | `suspicious_file_write_filter`
ESCU - Suspicious Java Classes - Rule,"This search looks for suspicious Java classes that are often used to exploit remote command execution in common Java frameworks, such as Apache Struts.","`stream_http` http_method=POST http_content_length>1 | regex form_data=""(?i)java\.lang\.(?:runtime|processbuilder)"" | rename src_ip as src | stats count earliest(_time) as firstTime, latest(_time) as lastTime, values(url) as uri, values(status) as status, values(http_user_agent) as http_user_agent by src, dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `suspicious_java_classes_filter`"
ESCU - Suspicious LNK file launching a process - Rule,This search looks for a ``*.lnk` file under `C:\User*` or `*\Local\Temp\*` executing a process. This is common behavior used by various spear phishing tools.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""*.lnk"" AND (Filesystem.file_path=""C:\\Users*"" OR Filesystem.file_path=""*Local\\Temp*"")  by _time span=1h Filesystem.process_id Filesystem.file_name Filesystem.file_path Filesystem.file_hash Filesystem.user | `drop_dm_object_name(Filesystem)` | rename process_id as lnk_pid | join lnk_pid, _time [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=*  by _time span=1h Processes.parent_process_id Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process | `drop_dm_object_name(Processes)` | rename parent_process_id as lnk_pid | fields _time lnk_pid process_id dest process_name process_path process] | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table firstTime, lastTime, lnk_pid, process_id, user, dest, file_name, file_path, process_name, process, process_path, file_hash | `suspicious_lnk_file_launching_a_process_filter`"
ESCU - Suspicious Reg exe Process - Rule,"This search looks for reg.exe being launched from a command prompt not started by the user. When a user launches cmd.exe, the parent process is usually explorer.exe. This search filters out those instances.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name != explorer.exe Processes.process_name =cmd.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest Processes.process_id Processes.parent_process_id | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.parent_process_name=cmd.exe Processes.process_name= reg.exe by Processes.parent_process_id Processes.dest Processes.process_name | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename parent_process_id as process_id |dedup process_id| table process_id dest] | `suspicious_reg_exe_process_filter`"
ESCU - Suspicious wevtutil Usage - Rule,"The wevtutil.exe application is the windows event log utility. This searches for wevtutil.exe with parameters for clearing the application, security, setup, or system event logs.","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = wevtutil.exe Processes.process=""*cl*"" (Processes.process=""*System*"" OR Processes.process=""*Security*"" OR Processes.process=""*Setup*"" OR Processes.process=""*Application*"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)` | `suspicious_wevtutil_usage_filter`"
ESCU - Suspicious writes to System Volume Information - Rule,This search detects writes to the 'System Volume Information' folder by something other than the System process.,"(`sysmon` OR tag=process) EventCode=11 process_id!=4 file_path=*System\ Volume\ Information* | stats count min(_time) as firstTime max(_time) as lastTime by dest, Image, file_path | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `suspicious_writes_to_system_volume_information_filter`"
ESCU - Suspicious writes to windows Recycle Bin - Rule,This search detects writes to the recycle bin by a process other than explorer.exe.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name FROM datamodel=Endpoint.Filesystem where Filesystem.file_path = ""*$Recycle.Bin*"" by Filesystem.process_id Filesystem.dest | `drop_dm_object_name(""Filesystem"")`| search [| tstats `security_content_summariesonly` values(Processes.user) as user values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name != ""explorer.exe"" by Processes.process_id Processes.dest| `drop_dm_object_name(""Processes"")` | table process_id dest] | `suspicious_writes_to_windows_recycle_bin_filter`"
ESCU - System Information Discovery Detection - Rule,Detect system information discovery techniques used by attackers to understand configurations of the system to further exploit it.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""*wmic* qfe*"" OR Processes.process=*systeminfo* OR Processes.process=*hostname*) by Processes.user Processes.process_name Processes.process Processes.dest | `drop_dm_object_name(Processes)` | eventstats dc(process) as dc_processes_by_dest by dest | where dc_processes_by_dest > 2 | stats values(process) min(firstTime) as firstTime max(lastTime) as lastTime by user, dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `system_information_discovery_detection_filter`"
ESCU - System Processes Run From Unexpected Locations - Rule,This search looks for system processes that normally run out of C:\Windows\System32\ or C:\Windows\SysWOW64 that are not run from that location.  This can indicate a malicious process that is trying to hide as a legitimate process.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_path !=""C:\\Windows\\System32*"" Processes.process_path !=""C:\\Windows\\SysWOW64*"" by Processes.user Processes.dest Processes.process_name Processes.process_id Processes.process_path Processes.parent_process_name Processes.process_hash| `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `is_windows_system_file` | `system_processes_run_from_unexpected_locations_filter`"
ESCU - Systems Ready for Spectre-Meltdown Windows Patch,"Some AV applications can cause the Spectre/Meltdown patch for Windows not to install successfully. This registry key is supposed to be created by the AV engine when it has been patched to be able to handle the Windows patch. If this key has been written, the system can then be patched for Spectre and Meltdown.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Change_Analysis.All_Changes where All_Changes.object_category=registry AND (All_Changes.object_path=""HKLM\Software\Microsoft\Windows\CurrentVersion\QualityCompat*"") by All_Changes.dest, All_Changes.command, All_Changes.user, All_Changes.object, All_Changes.object_path | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(""All_Changes"")`"
ESCU - TOR Traffic - Rule,"This search looks for network traffic identified as The Onion Router (TOR), a benign anonymity network which can be abused for a variety of nefarious purposes.","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.app=tor AND All_Traffic.action=allowed by All_Traffic.src_ip All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.action | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")` | `tor_traffic_filter`"
ESCU - Uncommon Processes On Endpoint - Rule,This search looks for applications on the endpoint that you have marked as uncommon.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.user Processes.process Processes.process_name | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `uncommon_processes` |`uncommon_processes_on_endpoint_filter`
ESCU - Unload Sysmon Filter Driver - Rule,Attackers often disable security tools to avoid detection. This search looks for the usage of process `fltMC.exe` to unload a Sysmon Driver that will stop sysmon from collecting the data.,"| tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fltMC.exe AND Processes.process=*unload* AND Processes.process=*SysmonDrv*  by Processes.process_name Processes.process_id Processes.parent_process_name Processes.process Processes.dest Processes.user | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` |`unload_sysmon_filter_driver_filter`| table firstTime lastTime dest user count process_name process_id parent_process_name process"
ESCU - Unsigned Image Loaded by LSASS - Rule,This search detects loading of unsigned images by LSASS.,"`sysmon` EventID=7 Image=*lsass.exe Signed=false | stats count min(_time) as firstTime max(_time) as lastTime by Computer, Image, ImageLoaded, Signed, SHA1 | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `unsigned_image_loaded_by_lsass_filter`"
ESCU - Unsuccessful Netbackup backups - Rule,This search gives you the hosts where a backup was attempted and then failed.,"`netbackup` | stats latest(_time) as latestTime by COMPUTERNAME, MESSAGE | search MESSAGE=""An error occurred, failed to backup."" | `security_content_ctime(latestTime)` | rename COMPUTERNAME as dest, MESSAGE as signature | table latestTime, dest, signature | `unsuccessful_netbackup_backups_filter`"
ESCU - Unusually Long Command Line - MLTK - Rule,Command lines that are extremely long may be indicative of malicious activity on your hosts. This search leverages the Machine Learning Toolkit (MLTK) to help identify command lines with lengths that are unusual for a given user.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| eval processlen=len(process) | search user!=unknown | apply cmdline_pdfmodel threshold=0.01 | rename ""IsOutlier(processlen)"" as isOutlier | search isOutlier > 0 | table firstTime lastTime user dest process_name process processlen count | `unusually_long_command_line___mltk_filter`"
ESCU - Unusually Long Command Line - Rule,Command lines that are extremely long may be indicative of malicious activity on your hosts.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`|  eval processlen=len(process) | eventstats stdev(processlen) as stdev, avg(processlen) as avg by dest | stats max(processlen) as maxlen, values(stdev) as stdevperhost, values(avg) as avgperhost by dest, user, process_name, process | `unusually_long_command_line_filter` |eval threshold = 10 | where maxlen > ((threshold*stdevperhost) + avgperhost)"
ESCU - Unusually Long Content-Type Length - Rule,This search looks for unusually long strings in the Content-Type http header that the client sends the server.,`stream_http` | eval cs_content_type_length = len(cs_content_type) | where cs_content_type_length > 100 | table endtime src_ip dest_ip cs_content_type_length cs_content_type url | `unusually_long_content_type_length_filter`
ESCU - Update previously seen users in CloudTrail,"This search looks for CloudTrail events where a user logs into the console, then updates the baseline of the latest and earliest times, City, Region, and Country we have encountered this user in our dataset, grouped by ARN, within the last hour.","`cloudtrail` eventName=ConsoleLogin | rename userIdentity.arn as user | iplocation src | eval City=if(City LIKE """",src,City),Region=if(Region LIKE """",src,Region) | stats earliest(_time) AS firstTime latest(_time) AS lastTime by user src City Region Country | inputlookup append=t previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user src City Region Country | outputlookup previously_seen_users_console_logins.csv"
ESCU - Update previously seen users in CloudTrail - DM,"This search looks for CloudTrail events where a user logs into the console, then updates the baseline of the latest and earliest times, City, Region, and Country we have encountered this user in our dataset, grouped by user, within the last hour.",| tstats earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Authentication where Authentication.signature=ConsoleLogin by Authentication.user Authenticaiton.src | iplocation Authentication.src | rename Authentication.user as user Authentciation.src as src | table user src City Region Country firstTime lastTime | inputlookup append=t previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user src City Region Country | outputlookup previously_seen_users_console_logins.csv
ESCU - USN Journal Deletion - Rule,The fsutil.exe application is a legitimate Windows utility used to perform tasks related to the file allocation table (FAT) and NTFS file systems. The update sequence number (USN) change journal provides a log of all changes made to the files on the disk. This search looks for fsutil.exe deleting the USN journal.,"| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fsutil.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process=""*deletejournal*"" AND process=""*usn*"" | `usn_journal_deletion_filter`"
ESCU - Web Fraud - Account Harvesting - Rule,This search is used to identify the creation of multiple user accounts using the same email domain name.,"`stream_http` http_content_type=text* uri=""/magento2/customer/account/loginPost/"" | rex field=cookie ""form_key=(?<SessionID>\w+)"" | rex field=form_data ""login\[username\]=(?<Username>[^&|^$]+)"" | search Username=* | rex field=Username ""@(?<email_domain>.*)"" | stats dc(Username) as UniqueUsernames list(Username) as src_user by email_domain | where UniqueUsernames> 25 | `web_fraud___account_harvesting_filter`"
ESCU - Web Fraud - Anomalous User Clickspeed - Rule,"This search is used to examine web sessions to identify those where the clicks are occurring too quickly for a human or are occurring with a near-perfect cadence (high periodicity or low standard deviation), resembling a script driven session.","`stream_http` http_content_type=text* | rex field=cookie ""form_key=(?<session_id>\w+)"" | streamstats window=2 current=1 range(_time) as TimeDelta by session_id | where TimeDelta>0 |stats count stdev(TimeDelta) as ClickSpeedStdDev avg(TimeDelta) as ClickSpeedAvg by session_id | where count>5 AND (ClickSpeedStdDev<.5 OR ClickSpeedAvg<.5) | `web_fraud___anomalous_user_clickspeed_filter`"
ESCU - Web Fraud - Password Sharing Across Accounts - Rule,This search is used to identify user accounts that share a common password.,"`stream_http` http_content_type=text* uri=/magento2/customer/account/loginPost*  | rex field=form_data ""login\[username\]=(?<Username>[^&|^$]+)"" | rex field=form_data ""login\[password\]=(?<Password>[^&|^$]+)"" | stats dc(Username) as UniqueUsernames values(Username) as user list(src_ip) as src_ip by Password|where UniqueUsernames>5 | `web_fraud___password_sharing_across_accounts_filter`"
ESCU - Web Servers Executing Suspicious Processes - Rule,This search looks for suspicious processes on all systems labeled as web servers.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.dest_category=""web_server"" AND (Processes.process=""*whoami*"" OR Processes.process=""*ping*"" OR Processes.process=""*iptables*"" OR Processes.process=""*wget*"" OR Processes.process=""*service*"" OR Processes.process=""*curl*"") by Processes.process Processes.process_name, Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `web_servers_executing_suspicious_processes_filter`"
ESCU - Windows connhost exe started forcefully - Rule,The search looks for the Console Window Host process (connhost.exe) executed using the force flag -ForceV1. This is not regular behavior in the Windows OS and is often seen executed by the Ryuk Ransomware.,"| `sysmon` CommandLine=""*C:\\Windows\\system32\\conhost.exe 0xffffffff -ForceV1*"" EventCode=4688 | table CommandLine, Computer, EventCode, SubjectUserSid | `windows_connhost_exe_started_forcefully_filter`"
ESCU - Windows DisableAntiSpyware Registry - Rule,The search looks for the Registry Key DisableAntiSpyware set to disable. This is consistent with Ryuk infections across a fleet of endpoints.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_key_name=""DisableAntiSpyware"" AND Registry.registry_value_name=""DWORD (0x00000000)"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_name | `drop_dm_object_name(Registry)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `windows_disableantispyware_registry_filter`"
ESCU - Windows Event Log Cleared - Rule,This search looks for Windows events that indicate one of the Windows event logs has been purged.,(`wineventlog_security` (EventCode=1102 OR EventCode=1100)) OR (`wineventlog_system` EventCode=104) | stats count min(_time) as firstTime max(_time) as lastTime by EventCode dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_event_log_cleared_filter`
ESCU - Windows hosts file modification - Rule,The search looks for modifications to the hosts file on all Windows endpoints across your environment.,| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem  by Filesystem.file_name Filesystem.file_path Filesystem.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | search Filesystem.file_name=hosts AND Filesystem.file_path=*Windows\\System32\\* | `drop_dm_object_name(Filesystem)` | `windows_hosts_file_modification_filter`
ESCU - Windows Security Account Manager Stopped - Rule,The search looks for a Windows Security Account Manager (SAM) was stopped via command-line. This is consistent with Ryuk infections across a fleet of endpoints.,"| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes WHERE (""Processes.process_name""=""net*.exe"" ""Processes.process""=""*stop \""samss\""*"") BY ""Processes.dest"", ""Processes.user"", ""Processes.process"" | `drop_dm_object_name(Processes)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `windows_security_account_manager_stopped_filter`"
ESCU - Windows Updates Install Failures,This search is intended to give you a feel for how often Windows updates fail to install in your environment. Fluctuations in these numbers will allow you to determine when you should be concerned.,"| tstats `security_content_summariesonly` dc(Updates.dest) as count FROM datamodel=Updates where Updates.vendor_product=""Microsoft Windows"" AND Updates.status=failure by _time span=1d"
ESCU - Windows Updates Install Successes,This search is intended to give you a feel for how often successful Windows updates are applied in your environments. Fluctuations in these numbers will allow you to determine when you should be concerned.,"| tstats `security_content_summariesonly` dc(Updates.dest) as count FROM datamodel=Updates where Updates.vendor_product=""Microsoft Windows"" AND Updates.status=installed by _time span=1d"
ESCU - WMI Permanent Event Subscription - Rule,This search looks for the creation of WMI permanent event subscriptions.,"`wmi` EventCode=5861 Binding | rex field=Message ""Consumer =\s+(?<consumer>[^;|^$]+)"" | search consumer!=""NTEventLogEventConsumer=\""SCM Event Log Consumer\"""" | stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, consumer, Message | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | rename ComputerName as dest | `wmi_permanent_event_subscription_filter`"
ESCU - WMI Permanent Event Subscription - Sysmon - Rule,This search looks for the creation of WMI permanent event subscriptions.,"`sysmon` EventCode=21 | rename host as dest | table _time, dest, user, Operation, EventType, Query, Consumer, Filter | `wmi_permanent_event_subscription___sysmon_filter`"
ESCU - WMI Temporary Event Subscription - Rule,This search looks for the creation of WMI temporary event subscriptions.,"`wmi` EventCode=5860 Temporary | rex field=Message ""NotificationQuery =\s+(?<query>[^;|^$]+)"" | search query!=""SELECT * FROM Win32_ProcessStartTrace WHERE ProcessName = 'wsmprovhost.exe'"" AND query!=""SELECT * FROM __InstanceOperationEvent WHERE TargetInstance ISA 'AntiVirusProduct' OR TargetInstance ISA 'FirewallProduct' OR TargetInstance ISA 'AntiSpywareProduct'"" | stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, query  | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `wmi_temporary_event_subscription_filter`"
escu-metrics-search,,index=_audit action=search | transaction search_id maxspan=3m | search ESCU | stats sum(total_run_time) avg(total_run_time) max(total_run_time) sum(result_count)
escu-metrics-search-events,,"[search index=_audit sourcetype=""audittrail"" \""ESCU NOT ""index=_audit"" | where search !="""" | dedup search_id | rex field=search ""\""(?<search_name>.*)\"""" | rex field=_raw ""user=(?<user>[a-zA-Z0-9_\-]+)"" | eval usage=if(savedsearch_name!="""", ""scheduled"", ""adhoc"") | eval savedsearch_name=if(savedsearch_name != """", savedsearch_name, search_name) | table savedsearch_name search_id user _time usage | outputlookup escu_search_id.csv | table search_id] index=_audit total_run_time event_count result_count NOT ""index=_audit"" | lookup escu_search_id.csv search_id | stats count(savedsearch_name) AS search_count avg(total_run_time) AS search_avg_run_time sum(total_run_time) AS search_total_run_time sum(result_count) AS search_total_results earliest(_time) AS firsts latest(_time) AS lasts by savedsearch_name user usage| eval first_run=strftime(firsts, ""%B %d %Y"") | eval last_run=strftime(lasts, ""%B %d %Y"")"
escu-metrics-search-longest-runtime,,index=_* ESCU [search index=_* action=search latest=-2h earliest=-1d| transaction search_id maxspan=3m | search ESCU | stats values(total_run_time) AS run by search_id | sort -run | head 1| table search_id] | table search search_id
escu-metrics-usage,,"index=_audit sourcetype=""audittrail"" 
""ESCU - ""
`comment(""Find all the search names in the audittrail."")`
| stats count(search) by search savedsearch_name user
| eval usage=(if(savedsearch_name=="""",""Adhoc"",""Scheduled"")) 
`comment(""If the savedsearch_name field in the audittrail is empty, the search was run adhoc. Otherwise it was run as a scheduled search"")`
| rex field=search ""\""(?<savedsearch_name>.*)\""""
`comment(""Extract the name of the search from the search string"")`
| table savedsearch_name count(search) usage user | join savedsearch_name max=0 type=left [search sourcetype=""manifests"" | spath searches{} | mvexpand searches{} | spath input=searches{} | table category search_name | rename search_name as savedsearch_name | dedup savedsearch_name] | search category=*"
escu-metrics-usage-search,,"index=_audit sourcetype=""audittrail"" 
""ESCU - ""
`comment(""Find all the search names in the audittrail. Ignore the last few minutes so we can exclude this search's text from the result."")`
| stats count(search) by search savedsearch_name user
| eval usage=(if(savedsearch_name=="""",""Adhoc"",""Scheduled"")) 
`comment(""If the savedsearch_name field in the audittrail is empty, the search was run adhoc. Otherwise it was run as a scheduled search"")`
| rex field=search ""\""(?<savedsearch_name>.*)\""""
`comment(""Extract the name of the search from the search string"")`
| table savedsearch_name count(search) usage user | join savedsearch_name max=0 type=left [search sourcetype=""manifests"" | spath searches{} | mvexpand searches{} | spath input=searches{} | table category search_name | rename search_name as savedsearch_name | dedup savedsearch_name] | search category=*"
ESS - Content Profile - Base,,"| `cim_datamodelinfo` | fields datamodel size | join max=0 datamodel [| contentinfo | eval datamodel=mvdedup(datamodel), name=case(isnotnull(search_name), search_name,isnotnull(panel_title), if(isnotnull(view_label), view_label, view_name) + "" - "" + panel_title, isnotnull(view_label), view_label, isnotnull(view_name), view_name, 1==1, null()), subtype=coalesce(subtype, if(isnotnull(panel_title), ""panel"", ""-"")) | fields app datamodel name type subtype| stats list(*) as *, count by datamodel app | eval name=mvjoin(name, "";""), type=mvjoin(type, "";""), subtype=mvjoin(subtype, "";"")] | fields datamodel app size name type subtype count | makemv delim="";"" name | makemv delim="";"" type | makemv delim="";"" subtype"
ESS - Notable Events,Maintains a list containing pertinent information for the last 48 hours of notable events,"`notable` | search NOT `suppression` | eval count=1 | fillnull value=""unknown"" src,dest,dvc,governance,control | convert mktime(_time) as time | `timeDiff` | eval timeDiff_type=""current"" | eval comment='case(timeDiff<=86400,""current"",timeDiff>86400 AND timeDiff<=172800,""historical"",1=1,""unknown"")' | `security_domains` | fillnull value=""historical"" timeDiff_type | `security_domains` | fillnull value=""current"" timeDiff_type | fillnull value=0 count | table _time,security_domain,urgency,rule_name,src,dest,dvc,status,status_group,owner,timeDiff_type,governance,control,count | outputlookup es_notable_events | stats count"
Event Sequencing Engine - Main,,"`event_seq_base_search` | esssequence create_seq_event=""true"""
Generate Data Availability ML Model for Latency,,"| tstats count values(source) as source avg(_indextime) as indextime where 
    [| inputlookup data_inventory_products_lookup 
    | eval category=case(isnotnull(daily_event_volume) AND daily_event_volume > 50000, ""highvolumelowlatency"", stage!=""step-sourcetype"", ""normal"", 1=1,""unused"") 
    | lookup SSE-data-availability-products-categorization productId OUTPUT category as category_override 
    | eval category=coalesce(category_override, category) 
    | search category=""highvolumelowlatency"" OR category=""normal"" 
    | eval termsearch = if(len(termsearch)>0,""("" . termsearch . "")"",null()) 
    | stats values(termsearch) as search 
    | eval search=""("" . mvjoin(search, "" OR "") . "")"" ] earliest=-30d by index sourcetype _time span=5m 
| eval reduce_factor_to_limit_memory_explosion = 10
| where random()%reduce_factor_to_limit_memory_explosion = 1 
| eval lag = indextime - _time - 180 
| stats values(lag) as lag values(source) as source by index sourcetype _time 
| where lag > 0 
| eval productId=null, 
    [| inputlookup data_inventory_products_lookup 
    | eval category=case(isnotnull(daily_event_volume) AND daily_event_volume > 50000, ""highvolumelowlatency"", stage!=""step-sourcetype"", ""normal"", 1=1,""unused"") 
    | lookup SSE-data-availability-products-categorization productId OUTPUT category as category_override 
    | eval category=coalesce(category_override, category) 
    | search category=""highvolumelowlatency"" OR category=""normal"" 
    | eval termsearch = if(len(termsearch)>0,""("" . termsearch . "")"",null()) 
    | rex field=termsearch mode=sed ""s/\""/\\\""/g"" 
    | eval search = ""productId=if(searchmatch(\"""" . termsearch . ""\""), mvappend(productId, \"""" . productId . ""\""), productId)"" 
    | stats values(search) as search 
    | eval search=mvjoin(search, "", "")]
| mvexpand productId
| fit DensityFunction lag  by productId upper_threshold=0.01 dist=norm into app:sse_event_lag_model
| stats count as baseline_num_data_samples avg(lag) as baseline_avg_lag min(_time) as baseline_earliest max(_time) as baseline_latest by productId | eval baseline_update_last_run = now(), baseline_lag_at_last_update = now() - baseline_latest  | outputlookup SSE-data_availability_latency_status.csv"
Generate MITRE matrix list,This search formats the MITRE ATT&CK framework table into a list format.,"| mitremap output=""list"" | outputlookup mitre_matrix_list.csv"
Identities - Identities By Business Unit,,"| pivot Identity_Management All_Identities count(All_Identities) AS ""count"" SPLITROW bunit AS ""bunit"" | sort - count"
Identities - Identities By Category,,"| pivot Identity_Management All_Identities count(All_Identities) AS ""count"" SPLITROW category AS ""category"" | sort - count"
Identities - Identities By Priority,,"| pivot Identity_Management All_Identities count(All_Identities) AS ""count"" SPLITROW priority AS ""priority"" | sort - count"
Identities - Identity Information,,"| from datamodel:""Identity_Management"".""All_Identities"" | `uitime(startDate)` | `uitime(endDate)` | fields identity,prefix,nick,first,last,suffix,email,phone,phone2,managedBy,priority,bunit,category,watchlist,startDate,endDate"
Identity - Activity from Expired User Identity - Rule,"Alerts when an event is discovered from a user associated with identity that is now expired (that is, the end date of the identity has been passed).","| from datamodel:""Identity_Management"".""Expired_Identity_Activity"" | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",count by ""expired_user"" | rename ""expired_user"" as ""user"""
Identity - Asset Truncations,,"index=_internal sourcetype=""identity_correlation:merge"" WARNING type=""asset"" | timechart span=1m sum(entities_truncated) as total_entities_truncated values(source_lookup) as source_lookups | where total_entities_truncated > 0 AND source_lookups != """" | sort - _time | head 1 | eval source_lookups = mvdedup(source_lookups), source_lookups=mvjoin(source_lookups, "", "") | fields total_entities_truncated source_lookups"
Identity - Email Activity to Non-corporate Domains by Users Per 1d - Model Gen,,"| tstats `summariesonly` sum(All_Email.size) as bytes, values(All_Email.recipient) as recipient from datamodel=Email.All_Email  where NOT `cim_corporate_email_domain_search(""All_Email.recipient"")` by _time, All_Email.src_user, All_Email.src_user_bunit span=1h | `drop_dm_object_name(""All_Email"")` | fit DensityFunction bytes by src_user_bunit partial_fit=true dist=norm into app:email_activity_to_non_corporate_by_user_1h"
Identity - Emails to Noncorporate Domains - Swimlane,,"| tstats `summariesonly` sum(All_Email.size) as bytes, values(All_Email.src_user) as src_user, values(All_Email.recipient) as recipient, values(All_Email.subject) as subject, count from datamodel=Email.All_Email where $constraints$ NOT `cim_corporate_email_domain_search(""All_Email.recipient"")` by _time span=$span$"
Identity - High Risk User Events,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Identity - High Risk Users,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Identity - High Volume Email Activity with Non-corporate Domains - Rule,Alerts on high volume email activity by a user to non-corporate domains.,"| tstats `summariesonly` sum(All_Email.size) as bytes, values(All_Email.recipient) as recipient from datamodel=Email.All_Email where NOT `cim_corporate_email_domain_search(""All_Email.recipient"")` by All_Email.src_user, All_Email.src_user_bunit | `drop_dm_object_name(""All_Email"")` | `mltk_apply_upper(""app:email_activity_to_non_corporate_by_user_1h"", ""medium"", ""bytes"")`"
Identity - Identity Truncations,,"index=_internal sourcetype=""identity_correlation:merge"" WARNING type=""identity"" | timechart span=1m sum(entities_truncated) as total_entities_truncated values(source_lookup) as source_lookups | where total_entities_truncated > 0 AND source_lookups != """" | sort - _time | head 1 | eval source_lookups = mvdedup(source_lookups), source_lookups=mvjoin(source_lookups, "", "") | fields total_entities_truncated source_lookups"
Identity - Make Categories - Lookup Gen,Maintains Asset and Identity categories,"| from inputlookup:category_lookup | fillnull value=""static"" category_source | inputlookup append=t asset_lookup_by_str | inputlookup append=t asset_lookup_by_cidr | fillnull value=""asset"" category_source | inputlookup append=t identity_lookup_expanded | fillnull value=""identity"" category_source | stats count by category, category_source | sort category, category_source | fields category category_source | outputlookup category_lookup | stats count"
Identity - Make PCI Domains - Lookup Gen,Maintains Asset PCI domains,"| from inputlookup:pci_domains_lookup | fillnull value=""static"" pci_domain_source | inputlookup append=t asset_lookup_by_str | inputlookup append=t asset_lookup_by_cidr | fillnull value=""asset"" pci_domain_source | stats count by pci_domain, pci_domain_source | sort pci_domain, pci_domain_source | fields pci_domain pci_domain_source | outputlookup pci_domains_lookup | stats count"
Identity - Noncorporate Email Activity,,"| makeresults | eval current_count=4628231, historical_count=5382311, delta=-754080"
Identity - Noncorporate Web Activity,,"| makeresults | eval current_count=17113431, historical_count=21716157, delta=-4602726"
Identity - Noncorporate Web Uploads - Swimlane,,"| tstats `summariesonly` sum(Web.bytes) as bytes, values(Web.user) as user, values(Web.url) as url, values(Web.http_method) as http_method, values(Web.http_content_type) as http_content_type, count from datamodel=Web.Web where $constraints$  NOT(`cim_corporate_web_domain_search(""Web.url"")`) (Web.http_method=""POST"" OR Web.http_method=""PUT"") by _time span=$span$ | `drop_dm_object_name(""Web"")`"
Identity - Remote Access - Swimlane,,"| tstats `summariesonly` count, values(Authentication.user) as user, values(Authentication.user_bunit) as user_bunit from datamodel=Authentication.Authentication where $constraints$ by Authentication.src, _time span=$span$ | `drop_dm_object_name(""Authentication"")` | `get_identity4events(user)` | `get_asset(src)` | iplocation src | eval src_city=if(isnull(src_city), City,src_city) | eval src_country=if(isnull(src_country), Country,src_country) | where isnotnull(src_city) AND isnotnull(user_work_city) AND (lower(user_work_city)!=lower(src_city) OR lower(user_work_country)!=lower(src_country)) | stats sum(count) as count, values(user) as user, values(src) as src, values(user_bunit) as user_bunit, values(user_work_city) as user_work_city, values(src_city) as src_city, values(user_work_country) as user_work_country, values(src_country) as src_country by _time | fields count, user, user_bunit, src, user_work_city, user_work_country, src_city, src_country"
Identity - Tickets by User - Swimlane,,"| tstats `summariesonly` count, values(All_Ticket_Management.src_user) as src_user, values(All_Ticket_Management.description) as description, values(All_Ticket_Management.priority) as priority, values(All_Ticket_Management.severity) as severity from datamodel=Ticket_Management.All_Ticket_Management where $constraints$ by _time span=$span$ | `drop_dm_object_name(""All_Ticket_Management"")`"
Identity - Watchlisted Sites - Swimlane,,"| tstats `summariesonly` count, values(Web.user) as user, values(Web.url) as url, values(Web.src) as src  from datamodel=Web.Web where $constraints$ Web.tag=""web_watchlist"" by _time span=$span$ | `drop_dm_object_name(""Web"")`"
Identity - Watchlisted Website Activity,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Identity - Web Uploads to Non-corporate Domains - Rule,Alerts on high volume web uploads by a user to non-corporate domains.,"| tstats `summariesonly` sum(Web.bytes) as bytes from datamodel=Web.Web where (Web.http_method=""POST"" OR Web.http_method=""PUT"")  NOT (`cim_corporate_web_domain_search(""Web.url"")`) by Web.user, Web.user_bunit | `drop_dm_object_name(""Web"")` | `mltk_apply_upper(""app:web_upload_to_non_corporate_by_user_1h"", ""medium"", ""bytes"")`"
Identity - Web Uploads to Non-corporate Domains by Users Per 1d - Model Gen,,"| tstats `summariesonly` sum(Web.bytes) as bytes from datamodel=Web.Web where NOT(`cim_corporate_web_domain_search(""Web.url"")`) (Web.http_method=""POST"" OR Web.http_method=""PUT"") by _time, Web.user, Web.user_bunit span=1h | `drop_dm_object_name(""Web"")` | fit DensityFunction bytes by user_bunit partial_fit=true dist=norm into app:web_upload_to_non_corporate_by_user_1h"
Identity Marker,Add identity Markers to scoreboard_admin,| id | collect index=_audit
IDS - Activity By Category,,"| tstats `summariesonly` count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.category | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - Activity By IDS Type,,"| tstats `summariesonly` count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.ids_type | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - Activity By Severity,,"| tstats `summariesonly` count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.severity | `drop_dm_object_name(""IDS_Attacks"")` | sort - count"
IDS - Activity Over Time,,| `tstats` count from datamodel=Intrusion_Detection.IDS_Attacks by _time span=10m | timechart minspan=10m useother=`useother` count
IDS - Activity Over Time By Attack,,"| `tstats` count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.signature span=10m | timechart minspan=10m useother=`useother` count by IDS_Attacks.signature | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - Activity Over Time By Category,,"| `tstats` count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.category span=10m | timechart minspan=10m useother=`useother` count by IDS_Attacks.category | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - Activity Over Time By Destination,,"| `tstats` count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.dest span=10m | timechart minspan=10m useother=`useother` count by IDS_Attacks.dest | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - Activity Over Time By Device,,"| `tstats` count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.dvc span=10m | timechart minspan=10m useother=`useother` count by IDS_Attacks.dvc | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - Activity Over Time By Severity,,"| `tstats` count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.severity span=10m | timechart minspan=10m useother=`useother` count by IDS_Attacks.severity | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - Activity Over Time By Source,,"| `tstats` count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.src span=10m | timechart minspan=10m useother=`useother` count by IDS_Attacks.src | `drop_dm_object_name(""IDS_Attacks"")`"
IDS - All IDS Attacks By Asset - Swimlane,,"| tstats `summariesonly` values(IDS_Attacks.severity) as severity,values(IDS_Attacks.signature) as signature,values(IDS_Attacks.src) as src,values(IDS_Attacks.dest) as dest,count from datamodel=Intrusion_Detection.IDS_Attacks where $constraints$ by _time span=$span$"
IDS - All IDS Attacks By Identity - Swimlane,,"| tstats `summariesonly` values(IDS_Attacks.severity) as severity,values(IDS_Attacks.signature) as signature,values(IDS_Attacks.src) as src,values(IDS_Attacks.dest) as dest,count from datamodel=Intrusion_Detection.IDS_Attacks where $constraints$ by _time span=$span$"
IDS - High Severity Attacks,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
IDS - New Attacks,,"| `ids_attack_tracker(firstTime)` | `uitime(firstTime)` | sort 100 - firstTime | fields firstTime,ids_type,signature,vendor_product"
IDS - Scanning Activity (Many Attacks),,"| tstats `summariesonly` dc(IDS_Attacks.signature) as attack_count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src | `drop_dm_object_name(""IDS_Attacks"")` | sort 10 - attack_count"
IDS - Scanning Activity (Many Systems),,"| tstats `summariesonly` dc(IDS_Attacks.dest) as dest_count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src | `drop_dm_object_name(""IDS_Attacks"")` | sort 10 - dest_count"
IDS - Top Attacks By Attack,,"| tstats `summariesonly` dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.signature | `drop_dm_object_name(""IDS_Attacks"")` | sort - count"
IDS - Top Attacks By Category,,"| tstats `summariesonly` dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.category | `drop_dm_object_name(""IDS_Attacks"")` | sort - count"
IDS - Top Attacks By Destination,,"| tstats `summariesonly` dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.dest | `drop_dm_object_name(""IDS_Attacks"")` | sort - count"
IDS - Top Attacks By Device,,"| tstats `summariesonly` dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.dvc | `drop_dm_object_name(""IDS_Attacks"")` | sort - count"
IDS - Top Attacks By Severity,,"| tstats `summariesonly` dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.severity | `drop_dm_object_name(""IDS_Attacks"")`  | sort - count"
IDS - Top Attacks By Source,,"| tstats `summariesonly` dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src | `drop_dm_object_name(""IDS_Attacks"")` | sort - count"
IDS - Unique Categories,,"| makeresults | eval current_count=1, historical_count=1, delta=0"
IDS - Unique Destinations,,"| makeresults | eval current_count=1, historical_count=1, delta=0"
IDS - Unique Signature Count,,"| makeresults | eval current_count=1, historical_count=1, delta=0"
IDS - Unique Sources,,"| makeresults | eval current_count=1, historical_count=1, delta=0"
Incident Review - Activity By Reviewer Over Time,,| `incident_review` | timechart useother=`useother` count by reviewer_realname
Incident Review - Main,,"$time_filter$ (`get_notable_index` OR `get_sequenced_index`) $source_filter$ | eval `get_event_id_meval`,rule_id=event_id | search $event_id_filter$ | fields - host_* | tags outputfield=tag | `mvappend_field(tag,orig_tag)` | dedup rule_id | `notable_xref_lookup` | `get_correlations` | search $security_domain_filter$ | `get_current_status` | search $status_filter$ | `get_owner` | search $owner_filter$ | `get_urgency` | search $urgency_filter$ | typer | tags outputfield=tag | `mvappend_field(tag,orig_tag)` | search $tag_filter$ | `suppression_extract` | search NOT suppression=* | `risk_correlation`"
Incident Review - Mean Time To Closure,,"| tstats `summariesonly` earliest(_time) as _time from datamodel=Incident_Management.Notable_Events_Meta by source,Notable_Events_Meta.rule_id | `drop_dm_object_name(""Notable_Events_Meta"")` | `get_correlations` | `get_current_status` | search status_label=""Closed"" | eval ttc=mvindex(review_time, 0) | eval ttc=ttc-_time | stats count avg(ttc) as avg_ttc,max(ttc) as max_ttc by rule_name | sort - avg_ttc | `uptime2string(avg_ttc, avg_ttc)` | `uptime2string(max_ttc, max_ttc)` | rename *_ttc* as *(time_to_closure)* | fields - *_dec"
Incident Review - Mean Time To Triage,,"| tstats `summariesonly` earliest(_time) as _time from datamodel=Incident_Management.Notable_Events_Meta by source,Notable_Events_Meta.rule_id | `drop_dm_object_name(""Notable_Events_Meta"")` | `get_correlations` | join rule_id [| from inputlookup:incident_review_lookup | eval _time=time | stats earliest(_time) as review_time by rule_id] | eval ttt=review_time-_time | stats count,avg(ttt) as avg_ttt,max(ttt) as max_ttt by rule_name | sort - avg_ttt | `uptime2string(avg_ttt, avg_ttt)` | `uptime2string(max_ttt, max_ttt)` | rename *_ttt* as *(time_to_triage)* | fields - *_dec"
Incident Review - Notable Events By Owner,,`notable` | search NOT `suppression` | chart count over owner by urgency | `sort_chart`
Incident Review - Notable Events By Status,,`notable` | search NOT `suppression` | stats count by status_label | rename status_label as status | sort 10 - count
Incident Review - Recent Review Activity,,"| `incident_review` | rename status_label as status | sort 100 - _time | table _time,rule_id,status,rule_name,owner_realname,comment,reviewer_realname"
Incident Review - Top Reviewers,,"| `incident_review` | stats sparkline,count,min(_time) as firstTime,max(_time) as lastTime by reviewer_realname | `uitime(firstTime)` | `uitime(lastTime)` | sort 100 - count"
instrumentation.anonymized.eventsByTime,,"(index=_introspection OR index=_telemetry) sourcetype=splunk_telemetry source=""http-stream"" visibility=*anonymous* | append [| savedsearch instrumentation.licenseUsage]"
instrumentation.anonymous.firstEvent,,"(index=_introspection OR index=_telemetry) sourcetype=splunk_telemetry source=""http-stream"" visibility=*anonymous* | append [savedsearch instrumentation.licenseUsage] | where date >= ""$beginDate$"" AND date <= ""$endDate$"" | head 1"
instrumentation.deployment.app,,"| rest /services/apps/local | eval _time=now() | fields splunk_server title updated version disabled | eval data=""{\""host\"":\""""+splunk_server+""\"",\""name\"":\""""+title+""\"",\""version\"":\""""+coalesce(version, """")+""\"",\""enabled\"":""+if(disabled=0, ""true"", ""false"")+""}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.deployment.clustering.indexer,,"| makeresults annotate=true | append [localop | rest /services/cluster/config] | sort -mode | head 1 | eval data=if(mode==""master"",""{\""host\"":\""""+splunk_server+""\"",\""timezone\"":\""""+strftime(now(),""%z"")+""\"",\""multiSite\"":""+multisite+"",\""summaryReplication\"":""+if(summary_replication=1,""true"",""false"")+"",\""enabled\"":true,\""replicationFactor\"":""+tostring(replication_factor)+"",\""siteReplicationFactor\"":""+coalesce(replace(replace(site_replication_factor, ""origin"", ""\""origin\""""), ""total"", ""\""total\""""), ""null"")+"",\""siteSearchFactor\"":""+coalesce(replace(replace(site_search_factor, ""origin"", ""\""origin\""""), ""total"", ""\""total\""""),""null"")+"",\""searchFactor\"":""+tostring(search_factor)+""}"",""{\""host\"":\""""+splunk_server+""\"",\""timezone\"":\""""+strftime(now(),""%z"")+""\"",\""enabled\"":false}"") | eval _time=now() | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.deployment.featureFlags,,"| rest /services/properties splunk_server=local | rename title as conf |  map maxsearches=200 search=""| rest /services/properties/$conf$ fillContents=1 | rename title as featureFlag  | search featureFlag=_feature-flag*"" | fields featureFlag, name, creationDate, disabled, description |  makejson featureFlag, name, description, disabled, creationDate output=data | outputtelemetry input=data anonymous=true support=true component=""deployment.featureFlags"" optinrequired=3 type=event"
instrumentation.deployment.forwarders,,"index=_internal source=*metrics.log* TERM(group=tcpin_connections) (TERM(connectionType=cooked) OR TERM(connectionType=cookedSSL)) fwdType=* guid=* | rename sourceIp as forwarderHost | eval connectionType=case(fwdType==""uf"" or fwdType==""lwf"" or fwdType==""full"", fwdType, 1==1,""Splunk fwder"") | eval version=if(isnull(version),""pre 4.2"",version) | bin _time span=1d | stats sum(kb) as kb, latest(connectionType) as connectionType, latest(arch) as arch, latest(os) as os, latest(version) as version latest(forwarderHost) as forwarderHost by guid _time | stats estdc(forwarderHost) as numHosts estdc(guid) as numInstances `instrumentation_distribution_values(kb)` by connectionType arch os version _time | eval data=""{\""hosts\"":""+tostring(numHosts)+"",\""instances\"":""+tostring(numInstances)+"",\""architecture\"":\""""+arch+""\"",\""os\"":\""""+os+""\"",\""splunkVersion\"":\""""+version+""\"",\""type\"":\""""+connectionType+""\"",\""bytes\"":{"" + `instrumentation_distribution_strings(""kb"",1024,0)` + ""}}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.deployment.index,,"| rest /services/data/indexes | join type=outer splunk_server title [| rest /services/data/indexes-extended] 
| append [| rest /services/data/indexes datatype=metric | join type=outer splunk_server title [| rest /services/data/indexes-extended datatype=metric]] 
| eval warm_bucket_size = if(isnotnull('bucket_dirs.home.warm_bucket_size'), 'bucket_dirs.home.warm_bucket_size', 'bucket_dirs.home.size') 
| eval cold_bucket_size_gb = tostring(round(coalesce('bucket_dirs.cold.bucket_size', 'bucket_dirs.cold.size', 0) / 1024, 2)) 
| eval warm_bucket_size_gb = tostring(round(coalesce(warm_bucket_size,0) / 1024, 2)) 
| eval hot_bucket_size = tostring(round(coalesce(total_size / 1024 - cold_bucket_size_gb - warm_bucket_size_gb, 0),2)) 
| eval hot_bucket_size_gb = tostring(round(coalesce(hot_bucket_size,0) / 1024, 2)) 
| eval thawed_bucket_size_gb = tostring(round(coalesce('bucket_dirs.thawed.bucket_size', 'bucket_dirs.thawed.size',0) / 1024, 2)) 
| eval warm_bucket_count = tostring(coalesce('bucket_dirs.home.warm_bucket_count', 0)) 
| eval hot_bucket_count = tostring(coalesce('bucket_dirs.home.hot_bucket_count',0)) 
| eval cold_bucket_count = tostring(coalesce('bucket_dirs.cold.bucket_count',0)) 
| eval thawed_bucket_count = tostring(coalesce('bucket_dirs.thawed.bucket_count',0)) 
| eval home_event_count = tostring(coalesce('bucket_dirs.home.event_count',0)) 
| eval cold_event_count = tostring(coalesce('bucket_dirs.cold.event_count',0)) 
| eval thawed_event_count = tostring(coalesce('bucket_dirs.thawed.event_count',0)) 
| eval home_bucket_capacity_gb = coalesce(if('homePath.maxDataSizeMB' == 0, ""\""unlimited\"""", round('homePath.maxDataSizeMB' / 1024, 2)), ""\""unlimited\"""") 
| eval cold_bucket_capacity_gb = coalesce(if('coldPath.maxDataSizeMB' == 0, ""\""unlimited\"""", round('coldPath.maxDataSizeMB' / 1024, 2)), ""\""unlimited\"""") 
| eval currentDBSizeGB = tostring(round(coalesce(currentDBSizeMB,0) / 1024, 2)) 
| eval maxTotalDataSizeGB = tostring(if(maxTotalDataSizeMB = 0, ""unlimited"", coalesce(round(maxTotalDataSizeMB / 1024, 2), ""null""))) 
| eval minTime = tostring(coalesce(strptime(minTime,""%Y-%m-%dT%H:%M:%S%z""),""null"")) 
| eval maxTime = tostring(coalesce(strptime(maxTime,""%Y-%m-%dT%H:%M:%S%z""),""null"")) 
| eval total_bucket_count = tostring(if(isnotnull(total_bucket_count), total_bucket_count, 0)) 
| eval totalEventCount = tostring(coalesce(totalEventCount, 0)) 
| eval total_raw_size_gb = tostring(coalesce(round(total_raw_size / 1024, 2), ""null"")) 
| eval timeResolution = IF('metric.timestampResolution'==""ms"",""millisec"",""sec"") 
| eval index_type = coalesce(datatype ,""event"") 
| rename eai:acl.app as App 
| eval _time=now() 
| fields splunk_server, title,index_type, timeResolution,
currentDBSizeGB, totalEventCount, total_bucket_count, 
total_raw_size_gb, minTime, maxTime, home_bucket_capacity_gb, cold_bucket_capacity_gb, 
hot_bucket_size_gb, warm_bucket_size_gb, cold_bucket_size_gb, thawed_bucket_size_gb, 
hot_bucket_count, warm_bucket_count, cold_bucket_count, thawed_bucket_count, 
home_event_count, cold_event_count, thawed_event_count, 
maxTotalDataSizeGB, maxHotBuckets, maxWarmDBCount App _time 
| eval data=""{\""host\"":\""""+splunk_server+""\"",\""name\"":\""""+title+""\"",\""type\"":\""""+index_type+""\"",\""timeResolution\"":\""""+timeResolution+""\"",\""app\"":\""""+App+""\"",\""total\"":{\""currentDBSizeGB\"":""+currentDBSizeGB+"",\""maxDataSizeGB\"":""+maxTotalDataSizeGB+"",\""events\"":""+totalEventCount+"",\""buckets\"":""+total_bucket_count+"",\""rawSizeGB\"":""+total_raw_size_gb+"",\""minTime\"":""+minTime+"",\""maxTime\"":""+maxTime+""},\""buckets\"":{\""homeCapacityGB\"":""+home_bucket_capacity_gb+"",\""homeEventCount\"":""+home_event_count+"",\""coldCapacityGB\"":""+cold_bucket_capacity_gb+"",\""hot\"":{\""sizeGB\"":""+hot_bucket_size_gb+"",\""count\"":""+hot_bucket_count+"",\""max\"":""+maxHotBuckets+""},\""warm\"":{\""sizeGB\"":""+warm_bucket_size_gb+"",\""count\"":""+warm_bucket_count+""},\""cold\"":{\""sizeGB\"":""+cold_bucket_size_gb+"",\""count\"":""+cold_bucket_count+"",\""events\"":""+cold_event_count+""},\""thawed\"":{\""sizeGB\"":""+thawed_bucket_size_gb+"",\""count\"":""+thawed_bucket_count+"",\""events\"":""+thawed_event_count+""}}}"" 
| eval date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.deployment.node,,"index=_introspection sourcetype=splunk_disk_objects component::Partitions | bin _time span=1d | stats latest(data.free) as partitionFree, latest(data.capacity) as partitionCapacity by host data.fs_type data.mount_point _time | eval partitionUtilized=round(1-partitionFree/partitionCapacity,2) | eval partitions=""{\""utilization\"":""+`instrumentation_number_format(partitionUtilized,1,2)`+"",\""capacity\"":""+`instrumentation_number_format(partitionCapacity,1048576,0)`+"",\""fileSystem\"":\""""+'data.fs_type' + ""\""}"" | stats delim="","" values(partitions) as partitions by host _time | rename _time as date | mvcombine partitions | rename date as _time | join type=left host _time [search index=_introspection sourcetype=splunk_resource_usage component::Hostwide | eval cpuUsage = 'data.cpu_system_pct' + 'data.cpu_user_pct' | rename data.mem_used as memUsage | bin _time span=1d | stats latest(data.cpu_count) as coreCount, latest(data.virtual_cpu_count) as virtualCoreCount, latest(data.mem) as memAvailable, latest(data.splunk_version) as splunkVersion, latest(data.cpu_arch) as cpuArch, latest(data.os_name) as osName, latest(data.os_name_ext) as osNameExt, latest(data.os_version) as osVersion, `instrumentation_distribution_values(cpuUsage)`, `instrumentation_distribution_values(memUsage)`, latest(data.instance_guid) as guid by host _time] | fillnull value=""null"" coreCount virtualCoreCount memAvailable | eval splunkVersion=coalesce(""\""""+splunkVersion+""\"""", ""null""), cpuArch=coalesce(""\""""+cpuArch+""\"""", ""null""), osName=coalesce(""\""""+osName + ""\"""", ""null""), osNameExt=coalesce(""\""""+osNameExt+""\"""", ""null""), osVersion=coalesce(""\""""+osVersion+""\"""", ""null""), guid=coalesce(""\""""+guid+""\"""", ""null"") | eval data = ""{\""guid\"":""+guid+"",\""host\"":\""""+replace(host,""\"""", ""\\\"""")+""\"",\""partitions\"": "" + coalesce(""["" + partitions + ""]"", ""null"") + "",\""cpu\"":{\""architecture\"":""+cpuArch+"",\""coreCount\"":"" + tostring(coreCount)+ "",\""virtualCoreCount\"":""+tostring(virtualCoreCount)+"",\""utilization\"":{"" + `instrumentation_distribution_strings(""cpuUsage"",.01,2)` + ""}},\""memory\"":""+""{\""capacity\"":""+ `instrumentation_number_format(memAvailable,1048576,0)`+"",\""utilization\"":{"" + `instrumentation_distribution_strings(""memUsage"",1/memAvailable,2)` + ""}},\""os\"":""+osName+"",\""osExt\"":""+osNameExt + "",\""osVersion\"":""+osVersion+"",\""splunkVersion\"":""+splunkVersion+""}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.lastSent,,"index=_telemetry source=telemetry sourcetype=splunk_telemetry_log status=success | fillnull value=anonymous visibility | eval anonymous_send_time = if(visibility LIKE ""%anonymous%"", _time, null) | eval license_send_time = if(visibility LIKE ""%license%"", _time, null) | eval support_send_time = if(visibility LIKE ""%support%"", _time, null) | stats latest(anonymous_send_time) as latest_anonymous_send_time latest(license_send_time) as latest_license_send_time latest(support_send_time) as latest_support_send_time"
instrumentation.license.firstEvent,,"| savedsearch instrumentation.licenseUsage | where date >= ""$beginDate$"" AND date <= ""$endDate$"" | head 1"
instrumentation.licenseUsage,,"NOT() | append [search index=_telemetry type=RolloverSummary | eval date=strftime(_time-43200, ""%Y-%m-%d"") | eval licenseIDs=coalesce(replace(replace(replace(replace(licenseGuids,""\["",""[\""""),""\]"",""\""]""),"","",""\"",\""""),"" "", """"),""null""), subgroup_id=coalesce(subgroupId, ""Production""), group_id=coalesce(""\""""+licenseGroup+""\"""", ""null""), lmGuid=coalesce(""\""""+guid+""\"""", ""null""), productType=coalesce(""\""""+productType+""\"""", ""null""), type_id=if(substr(stack,1,16)=""fixed-sourcetype"", ""fixed-sourcetype"",stack) | stats max(_time) as lastTime latest(stacksz) as stack_quota, latest(poolsz) as pool_quota, sum(b) as consumption by pool stack host lmGuid licenseIDs type_id group_id subgroup_id productType date | rename stack as stack_id | eval pool=""{\""quota\"":"" + pool_quota+"",\""consumption\"":""+consumption+""}"" | stats delim="","" values(pool) as pools, max(lastTime) as lastTime max(stack_quota) as stack_quota sum(consumption) as stack_consumption by stack_id group_id subgroup_id type_id lmGuid host licenseIDs productType date | mvcombine pools | eval _raw=""{\""component\"":\""licensing.stack\"",\""data\"":{\""host\"":\""""+host+""\"",\""guid\"":""+lmGuid+"",\""name\"":\""""+replace(stack_id,""\"""", ""\\\"""")+""\"",\""type\"":\"""" + type_id + ""\"",\""subgroup\"":\"""" + subgroup_id + ""\"",\""product\"":""+productType+"",\""quota\"":"" + stack_quota+"",\""consumption\"":""+stack_consumption+"",\""pools\"":[""+pools+""],\""licenseIDs\"":""+licenseIDs+""}, \""date\"":\""""+date+""\"",\""visibility\"":\""anonymous,license\""}"", _time=lastTime]"
instrumentation.licensing.stack,,"index=_telemetry source=*license_usage_summary.log* sourcetype=splunkd TERM(type=RolloverSummary) | eval date=strftime(_time, ""%m-%d-%Y""), licenseIDs=coalesce(replace(replace(replace(replace(licenseGuids,""\["",""[\""""),""\]"",""\""]""),"","",""\"",\""""),"" "", """"),""null""), subgroup_id=coalesce(subgroupId, ""Production""), group_id=coalesce(""\""""+licenseGroup+""\"""", ""null""), lmGuid=coalesce(""\""""+guid+""\"""", ""null""), productType=coalesce(""\""""+productType+""\"""", ""null""), type_id=if(substr(stack,1,16)=""fixed-sourcetype"", ""fixed-sourcetype"",stack) | stats latest(stacksz) as stack_quota, latest(poolsz) as pool_quota, sum(b) as consumption by pool stack host lmGuid licenseIDs type_id group_id subgroup_id productType date | rename stack as stack_id | eval pool=""{\""quota\"":"" + pool_quota+"",\""consumption\"":""+consumption+""}"" | stats delim="","" values(pool) as pools, max(stack_quota) as stack_quota sum(consumption) as stack_consumption by stack_id group_id subgroup_id type_id lmGuid host licenseIDs productType date | mvcombine pools | eval data=""{\""host\"":\""""+host+""\"",\""guid\"":""+lmGuid+"",\""name\"":\""""+replace(stack_id,""\"""", ""\\\"""")+""\"",\""type\"":\"""" + type_id + ""\"",\""subgroup\"":\"""" + subgroup_id + ""\"",\""product\"":""+productType+"",\""quota\"":"" + stack_quota+"",\""consumption\"":""+stack_consumption+"",\""pools\"":[""+pools+""],\""licenseIDs\"":""+licenseIDs+""}"" | eval _time=strptime(date, ""%m-%d-%Y"")-43200 | fields data _time"
instrumentation.performance.bundleReplication,,"index=_internal source=*/metrics.log TERM(group=bundles_uploads) | bin _time span=1d | stats count as bundles_uploads_count avg(peer_count) as avg_peer_count avg(average_baseline_bundle_bytes) as avg_baseline_bundle_bytes max(average_baseline_bundle_bytes) as max_baseline_bundle_bytes avg(average_delta_bundle_bytes) as avg_delta_bundle_bytes max(average_delta_bundle_bytes) as max_delta_bundle_bytes sum(total_count) as total_count sum(delta_count) as total_delta_count sum(success_count) as total_success_count sum(baseline_count) as total_baseline_count sum(already_present_count) as total_already_present_count sum(total_msec_spent) as total_msec_spent sum(delta_msec_spent) as total_delta_msec_spent sum(total_bytes) as total_bytes sum(delta_bytes) as total_delta_bytes by host _time | makejson output=data | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.performance.bundleReplicationCycle,,"index=_internal source=*/metrics.log splunk_server=local TERM(group=bundle_replication) TERM(name=cycle_dispatch) 
| stats count(cycle_id) as cycleCount avg(peer_count) as avgPeerCount avg(peer_success_count) as avgPeerSuccessCount avg(replication_time_msec) as avgReplicationTimeMsec avg(bundle_bytes) as avgBundleBytes avg(delta_bundle_bytes) as avgDeltaBundleBytes 
| appendcols [| rest /services/search/distributed/bundle/replication/config splunk_server=local | fields replicationPolicy] 
| eval avgPeerCount=round(avgPeerCount,2) | eval avgPeerSuccessCount=round(avgPeerSuccessCount,2) 
| eval avgReplicationTimeMsec=round(avgReplicationTimeMsec,2) | eval avgBundleBytes=round(avgBundleBytes,2) | eval avgDeltaBundleBytes=round(avgDeltaBundleBytes,2) 
| makejson output=data | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.performance.indexing,,"index=_internal TERM(group=thruput) TERM(name=index_thruput) source=*metrics.log* | bin _time span=30s | stats sum(kb) as kb sum(instantaneous_kbps) as instantaneous_kbps by host _time | bin _time span=1d | stats sum(kb) as totalKB `instrumentation_distribution_values(instantaneous_kbps)` by host _time | eval data=""{\""host\"":\""""+host+""\"",\""thruput\"":{\""total\"":"" + tostring(round(totalKB*1024)) + "","" + `instrumentation_distribution_strings(""instantaneous_kbps"",1024,0)`+""}}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.performance.search,,"index=_audit sourcetype=audittrail TERM(action=search) TERM(info=completed) total_run_time=* | eval search_et=if(search_et=""N/A"", 0, search_et) | eval search_lt=if(search_lt=""N/A"", exec_time, min(exec_time,search_lt)) | eval timerange=search_lt-search_et | bin _time span=1d | stats latest(searched_buckets) as searched_buckets latest(total_slices) as total_slices latest(scan_count) as scan_count latest(timerange) as timerange latest(total_run_time) as runtime by search_id _time | stats `instrumentation_distribution_values(runtime)`, `instrumentation_distribution_values(searched_buckets)`, `instrumentation_distribution_values(total_slices)`, `instrumentation_distribution_values(scan_count)`, `instrumentation_distribution_values(timerange)` count as numSearches by _time | eval data=""{\""searches\"":""+tostring(numSearches)+"",\""latency\"":{""+`instrumentation_distribution_strings(""runtime"",1,2)`+""},\""buckets\"":{""+`instrumentation_distribution_strings(""searched_buckets"",1,2)`+""},\""slices\"":{""+`instrumentation_distribution_strings(""total_slices"",1,2)`+""},\""scanCount\"":{""+`instrumentation_distribution_strings(""scan_count"",1,2)`+""},\""dayRange\"":{""+`instrumentation_distribution_strings(""timerange"",1/86400,2)`+""}}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.reporting,,"index=_telemetry source=telemetry sourcetype=splunk_telemetry_log | fields _raw | spath | eval time_formatted = strftime(_time, ""%Y-%m-%d %H:%M:%S"") | search (status=success OR status=failed)"
instrumentation.reporting.errors,,index=_telemetry source=telemetry sourcetype=splunk_telemetry_log status=failed visibility=*$visibility$*
instrumentation.reportingErrorCount,,"index=_telemetry source=telemetry sourcetype=splunk_telemetry_log status=failed | fillnull value=anonymous visibility | stats count(eval(visibility LIKE ""%anonymous%"")) as anonymous_errors count(eval(visibility LIKE ""%license%"")) as license_errors count(eval(visibility LIKE ""%support%"")) as support_errors"
instrumentation.support.eventsByTime,,"(index=_introspection OR index=_telemetry) sourcetype=splunk_telemetry source=""http-stream"" visibility=*support* | append [| savedsearch instrumentation.licenseUsage]"
instrumentation.support.firstEvent,,"(index=_introspection OR index=_telemetry) sourcetype=splunk_telemetry source=""http-stream"" visibility=*support* | append [savedsearch instrumentation.licenseUsage] | where date >= ""$beginDate$"" AND date <= ""$endDate$"" | head 1"
instrumentation.topology.deployment.clustering.member,,"| localop | rest /services/cluster/master/peers | eval data=""{\""master\"":\""""+splunk_server+""\"",\""member\"":{\""host\"":\""""+label+""\"",\""guid\"":\""""+title+""\"",\""status\"":\""""+status+""\""},\""site\"":\""""+site+""\""}"" | where isnotnull(data) | eval _time=now() | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.topology.deployment.clustering.searchhead,,"| localop | rest /services/cluster/master/searchheads | where splunk_server!=label | eval data=""{\""master\"":\""""+splunk_server+""\"",\""searchhead\"":{\""host\"":\""""+label+""\"",\""guid\"":\""""+title+""\"",\""status\"":\""""+status+""\""},\""site\"":\""""+site+""\""}"" | where isnotnull(data) | eval _time=now() | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.topology.deployment.distsearch.peer,,"| localop | rest /services/search/distributed/peers | eval data=""{\""host\"":\""""+splunk_server+""\"",\""peer\"":{\""host\"":\""""+peerName+""\"",\""guid\"":\""""+guid+""\"",\""status\"":\""""+status+""\""}}"" | where isnotnull(data) | eval _time=now() | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.topology.deployment.licensing.slave,,"| localop | rest /services/licenser/slaves | eval data=""{\""master\"":\""""+splunk_server+""\"",\""slave\"":{\""host\"":\""""+label+""\"",\""guid\"":\""""+title+""\"",\""pool\"":\""""+active_pool_ids+""\""}}"" | where isnotnull(data) | eval _time=now() | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.topology.deployment.shclustering.member,,"| localop | rest /services/shcluster/captain/members | eval data=""{\""site\"":\""""+site+""\"",\""captain\"":\""""+splunk_server+""\"",\""member\"":{\""host\"":\""""+label+""\"",\""guid\"":\""""+title+""\"",\""status\"":\""""+status+""\""}}"" | where isnotnull(data) | eval _time=now() | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.admissionRules.enabled,,NOT() | append [rest splunk_server=local /services/workloads/status/admission-control-status | fields enabled]
instrumentation.usage.admissionRules.report,,"|rest splunk_server=local /services/server/info | appendcols [|rest splunk_server=local /servicesNS/nobody/splunk_instrumentation/telemetry | fields telemetrySalt]| eval telemetrySalt=if(isnull(telemetrySalt), """", telemetrySalt), hashHost=sha1(telemetrySalt+splunk_server), roleCombine=mvjoin(server_roles, "", "") | fields guid, hashHost, roleCombine| appendcols [|savedsearch instrumentation.usage.admissionRules.enabled] | appendcols [|savedsearch instrumentation.usage.admissionRules.rules] | appendcols [|savedsearch instrumentation.usage.admissionRules.rulesTriggered] | fillnull value=0 | eval data=""{\""host\"": \""""+hashHost+""\"", \""guid\"": \""""+guid+""\"", \""admissionRulesEnabled\"": \""""+enabled+""\"", \""serverRoles\"": \""""+roleCombine+""\"", \""rules\"":{\""totalCount\"":\""""+ruleTotal+""\""""+if(ruleTotal>0, "", ""+ruleCombined, """")+""}, \""rulesTriggered\"":[""+if(rulesTriggeredTotal>0, rulesTriggeredCombined, """")+""]}"", _time=now(), date=strftime(_time, ""%Y-%m-%d"")| fields _time date data"
instrumentation.usage.admissionRules.rules,,"NOT() | append [rest splunk_server=local ""/services/workloads/rules?workload_rule_type=search_filter"" | `hash_admission_rule_predicate(index)` | `hash_admission_rule_predicate(app)` | `hash_admission_rule_predicate(user)` | `hash_admission_rule_predicate(role)` | eval data=""\""""+sha1(title)+""\"":{\""predicate\"":\""""+predicate+""\""}"" | stats list(data) AS ruleList, count AS ruleTotal | eval ruleCombined=mvjoin(ruleList, "", "") | fields ruleTotal, ruleCombined]"
instrumentation.usage.admissionRules.rulesTriggered,,"index=_internal sourcetype=wlm_monitor prefilter_action=filter | stats count by prefilter_rule | fields prefilter_rule, count | eval data=""{\""searchFilterRule\"":\""""+sha1(prefilter_rule)+""\"", \""filteredSearchesCount\"":\""""+count+""\""}"" | stats list(data) AS rulesTriggered, count AS rulesTriggeredTotal | eval rulesTriggeredCombined=mvjoin(rulesTriggered, "", "") | fields rulesTriggeredTotal, rulesTriggeredCombined"
instrumentation.usage.app.page,,"index=_internal sourcetype=splunk_web_access uri_path=""/*/app/*/*"" NOT uri_path=""/*/static/*"" | eval uri_parts=split(uri_path, ""/""),locale=mvindex(uri_parts,1), app=mvindex(uri_parts,3), page=mvindex(uri_parts,4) | bin _time span=1d | eventstats estdc(user) as appUsers count as appOccurrences by app _time | bin _time span=1d | stats latest(locale) as locale count as occurrences estdc(user) as users by app page appUsers appOccurrences _time | sort app -occurrences | streamstats count as pageRank by app _time | where pageRank<=10 | eval data=""{\""app\"":\""""+app+""\"",\""page\"":\""""+page+""\"",\""locale\"":\""""+locale+""\"",\""occurrences\"":"" + tostring(occurrences) + "",\""users\"":"" + tostring(users) + ""}"" | eval data=if(pageRank==1,data+"";{\""app\"":\""""+app+""\"",\""locale\"":\""""+locale+""\"",\""occurrences\"":"" + tostring(appOccurrences) + "",\""users\"":"" + tostring(appUsers) + ""}"", data) | stats values(data) as data by app appOccurrences appUsers _time | sort _time -appOccurrences | streamstats count as appRank by _time | where appRank<=25 | mvexpand data | makemv delim="";"" data | mvexpand data | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.authMethod.config,,"|rest splunk_server=local /services/admin/auth-services| join type=left splunk_server [|rest splunk_server=local /services/server/info | fields guid, splunk_server] | appendcols [|rest splunk_server=local /servicesNS/nobody/splunk_instrumentation/telemetry | fields telemetrySalt]| eval telemetrySalt=if(isnull(telemetrySalt), """", telemetrySalt), hashHost=sha1(telemetrySalt+splunk_server)| eval data=""{\""host\"": \""""+hashHost+""\"",\""guid\"": \""""+guid+""\"", \""authentication method\"": \""""+active_authmodule+""\"",\""mfa type\"": "" +""\"""" + if(mfa_type=="""", ""none"", mfa_type) +""\""}"", _time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.usage.durableSearch,,"| rest servicesNS/-/-/admin/savedsearch | search NOT title=instrumentation.* AND NOT durable.track_time_type="""" | eval name=sha1(title), durableTrackTimeType='durable.track_time_type', durableLagTime='durable.lag_time', durableBackfillType='durable.backfill_type', durableMaxBackfillIntervals='durable.max_backfill_intervals', enableSummaryIndex=if('action.summary_index'==1, ""Yes"", ""No"")  | fields name, durableTrackTimeType, durableLagTime, durableBackfillType, durableMaxBackfillIntervals, enableSummaryIndex | makejson name durableTrackTimeType durableLagTime durableBackfillType durableMaxBackfillIntervals enableSummaryIndex output=""data"" | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.healthMonitor.currentState,,"| rest /services/apps/local splunk_server=local | search title=search | rename version as splunk_version | fields splunk_version 
 | appendcols [| rest services/server/health-config/distributed_health_reporter splunk_server=local | eval dist_hr_enabled=if(isnull(disabled) or disabled=='' or disabled==0, 1, 0) | fields dist_hr_enabled] 
 | appendcols [| search index=_internal earliest=-1d source=*splunkd_ui_access.log (""server/health/splunkd/details"" OR ""server/health/deployment/details"") | stats count as click_count] 
 | appendcols [ 
    | rest services/server/health/splunkd/details splunk_server=local 
    | fields + features.* health | rename health as features.health 
    | fields - *.reasons.* *.messages.* 
    | foreach features.* [ eval newname=""splunkd.""+replace(lower(""<<MATCHSTR>>""), "" "", ""_"") | rex field=newname mode=sed ""s/features\.|\.health//g"" | eval {newname}='<<FIELD>>'] 
    | fields - features.*, newname 
    | transpose column_name=""features"" | rename ""row 1"" as current_color 
    | join type=outer features [ 
        | search index=_internal earliest=-1d source=*health.log component=PeriodicHealthReporter 
            | stats count as num,  values(color) as colors by node_path 
            | rename node_path as features 
            | eval colors = mvjoin(colors, "","") 
            | eval worst_color = if(match(colors, ""red""), ""red"", (if(match(colors, ""yellow""), ""yellow"", ""green""))) 
            | fields features, num, colors, worst_color 
    ] 
    | sort by features 
    | eval nodes="""", combin_column=1 
    | foreach features* [eval nodes = ""{\""nodePath\"": \"""" + '<<FIELD>>' + ""\"", \""color\"": \"""" + current_color + ""\"", \""worstColorInLast24Hours\"": \"""" + worst_color + ""\""}""] 
    | stats count list(nodes) as node_list by combin_column 
    | eval node_status = mvjoin(node_list, "", "") 
 ] 
 | eval data = ""{\""splunkVersion\"": \"""" + splunk_version + ""\"", \""distribuedHealthReporter\"": {\""enabled\"": "" + dist_hr_enabled + ""}, \""healthReportClicks\"": "" + click_count + "", \""nodeStatus\"": ["" + node_status + ""]}"", _time=now(), date=strftime(_time, ""%Y-%m-%d"") 
 | fields data _time date"
instrumentation.usage.healthMonitor.report,,"|rest splunk_server=local /services/server/health-config | eval thresh="""" | foreach indicator*red,indicator*yellow [eval thresh =if('<<FIELD>>'!="""", thresh+""\""<<FIELD>>\"":"" + '<<FIELD>>' + "","", thresh)] | eval thresh=rtrim(thresh, "",""), enabled=if(disabled=='' or disabled==0 or isnull(disabled), 1,0) | eval feature=""\""""+title+""\"":{\""threshold\"": {""+thresh+""}, \""enabled\"": \""""+enabled+""\""}"", distinct=if(like(title, ""feature%""), ""feature"", ""alert"") | eval disable=coalesce('alert.disabled', disabled), action=coalesce('alert.actions','action.to','action.url', 'action.integration_url_override') | eval action=if(action=="""" or isnull(action), ""empty"", action) | eval alert=""\""""+title+""\"": {\""disabled\"": \""""+disable+""\"", \""action/ action.to/ action.url/ action.integration_url_override\"": \""""+action+""\""}"" | stats list(alert) AS alertList, list(feature) AS feaList by distinct | eval alertCombined=mvjoin(alertList, "",""), feaCombined=mvjoin(feaList, "","") | eval alertCombined=""\""alert\"":{""+alertCombined+""}"" | eval feaCombined=if(distinct==""alert"", null, feaCombined), alertCombined=if(distinct==""feature"", null, alertCombined) | eval dataCombined=coalesce(alertCombined, feaCombined) | stats list(dataCombined) AS dataList| eval data=mvjoin(dataList, "","") | eval data=""{""+data+""}"",_time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.usage.indexing.sourcetype,,"index=_internal source=*metrics.log* TERM(group=per_sourcetype_thruput) | bin _time span=1d | stats sum(ev) as events, sum(kb) as size, estdc(host) as hosts by series _time | eval data=""{\""name\"":\""""+replace(series,""\"""", ""\\\"""") + ""\"",\""events\"":""+tostring(events)+"",\""bytes\"":""+tostring(round(size*1024))+"",\""hosts\"":""+tostring(hosts)+""}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.kvstore,,"|rest splunk_server=local /services/kvstore/info | eval data = ""{"" | foreach usage.* [eval data = data + ""\""<<FIELD>>\"":\"""" + '<<FIELD>>' + ""\"", "" ] | eval data = rtrim(data, "", "") + ""}"", _time = now(), date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.usage.lookups.lookupDefinitions,,"|rest splunk_server=local /services/admin/transforms-lookup getsize=true | eval name = 'eai:acl.app' + ""."" + title | rename ""eai:acl.sharing"" AS sharing | eval is_temporal = if(isnull(time_field),0,1) | table name type is_temporal size sharing | join type=left name [rest splunk_server=local /services/admin/kvstore-collectionstats | table data | mvexpand data | spath input=data | table ns size | rename ns as name] | eval name=sha1(name) | makejson output=lookups | stats list(lookups) as lookups | eval data = ""{ \""lookups\"" : ["" . mvjoin(lookups,"","") . ""]}"", _time = now(), date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.usage.metrics,,"| mcatalog values(_dims) values(sourcetype) values(metric_type) where index=* earliest=-15m by metric_name, index | stats count(values(_dims)) AS dimension_count list(values(sourcetype)) AS sourcetype list(values(metric_type)) AS metrictype by metric_name, index | eval metrictype = if(isnull(metrictype), ""N/A"", metrictype) | fields metric_name, index,  dimension_count, sourcetype, metrictype | eval data=""{ \""metricName\"" : \""""+metric_name+""\"", \""indexName\"" : \""""+index+""\"", \""dimensionCount\"" : \""""+dimension_count+""\"", \""sourcetype\"" : \""""+sourcetype+""\"", \""metricType\"" : \""""+metrictype+""\""}"", _time = now(), date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.passwordPolicy.config,,"|rest splunk_server=local /services/admin/Splunk-auth/splunk_auth| join type=left splunk_server [|rest splunk_server=local /services/server/info | fields guid, splunk_server] | appendcols [|rest splunk_server=local /servicesNS/nobody/splunk_instrumentation/telemetry | fields telemetrySalt]| eval telemetrySalt=if(isnull(telemetrySalt), """", telemetrySalt), hashHost=sha1(telemetrySalt+splunk_server)| replace ""1"" with ""true"", ""0"" with ""false"" in enablePasswordHistory,expireUserAccounts, forceWeakPasswordChange, lockoutUsers, verboseLoginFailMsg | eval data=""{\""host\"": \""""+hashHost+""\"",\""guid\"": \""""+guid+""\"", \""constant login time\"":\""""+constantLoginTime+""\"", \""enable password history\"":\""""+enablePasswordHistory+""\"", \""expiration alert in days\"":\""""+expireAlertDays+""\"", \""days until password expires\"":\""""+expirePasswordDays+""\"", \""enable password expiration\"":\""""+expireUserAccounts+""\"", \""force existing users to change weak passwords\"":\""""+forceWeakPasswordChange+""\"", \""failed login attempts\"":\""""+lockoutAttempts+""\"", \""lockout duration in minutes\"":\""""+lockoutMins+""\"", \""lockout threshold in minutes\"":\""""+lockoutThresholdMins+""\"", \""enable lockout users\"":\""""+lockoutUsers+""\"", \""minimum number of digits\"":\""""+minPasswordDigit+""\"", \""minimum number of characters\"":\""""+minPasswordLength+""\"", \""minimum number of lowercase letters\"":\""""+minPasswordLowercase+""\"", \""minimum number of special characters\"":\""""+minPasswordSpecial+""\"", \""minimum number of uppercase letters\"":\""""+minPasswordUppercase+""\"", \""password history count\"":\""""+passwordHistoryCount+""\"", \""enable verbose login fail message\"":\""""+verboseLoginFailMsg+""\""}"",_time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.usage.rest,,"index=_internal useragent=splunk-sdk* | eval endpointuri = case(like(uri_path, ""%/authorization/capabilities%""), ""authorization/capabilities"", like(uri_path, ""%/authorization/roles%""), ""authorization/roles"", like(uri_path, ""%/configs/conf-%s%""), ""configs/conf-%s"", like(uri_path, ""%/properties/%""), ""properties"", like(uri_path, ""%/saved/eventtypes%""), ""saved/eventtypes"", like(uri_path, ""%/deployment/client%""), ""deployment/client"", like(uri_path, ""%/deployment/tenants%""), ""deployment/tenants"", like(uri_path, ""%/deployment/server%""), ""deployment/server"", like(uri_path, ""%/deployment/serverclass%""), ""deployment/serverclass"", like(uri_path, ""%/storage/passwords%""), ""storage/passwords"", like(uri_path, ""%/services/receivers/stream%""), ""/services/receivers/stream"", like(uri_path, ""%/services/receivers/simple%""), ""/services/receivers/simple"", like(uri_path, ""%/authentication/users%""), ""authentication/users"", like(uri_path, ""%/saved/searches%""), ""saved/searches"", like(uri_path, ""%/data/modular_inputs%""), ""data/modular_inputs"", like(uri_path, ""%/data/input%""), ""data/input"", like(uri_path, ""%/data/indexes%""), ""data/indexes"", like(uri_path, ""%/alerts/fired_alerts%""), ""/alerts/fired_alerts"", like(uri_path, ""%messages%""), ""messages"", like(uri_path, ""%/search/jobs%""), ""search/jobs"" ) | stats count by endpointuri, status, method, useragent | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | eval data=""{ \""endpointUri\"" : \""""+endpointuri+""\"", \""status\"" : \""""+status+""\"", \""method\"" : \""""+method+""\"", \""useragent\"" : \""""+useragent+""\"", \""count\"" : \""""+count+""\"" }"" | fields _time date data"
instrumentation.usage.rollup,,"| rest servicesNS/-/-/catalog/metricstore/rollup | eval summaryCount=0, target_index_list="""", metricOverrideCount=0, name=title, hasDimensionList=if(isnull(dimensionList), ""false"", ""true"") | foreach summaries*rollupIndex [| eval summaryCount=if(isnull('<<FIELD>>'), summaryCount, summaryCount+1)] | foreach aggregation* [| eval metricOverrideCount=if(isnull('<<FIELD>>'), metricOverrideCount, metricOverrideCount+1)] | foreach summaries*rollupIndex [eval target_index_list=if(isnotnull('<<FIELD>>'), target_index_list."","".'<<FIELD>>', target_index_list)] | eval targetIndex=split('target_index_list',"","")| mvexpand  targetIndex | search NOT targetIndex="""" | join type=left targetIndex [| rest /services/data/indexes datatype=metric | eval targetIndexDBSizeGB_temp=tostring(round(coalesce(currentDBSizeMB,0) / 1024, 2)) | stats sum(targetIndexDBSizeGB_temp) as targetIndexDBSizeGB by title | rename title as targetIndex | fields targetIndex, targetIndexDBSizeGB] | fields name, defaultAggregation, summaryCount, hasDimensionList, metricOverrideCount, targetIndex, targetIndexDBSizeGB | eval targetIndexDBSizeGB=if(targetIndexDBSizeGB==0, ""0 (Check Index to Verify)"", targetIndexDBSizeGB) | makejson name defaultAggregation targetIndex targetIndexDBSizeGB hasDimensionList summaryCount(int) metricOverrideCount(int) output=""data"" | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.savedSearches.alerts,,"| rest servicesNS/-/-/admin/savedsearch | search NOT title=instrumentation.* | eval name=sha1(title), alertConditionType=alert_type, actionList=actions, triggerMode=if('alert.digest_mode'==1, ""Once"", ""For each result""), alertSeverity='alert.severity', alertSuppress=if('alert.suppress'==1, ""Yes"", ""No""), alertSuppressGroup=if('alert.suppress.group_name'=="""", ""N/A"", sha1('alert.suppress.group_name')), alertTrackable=if('alert.track'==1, ""Yes"", ""No""), cronSchedule=cron_schedule, dispatchAllowPartialResults=if('dispatch.allow_partial_results'==1, ""Yes"", ""No"") | fields name, alertConditionType, actionList, triggerMode, alertSeverity, alertTrackable, alertSuppress, alertSuppressGroup, cronSchedule, dispatchAllowPartialResults | makejson name alertConditionType actionList triggerMode alertSeverity alertTrackable alertSuppress cronSchedule alertSuppressGroup dispatchAllowPartialResults output=""data"" | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.search.concurrent,,"index=_introspection sourcetype=splunk_resource_usage component::PerProcess data.search_props.sid::* | bin _time span=10s | stats estdc(data.search_props.sid) AS concurrent_searches by _time host | bin _time span=1d | stats `instrumentation_distribution_values(concurrent_searches)` by host _time | eval data=""{\""host\"":\""""+host+""\"",\""searches\"":{"" + `instrumentation_distribution_strings(""concurrent_searches"",1,0)` +""}}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.search.report_acceleration,,"| localop | rest /servicesNS/-/-/admin/summarization | stats count as existing_report_accelerations, sum(summary.access_count) as access_count_of_existing_report_accelerations | makejson access_count_of_existing_report_accelerations(int) existing_report_accelerations(int) output=""data"" | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.search.searchTelemetry,,"index=_introspection sourcetype=search_telemetry | rename search_commands{}.name as name, search_commands{}.duration as duration | stats perc50(duration), perc90(duration), perc95(duration), perc99(duration), sum(duration) as totalDuration, sum(bytes_read) as sumBytesRead, count(bytes_read) as countBytesRead max(bytes_read) as maxBytesRead by name, type | makejson output=searchTypeInformation | fields searchTypeInformation | mvcombine delim="","" searchTypeInformation | nomv searchTypeInformation | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | eval data=""{ \""searchTypeInformation\"" : ["".searchTypeInformation.""]}"" | fields _time date data"
instrumentation.usage.search.searchtelemetry.sourcetypeUsage,,"index=_audit | stats count(sourcetype_count__*) as * | makejson output=sourcetypeUsage | fields sourcetypeUsage | mvcombine delim="","" sourcetypeUsage | nomv sourcetypeUsage | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | eval data=""{ \""sourcetypeUsage\"" : ["".sourcetypeUsage.""]}"" | fields _time date data"
instrumentation.usage.search.type,,"index=_introspection sourcetype=splunk_resource_usage component::PerProcess data.search_props.sid::* | rename data.search_props.type as searchType | bin _time span=1d | stats estdc(data.search_props.sid) AS search_count by searchType _time | eval data=""\""""+searchType+""\"":""+tostring(search_count) | stats delim="","" values(data) as data by _time | rename _time as date | mvcombine data | eval data=""{""+data+""}"" | rename date as _time | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.smartStore.capacity,,"|rest splunk_server=local /services/server/status/partitions-space | makejson available, capacity, free, fs_type, output=""cap"" | eval cap=""\""""+title+""\"": ""+cap+"""" | stats list(cap) AS capList BY splunk_server | eval capCombined=""\""total storage capacity\"":{"" + mvjoin(capList, "", "") + ""}"" | fields capCombined, splunk_server"
instrumentation.usage.smartStore.config,,"|savedsearch instrumentation.usage.smartStore.global | join type=left splunk_server [|savedsearch instrumentation.usage.smartStore.perIndex] | join type=left splunk_server [|savedsearch instrumentation.usage.smartStore.capacity] | eval data=""{""+globalConfig+"", ""+capCombined+"", ""+indexConfig+"", ""+s2Enabled+""}"",_time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields data _time date"
instrumentation.usage.smartStore.global,,"|rest splunk_server=local /services/configs/conf-server | where title in (""cachemanager"",""diskUsage"", ""clustering"") | eval data=""\""""+title+""\"":"",hotlist_recency_secs=if(isnull(hotlist_recency_secs), ""none"", hotlist_recency_secs), hotlist_bloom_filter_recency_hours=if(isnull(hotlist_bloom_filter_recency_hours), ""none"", hotlist_bloom_filter_recency_hours) | eval data=if(title=""diskUsage"", data+""{\""minFreeSpace\"":\""""+minFreeSpace+""\""}"", data), data=if(title=""cachemanager"", data+""{\""eviction_padding\"":\""""+eviction_padding+""\"",\""max_cache_size\"":\""""+max_cache_size+""\"", \""hotlist_recency_secs\"":\""""+hotlist_recency_secs+""\"", \""hotlist_bloom_filter_recency_hours\"":\""""+hotlist_bloom_filter_recency_hours+""\""}"", data), data=if(title=""clustering"", data+""{\""mode\"":\""""+mode+""\""""+if(mode=""master"", "",\""search_factor\"":\""""+search_factor+""\"",\""multisite\"":\""""+multisite+""\"",\""site_replication_factor\"":\""""+site_replication_factor+""\"",\""site_search_factor\"":\""""+site_search_factor+""\""}"", ""}""), data) | stats list(data) AS dataList BY splunk_server | eval globalConfig=""\""global config\"":{"" + mvjoin(dataList, "","") + ""}"" | fields globalConfig, splunk_server"
instrumentation.usage.smartStore.perIndex,,"|rest splunk_server=local /services/configs/conf-indexes | appendcols [|rest splunk_server=local /servicesNS/nobody/splunk_instrumentation/telemetry | fields telemetrySalt]| eval title_dist=if(match(title, ""^([^_].*?)\s*""),""external"",""internal""), s2Enabled=if(isnotnull(remotePath),""SmartStore enabled"", ""non-SmartStore enabled""),hotlist_recency_secs=if(isnull(hotlist_recency_secs), ""none"", hotlist_recency_secs), hotlist_bloom_filter_recency_hours=if(isnull(hotlist_bloom_filter_recency_hours), ""none"", hotlist_bloom_filter_recency_hours) | makejson frozenTimePeriodInSecs, hotlist_recency_secs, hotlist_bloom_filter_recency_hours, maxHotSpanSecs, maxGlobalDataSizeMB, output=""indexConfig"" | eval telemetrySalt=if(isnull(telemetrySalt), """", telemetrySalt), hashTitle=sha1(telemetrySalt+title), title_combine=title_dist+""_""+hashTitle, indexConfig=""\""""+title_combine+""\"":"" + indexConfig | stats list(hashTitle) AS titleList,list(indexConfig) AS indexList BY s2Enabled, splunk_server | eval indexConfig=mvjoin(indexList, "",""), titleCombined=""\""""+s2Enabled+""\"":\"""" + mvjoin(titleList, "","") +""\"""" | stats list(titleCombined) AS s2List, list(indexConfig) AS indexList BY splunk_server| eval s2Enabled=""\""list of indexes\"":{"" + mvjoin(s2List, "","") + ""}"", indexConfig=""\""per index config\"":{"" + mvjoin(indexList, "","") + ""}""  | fields s2Enabled, indexConfig, splunk_server"
instrumentation.usage.streamingMetricAlerts,,"| rest servicesNS/-/-/alerts/metric_alerts | eval name=sha1(title), hasFilter=if(filter=="""", ""No"", ""Yes""), hasGroupby=if(groupby=="""", ""No"", ""Yes""), triggerActionPerGroup=if('trigger.action_per_group'==1, ""Yes"", ""No""), triggerEvaluationPerGroup=if('trigger.evaluation_per_group'==1, ""Yes"", ""No""), triggerSuppress=if('trigger.suppress'==1, ""Yes"", ""No""), triggerPrepare=if(isnotnull('trigger.prepare'), ""Yes"", ""No""), alertTrackable=if('splunk_ui.track'==1, ""Yes"", ""No""), triggerThreshold=if(isnotnull('trigger.threshold'), 'trigger.threshold', ""N/A""), actionList="""", hasDescription=if(description=="""", ""No"", ""Yes""), alertSeverity=if(isnull('splunk_ui.severity'), ""N/A"", 'splunk_ui.severity'), triggerExpires='trigger.expires', triggerMaxTracked='trigger.max_tracked' | eval actionList=if('action.email'==1, actionList."","".""email"", actionList), actionList=if('action.logevent'==1, actionList."","".""logevent"", actionList), actionList=if('action.rss'==1, actionList."","".""rss"", actionList), actionList=if('action.script'==1, actionList."","".""script"", actionList), actionList=if('action.webhook'==1, actionList."","".""webhook"", actionList) | eval actionList=if(actionList=="""", actionList, substr(actionList,2)) | eval hasLabels=""No"", hasComplexCondition=""No"" | foreach label* [| eval hasLabels=if(isnull('<<FIELD>>'), hasLabels, ""Yes"")] | eval hasMultipleMetricIndexes=if(match(metric_indexes, "",""), ""Yes"", ""No""), hasComplexCondition=if(match(condition, ""OR"") OR match(condition, ""AND""), ""Yes"", hasComplexCondition) | fields name, hasFilter, hasGroupby, triggerActionPerGroup, triggerEvaluationPerGroup, triggerThreshold, triggerSuppress, triggerPrepare, alertTrackable, actionList, hasDescription, alertSeverity, triggerExpires, triggerMaxTracked, hasLabels, hasMultipleMetricIndexes, hasComplexCondition | makejson name hasFilter hasGroupby triggerActionPerGroup triggerEvaluationPerGroup triggerThreshold triggerSuppress triggerPrepare alertTrackable actionList hasDescription alertSeverity triggerExpires triggerMaxTracked hasLabels hasMultipleMetricIndexes hasComplexCondition output=""data"" | eval _time=now(), date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.users.active,,"index=_audit sourcetype=audittrail TERM(action=search) user!=""splunk-system-user"" user!=""n/a"" | bin _time span=1d | stats estdc(user) as active by _time | eval data=""{\""active\"":""+tostring(active)+""}"" | eval date=strftime(_time, ""%Y-%m-%d"") | fields _time date data"
instrumentation.usage.workloadManagement.category,,"NOT() | append [rest splunk_server=local /services/workloads/categories | eval data=""\""""+title+""\"":{\""allocated cpu percent\"":\""""+cpu_allocated_percent+""\"", \""allocated mem limit\"":\""""+mem_allocated_percent+""\""}"" | stats list(data) AS categoryList | eval categoryCombined=mvjoin(categoryList, "", "") | fields categoryCombined]"
instrumentation.usage.workloadManagement.enabled,,"NOT() | append [rest splunk_server=local /services/workloads/status | eval support='general.isSupported', enabled='general.enabled', os_name='general.os_name', os_version='general.os_version'| fields support, enabled, os_name, os_version]"
instrumentation.usage.workloadManagement.pools,,"NOT() | append [rest splunk_server=local /services/workloads/pools | eval isDeafultPool=if(default_category_pool=1, ""True"", ""False""), poolList=""\""""+title+""\"":{\""allocated cpu percent\"":\""""+cpu_allocated_percent+""\"", \""allocated mem limit\"":\""""+mem_allocated_percent+""\"", \""default category pool\"":\""""+isDeafultPool+""\""}"" | stats list(poolList) AS poolList, count BY category | eval poolList=""\""""+category+""\"":{\""count\"":""+count+"",""+mvjoin(poolList, "", "")+""}"" | stats sum(count) AS poolTotal list(poolList) AS poolList| eval poolCombined=mvjoin(poolList, "", "") | fields poolCombined, poolTotal]"
instrumentation.usage.workloadManagement.report,,"|rest splunk_server=local /services/server/info | appendcols [|rest splunk_server=local /servicesNS/nobody/splunk_instrumentation/telemetry | fields telemetrySalt]| eval telemetrySalt=if(isnull(telemetrySalt), """", telemetrySalt), hashHost=sha1(telemetrySalt+splunk_server), roleCombine=mvjoin(server_roles, "", "") | fields guid, hashHost, roleCombine| appendcols [|savedsearch instrumentation.usage.workloadManagement.enabled] | appendcols [|savedsearch instrumentation.usage.workloadManagement.category]| appendcols [|savedsearch instrumentation.usage.workloadManagement.pools] | appendcols [|savedsearch instrumentation.usage.workloadManagement.rules] | fillnull value=0 | eval data=""{\""host\"": \""""+hashHost+""\"", \""guid\"": \""""+guid+""\"", \""wlm supported\"": \""""+support+""\"", \""os\"": \""""+os_name+""\"", \""osVersion\"": \""""+os_version+""\"", \""wlm enabled\"": \""""+enabled+""\"", \""server roles\"": \""""+roleCombine+""\"""", poolTotal=if(isnull(poolTotal),0, poolTotal), ruleTotal=if(isnull(ruleTotal),0, ruleTotal) | eval data=if(support==1, data+"", \""categories\"":{""+categoryCombined+""}, \""pools\"":{\""total count\"":\""""+poolTotal+""\""""+ if(poolTotal>0, "", ""+poolCombined+"""", """") + ""}, \""rules\"":{\""total count\"":\""""+ruleTotal+""\""""+if(ruleTotal>0, "", ""+ruleCombined, """")+""}}"", data+""}""), _time=now(), date=strftime(_time, ""%Y-%m-%d"")| fields _time date data"
instrumentation.usage.workloadManagement.rules,,"NOT() | append [rest splunk_server=local /services/workloads/rules | eval data=""\""""+title+""\"":{\""order\"":\""""+order+""\"", \""predicate\"":\""""+predicate+""\"", \""workload pool\"":\""""+workload_pool+""\""}"" | stats list(data) AS ruleList, count AS ruleTotal by splunk_server | eval ruleCombined=mvjoin(ruleList, "", "") | fields ruleTotal, ruleCombined]"
Inventory - Operating Systems By System Count,,| from inputlookup:system_version_tracker | stats count by os
Inventory - Systems By User Count,,| from inputlookup:useraccounts_tracker | stats dc(user) as dc(user) by dest | sort 10 - dc(user)
Inventory - Users By System Count,,| from inputlookup:useraccounts_tracker | stats dc(dest) as dc(dest) by user | sort 10 - dc(dest)
Lateral Movement after Credential Dumping,,"index=asx | transaction dest startswith=""mitre_tactics=credential-access"" endswith=""mitre_tactics=lateral-movement"" | fillnull | stats values(source) as detections values(user) as user dc(source) as dc_detections by dest"
License Usage Data Cube,,"index=_internal source=*license_usage.log* type=""Usage"" | eval h=if(len(h)=0 OR isnull(h),""(SQUASHED)"",h) | eval s=if(len(s)=0 OR isnull(s),""(SQUASHED)"",s) | eval idx=if(len(idx)=0 OR isnull(idx),""(UNKNOWN)"",idx) | bin _time span=1d | stats sum(b) as b by _time, pool, s, st, h, idx"
Licensing - Average Events Per Day,,"| makeresults | eval current_count=871966, historical_count=871353, delta=613"
Licensing - Events Per Day,,"| `licensing_epd` | stats sum(count) as count by _time | eval avg_eps=round(count/86400,1) | sort 0 -_time"
Licensing - Events Per Day Over Time,,| `licensing_epd` | timechart span=1d sum(count) as count
Licensing - Events Per Index (Last Day),,"| `licensing_epd` | eventstats max(_time) | where _time='max(_time)' | table _time,index,count | sort 0 - count"
Licensing - Maximum Events Per Day,,"| makeresults | eval current_count=4894982, historical_count=4891795, delta=3187"
Licensing - Minimum Events Per Day,,"| makeresults | eval current_count=23, historical_count=23, delta=0"
Licensing - Recent Events Per Day,,"| makeresults | eval current_count=5766971, historical_count=5763171, delta=3800"
Malware - Activity Over Time,,| `tstats` count from datamodel=Malware.Malware_Attacks by _time span=10m | timechart minspan=10m useother=`useother` count
Malware - Activity Over Time By Action,,"| `tstats` count from datamodel=Malware.Malware_Attacks by _time,Malware_Attacks.action span=10m | timechart minspan=10m useother=`useother` count by Malware_Attacks.action | `drop_dm_object_name(""Malware_Attacks"")`"
Malware - Activity Over Time By Infection,,"| `tstats` count from datamodel=Malware.Malware_Attacks by _time,Malware_Attacks.signature span=10m | timechart minspan=10m useother=`useother` count by Malware_Attacks.signature | `drop_dm_object_name(""Malware_Attacks"")`"
Malware - All Malware Attacks By Asset - Swimlane,,"| tstats `summariesonly` values(Malware_Attacks.action) as action,values(Malware_Attacks.signature) as signature,values(Malware_Attacks.dest) as dest,values(Malware_Attacks.user) as user,count from datamodel=Malware.Malware_Attacks where $constraints$ by _time span=$span$"
Malware - All Malware Attacks By Identity - Swimlane,,"| tstats `summariesonly` values(Malware_Attacks.action) as action,values(Malware_Attacks.signature) as signature,values(Malware_Attacks.dest) as dest,values(Malware_Attacks.user) as user,count from datamodel=Malware.Malware_Attacks where $constraints$ by _time span=$span$"
Malware - Average Infection Length,,"| makeresults | eval current_count=5, historical_count=5, delta=0"
Malware - Average Infection Length Over Time,,"index=endpoint_summary source=""Endpoint - Average Infection Length - Summary Gen"" | timechart minspan=1h avg(avg_dayDiff) as avg_dayDiff"
Malware - Clients By Product Version,,"| from inputlookup:malware_operations_tracker | stats count by product_version,vendor_product | sort 100 - count"
Malware - Clients By Signature Version,,"| from inputlookup:malware_operations_tracker | stats count by signature_version,vendor_product | sort 100 - count"
Malware - Clients Not Updating Signatures,,"| from inputlookup:malware_operations_tracker | rename time_signature_version as _time | eval dayDiff=round((now()-_time)/86400,2) | sort 100 + _time | table _time,dest,dest_nt_domain,product_version,signature_version,vendor_product,dayDiff"
Malware - Infected System Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Multiple Infections,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - New Infections,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - New Malware,,"| from inputlookup:malware_tracker | stats min(firstTime) as firstTime,dc(dest) by signature | eval _time=firstTime | `daysago(30)` | sort 100 - firstTime | `uitime(firstTime)` | fields firstTime,signature,dc(dest)"
Malware - Old Malware Defintions,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Oldest Infection,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Oldest Infections,,"| inputlookup append=T malware_tracker where `tracker_trp(lastTime,lastTime)` | eval days_active=floor((lastTime-firstTime)/86400 + 1) | `uitime(firstTime)` | `uitime(lastTime)` | sort 100 - days_active | fields firstTime,lastTime,signature,dest,days_active"
Malware - Percent Of Systems Infected,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Repeat Infections,,"| tstats `summariesonly` values(Malware_Attacks.action) as action,count from datamodel=Malware.Malware_Attacks where Malware_Attacks.action!=allowed by _time,Malware_Attacks.signature,Malware_Attacks.dest span=1d | `drop_dm_object_name(""Malware_Attacks"")` | stats values(action) as action,count as day_count by signature,dest | sort 100 - day_count"
Malware - Systems With Anti-Malware,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Top 10 Infected Domains,,"| tstats `summariesonly` dc(Malware_Attacks.dest) as dest_count from datamodel=Malware.Malware_Attacks by Malware_Attacks.dest_nt_domain | `drop_dm_object_name(""Malware_Attacks"")` | sort 10 - dest_count"
Malware - Top 10 Infected Systems,,"| tstats `summariesonly` dc(Malware_Attacks.signature) as signature_count from datamodel=Malware.Malware_Attacks by Malware_Attacks.dest | `drop_dm_object_name(""Malware_Attacks"")` | sort 10 - signature_count"
Malware - Top 10 Infections,,"| tstats `summariesonly` dc(Malware_Attacks.dest) as dest_count from datamodel=Malware.Malware_Attacks by Malware_Attacks.signature | `drop_dm_object_name(""Malware_Attacks"")` | sort 10 - dest_count"
Malware - Top Infected Domain,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Top Infected System,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Top Infection,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Total Infection Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Malware - Unique Infected Systems,,"| tstats `summariesonly` estdc(Malware_Attacks.dest) as estdc(dest) from datamodel=Malware.Malware_Attacks where Malware_Attacks.action=""allowed"""
Malware - Unique Infections,,"| tstats `summariesonly` estdc(Malware_Attacks.signature) as estdc(signature) from datamodel=Malware.Malware_Attacks where Malware_Attacks.action=""allowed"""
Malware - Unique Malware Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Manual Notable Event - Rule,,| noop
Modular Actions - Action Invocations,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Modular Actions - Average Duration,,"| makeresults | eval current_count=1, historical_count=1, delta=0"
Modular Actions - Distinct Action Names,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Modular Actions - Distinct Search Names,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Modular Actions - Distinct Searches,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Modular Actions - Distinct Users,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Network - Certificate Tracker - Lookup Gen,,"| tstats summariesonly=false min(_time) as firstTime,max(_time) as lastTime from datamodel=Certificates.All_Certificates where nodename=All_Certificates.SSL by All_Certificates.SSL.ssl_serial,All_Certificates.SSL.ssl_hash,All_Certificates.SSL.ssl_subject,All_Certificates.SSL.ssl_issuer | rename All_Certificates.SSL.ssl* as certificate* | inputlookup append=T certificate_tracker | stats min(firstTime),max(lastTime) by certificate_serial,certificate_hash,certificate_subject,certificate_issuer | rename certificate* as ssl* | extract cim_ssl_issuer_common_name,cim_ssl_issuer_email,cim_ssl_issuer_unit,cim_ssl_subject_common_name,cim_ssl_subject_email,cim_ssl_subject_unit | rename ssl* as certificate* | outputlookup override_if_empty=false certificate_tracker | stats count"
Network - Communication Rule Tracker - Lookup Gen,Maintains a list of Traffic rule values by device and vendor and the first and last time they were seen,"| tstats `summariesonly` count from datamodel=Network_Traffic.All_Traffic where All_Traffic.rule!=unknown by _time,All_Traffic.dvc,All_Traffic.rule,All_Traffic.vendor_product span=1d | `drop_dm_object_name(""All_Traffic"")` | convert timeformat=""%m"" ctime(_time) as month | convert timeformat=""%Y"" ctime(_time) as year| stats sum(count) as count by month,year,dvc,rule,vendor_product | eval _key=sha1(month.""|"".year.""|"".dvc.""|"".rule.""|"".vendor_product) | lookup communication_rule_tracker _key OUTPUTNEW count as lookup_count | eval count=(count+if(isnum(lookup_count), lookup_count, 0)), date=month.""-01-"".year | convert timeformat=""%m-%d-%Y"" mktime(date) as _time | `daysago(396)`| fields - _time,date,dayDiff,lookup_count | outputlookup append=T key_field=_key communication_rule_tracker | stats count"
Network - DDNS Activity Detected - Rule,"DDNS is often used by malicious players, we need to be on the lookout for this.","| from datamodel:Network_Resolution.DNS | search record_type=""A"" `Exclude_DNS_Server_src_ip` | eval list=""iana"" | `ut_parse(query,list)` | fields ut_domain,src | bucket _time span=5m  | stats count by ut_domain,src _time | lookup DDNS_lookup domain as ut_domain | search provider=*"
Network - Event Count By Signature Per Hour - Model Gen,,"| tstats `summariesonly` count as ids_attacks from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.signature span=1h | `drop_dm_object_name(""IDS_Attacks"")` | fit DensityFunction ids_attacks by signature partial_fit=true dist=norm into app:count_by_signature_1h"
Network - Excessive DNS Failures - Rule,Alerts when a host receives many DNS failures in a short span,"| tstats summariesonly=true count from datamodel=""Network_Resolution"".""DNS"" where ""DNS.reply_code""!=""No error"" AND ""DNS.reply_code""!=""NoError"" by ""DNS.src""  | rename ""DNS.src"" as ""src"" | where 'count'>100"
Network - Excessive DNS Queries - Rule,Alerts when a host starts sending excessive DNS queries,"| tstats summariesonly=true count from datamodel=""Network_Resolution"".""DNS"" where    ""DNS.message_type""=""QUERY"" by ""DNS.src"" | rename ""DNS.src"" as ""src"" | where 'count'>100"
Network - Excessive HTTP Failure Responses - Rule,Alerts when a host generates a lot of HTTP failures in a short span of time,"| tstats summariesonly=true count from datamodel=""Web"".""Web"" where    (""Web.status""=400 OR ""Web.status""=403 OR ""Web.status""=404 OR ""Web.status""=411 OR ""Web.status""=500 OR ""Web.status""=501) by ""Web.dest"" | rename ""Web.dest"" as ""dest"" | where 'count'>50"
Network - High Volume of Traffic from High or Critical Host - Rule,Alerts when a system of high or critical severity generates a high volume of outbound web activity. This may indicate that the system has been compromised.,"| tstats summariesonly=true sum(""Web.bytes_out"") as ""bytes_out"" from datamodel=""Web"".""Web"" where    ""Web.bytes_out"">0 AND (""Web.src_priority""=""high"" OR ""Web.src_priority""=""critical"") by ""Web.src"",""Web.dest"" | rename ""Web.src"" as ""src"",""Web.dest"" as ""dest"" | where 'bytes_out'>10485760"
Network - IDS Attack Tracker - Lookup Gen,Maintains a list of IDS attacks by vendor and the first and last time they were seen,"| tstats summariesonly=true min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Intrusion_Detection"".""IDS_Attacks"" by ""IDS_Attacks.ids_type"",""IDS_Attacks.signature"",""IDS_Attacks.vendor_product"" | rename ""IDS_Attacks.ids_type"" as ""ids_type"",""IDS_Attacks.signature"" as ""signature"",""IDS_Attacks.vendor_product"" as ""vendor_product"" | eval _key=sha1('ids_type'.'signature'.'vendor_product') | lookup ""ids_attack_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" | eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') | fields - ""lookup_firstTime"",""lookup_lastTime"" | outputlookup append=T key_field=_key ""ids_attack_tracker"" | stats count"
Network - IDS Category Tracker - Lookup Gen,Maintains a list of IDS attack categories by vendor and the first and last time they were seen,"| tstats summariesonly=true min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Intrusion_Detection"".""IDS_Attacks"" where ""IDS_Attacks.category""!=""unknown"" by ""IDS_Attacks.category"",""IDS_Attacks.vendor_product"" | rename ""IDS_Attacks.category"" as ""category"",""IDS_Attacks.vendor_product"" as ""vendor_product"" | inputlookup append=T ""ids_category_tracker"" | stats min(""firstTime"") as ""firstTime"",max(""lastTime"") as ""lastTime"" by ""category"",""vendor_product"" | outputlookup override_if_empty=false ""ids_category_tracker"" | stats count"
Network - Long Lived Connections,,"| makeresults | eval current_count=236, historical_count=269, delta=-33"
Network - Network Device Rebooted - Rule,Increases the risk score of network devices that have been rebooted.,"| tstats summariesonly=true count from datamodel=""Change"".""All_Changes"" where nodename=""All_Changes.Network_Changes.Device_Restarts"" by ""All_Changes.dvc"",""_time"" span=""1s"" | rename ""All_Changes.dvc"" as ""dvc"""
Network - Policy Or Configuration Change - Rule,Detects changes to policies of the network protection devices (such as firewall policy changes).,"| from datamodel:""Change"".""Network_Changes"" | stats max(""_time"") as ""lastTime"",latest(""_raw"") as ""orig_raw"",count by ""dvc"",""action"",""command"""
Network - Port Activity By Destination Port - Model Gen,,"| tstats `summariesonly` count as dest_port_traffic_count from datamodel=Network_Traffic.All_Traffic by All_Traffic.dest_port,_time span=1d | `drop_dm_object_name(""All_Traffic"")` | fit DensityFunction dest_port_traffic_count by dest_port partial_fit=true dist=norm into app:count_by_dest_port_1d"
Network - Port And Protocol Tracker - Lookup Gen,Maintains a list of allowed Traffic by unique transport protocol and destination port combination and the first and last time they were seen,"| tstats summariesonly=true min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Network_Traffic"".""All_Traffic"" where ""All_Traffic.action""=""allowed"" by ""All_Traffic.transport"",""All_Traffic.dest_port"" | rename ""All_Traffic.transport"" as ""transport"",""All_Traffic.dest_port"" as ""dest_port"" | inputlookup append=T ""port_protocol_tracker"" | stats min(""firstTime"") as ""firstTime"",max(""lastTime"") as ""lastTime"" by ""transport"",""dest_port"" | outputlookup override_if_empty=false ""port_protocol_tracker"" | stats count"
Network - Ransomware Extensions Detected in Network Traffic - Rule,Alerts when any ransomware extension is detected in network traffic,"sourcetype=stream* file_name=* file_name src=$src$| rex field=file_name ""^\S+(?<extension>\.\S+)$"" | lookup ransomware_extensions_lookup Extensions AS extension | Search Name!=false | stats values(file_name) AS ""FilesWritten"" by _time,src,Name,extension"
Network - Substantial Increase in an Event - Rule,Alerts when a statistically significant increase in a particular intrusion event is observed.,"| tstats `summariesonly` count as ids_attacks,values(IDS_Attacks.tag) as tag from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.signature | `drop_dm_object_name(""IDS_Attacks"")` | `mltk_apply_upper(""app:count_by_signature_1h"", ""high"", ""ids_attacks"")`"
Network - Substantial Increase in Port Activity (By Destination) - Rule,Alerts when a statistically significant increase in events on a given port is observed.,"| tstats `summariesonly` count as dest_port_traffic_count,values(All_Traffic.tag) as tag from datamodel=Network_Traffic.All_Traffic by All_Traffic.dest_port | `drop_dm_object_name(""All_Traffic"")` | `mltk_apply_upper(""app:count_by_dest_port_1d"", ""extreme"", ""dest_port_traffic_count"")`"
Network - Traffic Bytes Tracker - Lookup Gen,Maintains Traffic byte statistics,"| tstats `summariesonly` min(All_Traffic.bytes) as min_bytes,avg(All_Traffic.bytes) as mean_bytes,max(All_Traffic.bytes) as max_bytes,stdev(All_Traffic.bytes) as stdev,count as total_count from datamodel=Network_Traffic.All_Traffic where All_Traffic.bytes>0 | appendcols [| from inputlookup:standard_deviations | rename stdev as standard_deviation] | filldown | fillnull value=0 min_bytes,mean_bytes,max_bytes,stdev,total_count | `stdev_desired_result(standard_deviation,mean_bytes,""gt_bytes"")` | `stdev_desired_result(-standard_deviation,mean_bytes,""lt_bytes"")` | eval search=case(gt_bytes>0 AND lt_bytes>0, ""(All_Traffic.bytes>"".floor(gt_bytes)."" OR All_Traffic.bytes<"".ceil(lt_bytes)."")"",gt_bytes>0 AND lt_bytes<=0,""All_Traffic.bytes>"".floor(gt_bytes),gt_bytes<=0 AND lt_bytes>0,""All_Traffic.bytes<"".ceil(lt_bytes),gt_bytes<=0 AND lt_bytes<=0,""All_Traffic.bytes=-1"") | rename standard_deviation as Z | rename total as total_count | fields min_bytes,mean_bytes,max_bytes,stdev,total_count,Z,search | `round(mean_bytes)` | `round(stdev)` | outputlookup traffic_bytes_tracker | stats count"
Network - Traffic Source Count Per 30m - Model Gen,,| tstats `summariesonly` dc(All_Traffic.src) as src_count from datamodel=Network_Traffic.All_Traffic by _time span=30m | fit DensityFunction src_count partial_fit=true dist=norm into app:network_traffic_src_count_30m
Network - Traffic Volume Per 30m - Model Gen,,| tstats `summariesonly` count as total_count from datamodel=Network_Traffic.All_Traffic by _time span=30m | fit DensityFunction total_count partial_fit=true dist=norm into app:network_traffic_count_30m
Network - Unapproved Port Activity Detected - Rule,Detects the use of ports that are prohibited. Useful for detecting the installation of new software or a successful compromise of a host (such as the presence of a backdoor or a system communicating with a botnet).,"| from datamodel:""Network_Traffic"".""Allowed_Traffic"" | `is_traffic_prohibited(dest_port)` | search dest_port>0 NOT is_prohibited=false | stats count by dvc,transport,dest_port,is_prohibited | `get_asset(dvc)` | `get_identity4events(dvc_owner)`"
Network - Unroutable Host Activity - Rule,Alerts when activity to or from a host that is unroutable is detected.,"| `tstats` count,values(sourcetype) from datamodel=Network_Traffic.All_Traffic where All_Traffic.action=""allowed"" AND `bogonlist_src_dest_subsearch(All_Traffic)` by All_Traffic.src,All_Traffic.dest | `drop_dm_object_name(""All_Traffic"")` | `tstats` append=true count,values(sourcetype) from datamodel=Intrusion_Detection.IDS_Attacks where `bogonlist_src_dest_subsearch(IDS_Attacks)` by IDS_Attacks.src,IDS_Attacks.dest | `drop_dm_object_name(""IDS_Attacks"")` | `tstats` append=true count,values(sourcetype) from datamodel=Web.Web where `bogonlist_src_dest_subsearch(Web)` by Web.src,Web.dest | `drop_dm_object_name(""Web"")` | stats count,values(sourcetype) as sourcetype by src,dest | `bogonlist_lookup` | eval bogon_ip=if(dest_is_bogon==""true"" AND dest_is_internal!=""true"",dest,src) | fields + sourcetype,src,dest,bogon_ip"
Network - Unusual Volume of Network Activity - Rule,Detects unusual network traffic that may be indicative of a DoS attack as indicated by a high number of unique sources or a high volume of firewall packets,"| tstats `summariesonly` dc(All_Traffic.src) as src_count,count as total_count from datamodel=Network_Traffic.All_Traffic | apply app:network_traffic_src_count_30m [|`get_qualitative_upper_threshold(extreme)`] | apply app:network_traffic_count_30m [|`get_qualitative_upper_threshold(extreme)`] | search ""IsOutlier(src_count)""=1 OR ""IsOutlier(total_count)""=1"
Network - URL Length Tracker - Lookup Gen,Maintains Web url length statistics,"| tstats `summariesonly` min(Web.url_length) as min_length,avg(Web.url_length) as mean_length,max(Web.url_length) as max_length,stdev(Web.url_length) as stdev,count as total_count from datamodel=Web.Web where Web.url!=""unknown"" | appendcols [| from inputlookup:standard_deviations | rename stdev as standard_deviation] | filldown | fillnull value=0 min_length,mean_length,max_length,stdev,total_count | `stdev_desired_result(standard_deviation,mean_length,""gt_length"")` | `stdev_desired_result(-standard_deviation,mean_length,""lt_length"")` | eval search=case(gt_length>0 AND lt_length>0,""(Web.url_length>"" .floor(gt_length)."" OR Web.url_length<"".ceil(lt_length)."" OR url_length>"".floor(gt_length)."" OR url_length<"".ceil(lt_length)."")"",gt_length>0 AND lt_length<=0,""(Web.url_length>"".floor(gt_length)."" OR url_length>"".floor(gt_length)."")"",gt_length<=0 AND lt_length>0,""(Web.url_length<"".ceil(lt_length)."" OR url_length<"".ceil(lt_length)."")"",gt_length<=0 AND lt_length<=0,""(Web.url_length=-1 OR url_length=-1)"") | rename standard_deviation as Z | rename total as total_count | fields min_length,mean_length,max_length,stdev,total_count,Z,search | `round(mean_length)` | `round(stdev)` | outputlookup url_length_tracker | stats count"
Network - User Agent Length Tracker - Lookup Gen,Maintains Web user agent length statistics,"| tstats `summariesonly` min(Web.http_user_agent_length) as min_length,avg(Web.http_user_agent_length) as mean_length,max(Web.http_user_agent_length) as max_length,stdev(Web.http_user_agent_length) as stdev,count as total_count from datamodel=Web.Web where Web.http_user_agent!=""unknown"" | appendcols [| from inputlookup:standard_deviations | rename stdev as standard_deviation] | filldown | fillnull value=0 min_length,mean_length,max_length,stdev,total_count | `stdev_desired_result(standard_deviation,mean_length,""gt_length"")` | `stdev_desired_result(-standard_deviation,mean_length,""lt_length"")` | eval search=case(gt_length>0 AND lt_length>0, ""(Web.http_user_agent_length>"".floor(gt_length)."" OR Web.http_user_agent_length<"".ceil(lt_length)."")"",gt_length>0 AND lt_length<=0,""Web.http_user_agent_length>"".floor(gt_length),gt_length<=0 AND lt_length>0,""Web.http_user_agent_length<"".ceil(lt_length),gt_length<=0 AND lt_length<=0,""Web.http_user_agent_length=-1"") | rename standard_deviation as Z | rename total as total_count | fields min_length,mean_length,max_length,stdev,total_count,Z,search | `round(mean_length)` | `round(stdev)` | outputlookup user_agent_length_tracker | stats count"
Network - Vulnerability Scanner Detection (by event) - Rule,Detects a potential vulnerability scanner by detecting devices that have triggered a large number of unique events. Vulnerability scanners generally trigger a high number unique events when scanning a host since each vulnerability check tends to trigger a unique event.,"| from datamodel:""Intrusion_Detection"".""IDS_Attacks"" | stats values(""tag"") as ""tag"",dc(""signature"") as ""count"" by ""src"" | where 'count'>25"
Network - Vulnerability Scanner Detection (by targets) - Rule,Detects a potential vulnerability scanner by detecting devices that have triggered events against a large number of unique targets. Vulnerability scanners generally trigger events against a high number of unique hosts when they are scanning a network for vulnerable hosts.,"| from datamodel:""Intrusion_Detection"".""IDS_Attacks"" | stats values(""tag"") as ""tag"",dc(""dest"") as ""count"" by ""src"" | where 'count'>25"
Network - Vulnerability Signature Reference - Lookup Gen,Maintains a list of vulnerability signatures by vendor (including external reference information such as cve) and the first and last time they were seen,"| tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime,values(Vulnerabilities.bugtraq) as bugtraq,values(Vulnerabilities.cert) as cert,values(Vulnerabilities.cve) as cve,values(Vulnerabilities.msft) as msft,values(Vulnerabilities.mskb) as mskb,values(Vulnerabilities.xref) as xref from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.signature,Vulnerabilities.vendor_product | `drop_dm_object_name(""Vulnerabilities"")` | inputlookup append=T vuln_signature_reference | `makemv(bugtraq)` | `makemv(cert)` | `makemv(cve)` | `makemv(msft)` | `makemv(mskb)` | `makemv(xref)` | stats min(firstTime) as firstTime,max(lastTime) as lastTime,values(cve) as cve,values(bugtraq) as bugtraq,values(cert) as cert,values(msft) as msft,values(mskb) as mskb,values(xref) as xref by signature,vendor_product | `makesv(bugtraq)` | `makesv(cert)` | `makesv(cve)` | `makesv(msft)` | `makesv(mskb)` | `makesv(xref)` | outputlookup override_if_empty=false vuln_signature_reference | stats count"
Network - Vulnerability Tracker - Lookup Gen,"Maintains a list of Vulnerabilities by signature, destination and the first and last time they were seen.","| tstats summariesonly=true min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Vulnerabilities"".""Vulnerabilities"" where ""Vulnerabilities.severity"" != ""informational"" AND ""Vulnerabilities.severity"" != ""low"" by ""Vulnerabilities.signature"",""Vulnerabilities.dest"" | rename ""Vulnerabilities.signature"" as ""signature"",""Vulnerabilities.dest"" as ""dest"" | eval _key=sha1('signature'.'dest') | lookup ""vulnerability_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" | eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') | fields - ""lookup_firstTime"",""lookup_lastTime"" | outputlookup append=T key_field=_key ""vulnerability_tracker"" | stats count"
Network - Whois Tracker - Checkpoint Gen,,| tstats `summariesonly` max(_time) as _time from datamodel=Web.Web by Web.dest | rename Web.dest as domain | `truncate_domain(domain)` | stats min(_time) as _time by domain | eval _key=sha1(domain) | lookup whois_tracker _key OUTPUTNEW _key as discard | where isnull(discard) | outputlookup key_field=_key append=T whois_tracker | `outputcheckpoint_whois` | stats count
Network - Whois Tracker - Lookup Gen,Maintains a list of whois scan data including the resolved_domain (if domain was an IP) and the date the domain was created,"| tstats `summariesonly` max(_time) as _time,latest(All_Domains.resolved_domain) as resolved_domain,latest(All_Domains.created) as created from datamodel=Domain_Analysis.All_Domains by All_Domains.domain | `drop_dm_object_name(""All_Domains"")` | `truncate_domain(domain)` | eval _key=sha1(domain) | lookup whois_tracker _key OUTPUTNEW _time as lookup_time, resolved_domain as lookup_resolved_domain, created as lookup_created | eval lookup_time=if(isnum(lookup_time), lookup_time, 0), _time=max(_time, lookup_time), resolved_domain=if(_time>lookup_time, resolved_domain, lookup_resolved_domain), created=if(_time>lookup_time, created, lookup_created) | fields domain, _time, resolved_domain, created | search domain=* | outputlookup key_field=_key append=T whois_tracker | stats count"
Notable - Events By Urgency,,| `es_notable_events` | search timeDiff_type=current | stats sum(count) as count by urgency
Notable - Events Over Time,,| `es_notable_events` | search timeDiff_type=current | timechart minspan=30m sum(count) as count
Notable - Events Over Time By Security Domain,,| `es_notable_events` | search timeDiff_type=current | timechart minspan=30m sum(count) as count by security_domain
Notable - Notable Events Exceeding Analyst Capacity,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Notable - Top Events,,"| `es_notable_events` | search timeDiff_type=current | stats sparkline(sum(count),30m) as sparkline,sum(count) as count by rule_name | sort 100 - count"
Notable - Top Notable Event Destinations,,"| `es_notable_events` | search timeDiff_type=current dest!=unknown | stats sparkline(sum(count),30m) as sparkline,dc(rule_name) as correlation_search_count,dc(security_domain) as security_domain_count,sum(count) as count by dest | sort 100 - count,correlation_search_count"
Notable - Top Notable Event Sources,,"| `es_notable_events` | search timeDiff_type=current src!=unknown | stats sparkline(sum(count),30m) as sparkline,dc(rule_name) as correlation_search_count,dc(security_domain) as security_domain_count,sum(count) as count by src | sort 100 - count,correlation_search_count"
Notable - Total Events By Access Domain,,"| makeresults | eval current_count=20, historical_count=20, delta=0"
Notable - Total Events By Audit Domain,,"| makeresults | eval current_count=8, historical_count=8, delta=0"
Notable - Total Events By Endpoint Domain,,"| makeresults | eval current_count=12, historical_count=12, delta=0"
Notable - Total Events By Identity Domain,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Notable - Total Events By Network Domain,,"| makeresults | eval current_count=3, historical_count=3, delta=0"
Notable - Total Events By Threat Domain,,"| makeresults | eval current_count=12, historical_count=11, delta=1"
Notable Status - Action History,,"index=_audit sourcetype=incident_review | `get_reviewstatuses` | rename comment as content.comment, owner as content.owner, rule_id as content.rule_id, rule_name as content.rule_name, status_label as content.status, urgency as content.urgency"
Notable Suppression - Action History,,"`suppression_audit` | rename action as content.action, signature as content.signature, status as content.status, suppression as content.suppression"
Orphaned scheduled searches,,"| rest timeout=600 splunk_server=local /servicesNS/-/-/saved/searches add_orphan_field=yes count=0 
| search orphan=1 disabled=0 is_scheduled=1 
| eval status = if(disabled = 0, ""enabled"", ""disabled"") 
| fields title eai:acl.owner eai:acl.app eai:acl.sharing orphan status is_scheduled cron_schedule next_scheduled_time next_scheduled_time actions 
| rename title AS ""search name"" eai:acl.owner AS owner eai:acl.app AS app eai:acl.sharing AS sharing"
Per-Panel Filtering - Action History,,"`ppf_updates` | `get_event_id` | rename action as content.action, lookup_file as content.lookup_file, filter as content.filter, namespace as content.namespace"
Per-Panel Filtering - Activity By User Over Time,,| search `ppf_updates` |  `get_realname(user)` | timechart useother=`useother` count by user_realname
Per-Panel Filtering - Recent Activity,,"`ppf_updates` |  `get_realname(user)` | sort 100 - _time | fillnull value=""manual edit"" action | table _time,user_realname,action,lookup_file"
Per-Panel Filtering - Top Users,,"`ppf_updates` |  `get_realname(user)` | stats sparkline,count,min(_time) as firstTime,max(_time) as lastTime by user_realname | `uitime(firstTime)` | `uitime(lastTime)` | sort 100 - count"
Performance - Average Run Duration,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Performance - Average System Uptime,,"| tstats `summariesonly` avg(All_Performance.OS.Uptime.uptime) as avg_uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime All_Performance.OS.Uptime.uptime!=unknown All_Performance.OS.Uptime.uptime>=0 | `uptime2string(avg_uptime,avg_uptime)` | rename avg_uptime as ""avg(uptime)"" | fields avg(uptime)"
Performance - Indexing Time Delay By Host,,"`index_time_delta` | stats min(min_timeDiff) as min_timeDiff,max(max_timeDiff) as max_timeDiff,sum(sum_timeDiff) as sum_timeDiff,sum(count) as count by host | `get_asset(host)` | eval ""min_diff(minutes)""=round(min_timeDiff/60,1) | eval ""max_diff(minutes)""=round(max_timeDiff/60,1) | eval ""avg_diff(minutes)""=round(sum_timeDiff/(count*60),1) | sort 100 + avg_diff(minutes) | fields host,host_should_timesync,min_diff(minutes),avg_diff(minutes),max_diff(minutes)"
Performance - Indexing Time Delay By Sourcetype,,"`index_time_delta` | stats min(min_timeDiff) as min_timeDiff,max(max_timeDiff) as max_timeDiff,sum(sum_timeDiff) as sum_timeDiff,sum(count) as count by sourcetype | eval ""min_diff(minutes)""=round(min_timeDiff/60,1) | eval ""max_diff(minutes)""=round(max_timeDiff/60,1) | eval ""avg_diff(minutes)""=round(sum_timeDiff/(count*60),1) | sort 100 + avg_diff(minutes) | fields sourcetype,min_diff(minutes),avg_diff(minutes),max_diff(minutes)"
Performance - Maximum System Uptime,,"| tstats `summariesonly` latest(All_Performance.OS.Uptime.uptime) as uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime All_Performance.OS.Uptime.uptime!=unknown All_Performance.OS.Uptime.uptime>=0 by All_Performance.dest | sort 1 - uptime | `drop_dm_object_name(""All_Performance"")` | `uptime2string(uptime,uptime)` | eval label=dest."" has been up for "".uptime | fields label,dest,uptime"
Performance - Memory Utilization By System,,"| tstats `summariesonly` latest(All_Performance.Memory.mem) as mem,latest(All_Performance.Memory.mem_used) as mem_used,latest(All_Performance.Memory.mem_free) as mem_free from datamodel=Performance.All_Performance where nodename=All_Performance.Memory by All_Performance.dest | `drop_dm_object_name(""All_Performance"")` | eval mem_used=if(isnotnull(mem) AND isnotnull(mem_free),mem-mem_free,null()) | eval mem_used_percent=if(isnotnull(mem) AND mem>0,round(mem_used*100/mem,1),null()) | sort 100 - mem_used_percent | eval ""mem(GB)""=round(mem/1024,1) | eval ""mem_used(GB)""=round(mem_used/1024,1) | eval ""mem_free(GB)""=round(mem_free/1024,1) | fields dest,*(GB),mem_used_percent"
Performance - Minimum System Uptime,,"| tstats `summariesonly` latest(All_Performance.OS.Uptime.uptime) as uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime All_Performance.OS.Uptime.uptime!=unknown All_Performance.OS.Uptime.uptime>=0 by All_Performance.dest | sort 1 + uptime | `drop_dm_object_name(""All_Performance"")` | `uptime2string(uptime,uptime)` | eval label=dest."" has been up for "".uptime | fields label,dest,uptime"
Performance - Number Of Systems Not Reporting,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Performance - Number Of Systems Not Time Synchronizing,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Performance - Number Of Systems With Uptime Anomalies,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Performance - Storage Utilization By System,,"| tstats `summariesonly` latest(All_Performance.Storage.storage) as storage, latest(All_Performance.Storage.storage_free) as storage_free, latest(All_Performance.Storage.storage_free_percent) as storage_free_percent, latest(All_Performance.Storage.storage_used) as storage_used, latest(All_Performance.Storage.storage_used_percent) as storage_used_percent from datamodel=Performance.All_Performance where nodename=All_Performance.Storage by All_Performance.dest,All_Performance.Storage.mount | sort 100 + storage_free_percent | `drop_dm_object_name(""All_Performance"")` | `drop_dm_object_name(""Storage"")` | eval storage=if(isnull(storage) AND isnotnull(storage_free) AND isnotnull(storage_free_percent),(storage_free)*(1-(storage_free_percent/100)),storage) | eval storage_used=if(isnotnull(storage) AND isnotnull(storage_free),storage-storage_free,storage_used) | eval ""storage(GB)""=round(storage/1073741824,1) | eval ""storage_free(GB)""=round(storage_free/1073741824,1) | eval storage_free_percent=round(storage_free_percent,1) | eval ""storage_used(GB)""=round(storage_used/1073741824,1) | fields dest,mount,*(GB),storage_free_percent"
Performance - Systems Not Time Synching,,"| tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime,latest(All_Performance.dest_should_timesync) as dest_should_timesync from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=success by All_Performance.dest | `drop_dm_object_name(""All_Performance"")` | `timeDiff(lastTime)` | search timeDiff>86400 | sort 100 + lastTime | `uitime(firstTime)` | `uitime(lastTime)` | fields firstTime,lastTime,dest,dest_should_timesync"
Performance - Time Service Start Mode Anomalies,,"| tstats `summariesonly` max(_time) as _time,latest(Services.start_mode) as start_mode,latest(Services.status) as status,latest(Services.dest_should_timesync) as dest_should_timesync from datamodel=Endpoint.Services where (Services.tag=time Services.tag=synchronize) by Services.dest,Services.service | `drop_dm_object_name(""Services"")` | search start_mode!=auto | sort 100 + start_mode | fields _time,dest,dest_should_timesync,service,start_mode,status"
Performance - Time Synchronization Failures,,"| tstats `summariesonly` max(_time) as _time,latest(All_Performance.dest_should_timesync) as dest_should_timesync,count from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=failure by All_Performance.dest | eval action=""failure"" | `drop_dm_object_name(""All_Performance"")` | fields _time,action,dest,dest_should_timesync,count"
Performance - Top-Average CPU Load Over Time By System,,"| `tstats` avg(All_Performance.CPU.cpu_load_percent) from datamodel=Performance.All_Performance where nodename=All_Performance.CPU [| `tstats` avg(All_Performance.CPU.cpu_load_percent) from datamodel=Performance.All_Performance where nodename=All_Performance.CPU by All_Performance.dest | stats avg(All_Performance.CPU.cpu_load_percent) as ""avg"" by All_Performance.dest | sort 10 - ""avg"" | fields All_Performance.dest | format] by _time,All_Performance.dest span=10m | timechart minspan=10m avg(All_Performance.CPU.cpu_load_percent) as ""avg_cpu_load(%)"" by All_Performance.dest | `drop_dm_object_name(""All_Performance"")`"
Performance - Uptime By System,,"| tstats `summariesonly` latest(All_Performance.OS.Uptime.uptime) as uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime by All_Performance.dest | `drop_dm_object_name(""All_Performance"")` | sort 100 - uptime | `uptime2string(uptime,uptime)` | fields dest,uptime"
Products and the Content Mapped to Them,"This expects that you have completed the Data Inventory configuration, and mapped your active content on the Manage Bookmarks page. You will then get a complete view from product to the content that it enables.","| inputlookup data_inventory_products_lookup 
| search stage!=step-sourcetype stage!=step-cim 
| rex field=basesearch ""^\s*(?<basesearch>.*?)\s*$""
| eval basesearch=if(like(basesearch, ""(%"") AND like(basesearch, ""%)""), basesearch, ""("" . basesearch . "")"") 
| makemv delim=""|"" eventtypeId 
| mvexpand eventtypeId 
| rename eventtypeId as data_source_categories 
| join data_source_categories 
    [| sseanalytics 
    | search search_title!="""" 
    | stats count count(eval(bookmark_status=""successfullyImplemented"")) as count_successfullyImplemented values(search_title) as search_title by data_source_categories 
    | eval search_title=mvjoin(search_title, ""|"")] 
| eval Product = vendorName . "" "" . productName
| makemv delim=""|"" data_source_categories | mvexpand data_source_categories
| rex field=data_source_categories ""^(?<ds>[^-]*)"" | sseidenrichment type=datasourceid field=ds | sseidenrichment type=dscid field=data_source_categories | eval data_source_categories = data_source . "" > "" . data_source_category| stats values(*) as * by Product | search Product!="" "" 
| table Product basesearch data_source_categories metadata_json search_title count 
| spath input=metadata_json | fields - metadata_json
| table Product basesearch data_source_categories search_title * count 
| rename count as ""Total Mapped Content for This Product"" basesearch as ""Dataset That Provides Visibility"" search_title as ""Saved Search Name"" data_source_categories as ""Data Source Category"" description as Description"
Risk - 24 Hour Risk Threshold Exceeded - Rule,RBA: Risk Threshold exceeded for an object within the previous 24 hours.,"| tstats `summariesonly` sum(All_Risk.calculated_risk_score) as risk_score, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type | where risk_score > 100 | `drop_dm_object_name(""All_Risk"")` | eval ""annotations.mitre_attack""='annotations.mitre_attack.mitre_technique_id' | `get_risk_severity(risk_score)`"
Risk - 7 Day ATT&CK Tactic Threshold Exceeded - Rule,ATT&CK tactic threshold exceeded for an object within the previous 7 days.,"| tstats `summariesonly` sum(All_Risk.calculated_risk_score) as risk_score, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type | `drop_dm_object_name(""All_Risk"")` | eval ""annotations.mitre_attack""='annotations.mitre_attack.mitre_technique_id' | where mitre_tactic_id_count >= 3 and source_count >= 4"
Risk - Aggregated Other Risk,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Risk - Aggregated Risk,,"| makeresults | eval current_count=0, historical_count=80, delta=-80"
Risk - Aggregated System Risk,,"| makeresults | eval current_count=0, historical_count=80, delta=-80"
Risk - Aggregated User Risk,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Risk - Distinct Modifier Sources,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Risk - Distinct Risk Object Count,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Risk - Distinct Risk Object Count By Other,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Risk - Distinct Risk Object Count By System,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Risk - Distinct Risk Object Count By User,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Risk - Median Object Risk Per Day - Model Gen,,"| tstats `summariesonly` sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time,All_Risk.risk_object,All_Risk.risk_object_type span=1d | `drop_dm_object_name(""All_Risk"")` | fit DensityFunction current_count partial_fit=true dist=norm into app:median_object_risk_1d"
Risk - Median Object Risk Per Day by Object Type - Model Gen,,"| tstats `summariesonly` sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time,All_Risk.risk_object,All_Risk.risk_object_type span=1d | `drop_dm_object_name(""All_Risk"")` | fit DensityFunction current_count by risk_object_type partial_fit=true dist=norm into app:median_object_risk_by_object_type_1d"
Risk - Median Risk Score,,"| makeresults | eval current_count=0, historical_count=80, delta=-80"
Risk - Median Risk Score By Other,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Risk - Median Risk Score By System,,"| makeresults | eval current_count=0, historical_count=80, delta=-80"
Risk - Median Risk Score By User,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Risk - Most Active Sources,,"| tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score,dc(All_Risk.risk_object) as risk_objects,count from datamodel=Risk.All_Risk by source | sort 1000 - count,risk_score"
Risk - Recent Risk Modifiers,,"| from datamodel:""Risk"".""All_Risk"" | head 1000 | table _time risk_object risk_object_type source description calculated_risk_score"
Risk - Risk Modifiers Over Time,,"| tstats prestats=true summariesonly=false sum(All_Risk.calculated_risk_score),count from datamodel=Risk.All_Risk by _time span=10m | timechart minspan=10m sum(All_Risk.calculated_risk_score) as risk_score,count"
Risk - Risk Score By Business Unit,,"| tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type | `drop_dm_object_name(""All_Risk"")` | eval dest=if(risk_object_type==""system"",risk_object,null()) | eval user=if(risk_object_type==""user"",risk_object,null()) | `get_asset(dest)` | `get_identity4events(user)` | `mvappend_field(dest_bunit,user_bunit)` | stats sum(risk_score) as risk_score,dc(risk_object) by dest_bunit | eval avg_score=floor('risk_score'/'dc(risk_object)') | rename dest_bunit as bunit"
Risk - Risk Score By Object,,"| tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score,dc(source) as source_count,count from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type | `drop_dm_object_name(""All_Risk"")` | sort 1000 - risk_score"
Risk - Total Risk By Risk Object Type Per Day - Model Gen,,"| tstats `summariesonly` sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time,All_Risk.risk_object_type span=1d | `drop_dm_object_name(""All_Risk"")` | fit DensityFunction current_count by risk_object_type partial_fit=true dist=norm into app:total_risk_by_object_type_1d"
Risk - Total Risk Per Day - Model Gen,,"| tstats `summariesonly` sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time span=1d | `drop_dm_object_name(""All_Risk"")` | fit DensityFunction current_count partial_fit=true dist=norm into app:total_risk_1d"
Saved Searches and the Data that Enables Them,"This expects that you have completed the Data Inventory configuration, and mapped your active content on the Manage Bookmarks page. You will then be get a list oriented to the saved searches, showing each saved search and the data set and products that enable it","| inputlookup data_inventory_products_lookup 
| search stage!=step-sourcetype stage!=step-cim 
| rex field=basesearch ""^\s*(?<basesearch>.*?)\s*$"" 
| eval basesearch=if(like(basesearch, ""(%"") AND like(basesearch, ""%)""), basesearch, ""("" . basesearch . "")"") 
| makemv delim=""|"" eventtypeId 
| mvexpand eventtypeId 
| rename eventtypeId as data_source_categories 
| join data_source_categories 
    [| sseanalytics 
    | search search_title!="""" 
    | stats count count(eval(bookmark_status=""successfullyImplemented"")) as count_successfullyImplemented values(search_title) as search_title by bookmark_status data_source_categories 
    | eval search_title=mvjoin(search_title, ""|"")] 
| eval Product = vendorName . "" "" . productName 
| makemv search_title delim=""|"" 
| mvexpand search_title
| stats values(basesearch) as basesearch values(Product) as Product by search_title
| eval basesearch = ""("" . mvjoin(basesearch, "" OR "") . "")"", ""Products That Provide Visibility""=mvjoin(mvfilter(Product!="" ""), "", "")
| rename basesearch as ""Dataset That Provides Visibility"" search_title as ""Saved Search Name""
| table ""Saved Search Name"" ""Dataset That Provides Visibility"" ""Products That Provide Visibility"""
Search Tracking - Action History,,"| from datamodel:""Splunk_Audit"".""Search_Activity"" | where (search_type==""adhoc"" OR search_type==""realtime"") AND info==""granted"" AND NOT user=""splunk-system-user"" AND NOT LIKE(search, ""No search string available%"") AND (savedsearch_name=""quick-search-manager"" OR isnull(savedsearch_name)) | `per_panel_filter(""ppf_action_history_searches"",""search"")` | rename host as content.host, source as content.source, sourcetype as content.sourcetype, search as content.search, search_type as content.search_type, info as content.info, search_lt as content.latest, search_et as content.earliest, search_id as content.sid"
Sessions - Network Session Details,,"| from datamodel:""Network_Sessions"".""All_Sessions"" | rename dest_ip as ip, dest_mac as mac, dest_nt_host as nt_host, dest_dns as dns | `mvappend_field(src,src_ip)` | `mvappend_field(src,src_mac)` | `mvappend_field(src,src_nt_host)` | `mvappend_field(src,src_dns)` | head 1000 | table _time,src,ip,mac,nt_host,dns,user"
Sessions - Network Sessions Over Time,,"| tstats `summariesonly` count from datamodel=Network_Sessions.All_Sessions by _time,nodename span=10m | search nodename!=All_Sessions nodename!=All_Sessions.Session_* | rex field=nodename ""All_Sessions.(?<session_type>.*)"" | timechart minspan=10m sum(count) as count by session_type"
Splunk_ML_Toolkit - ML-SPL - Sourcetype Inference,Sends information required for sourcetype infererence,"index=""_internal"" source=""*mlspl.log*"" 
| rex field=_raw ""Sourcetype inference: Punct (?<full_punct>[^ ]+) has sourcetype (?<orig_sourcetype>.*)"" 
| search full_punct=* AND orig_sourcetype=* 
| stats count by orig_sourcetype, full_punct 
| sample 1000 
| makejson output=data 
| table data"
Splunk_ML_Toolkit - ML-SPL - Telemetry Gen,Sends anonymous ML operational data,"index=""_internal"" source=""*mlspl.log*"" 
| rex field=_raw ""PID (?<PID>\d+)"" 
| stats values(*) as *, max(columns) as maxColumns, sum(rows) as numRows by PID 
| where isnotnull(command) and (isnotnull(algo_name) or isnotnull(scoringName)) 
| sort _time 
| stats values(*) as *, max(columns) as maxColumns, sum(rows) as numRows by PID, UUID 
| fields PID UUID algo_name app_context apply_time command csv_parse_time csv_read_time csv_render_time 
  example_name experiment_id fit_time handle_time maxColumns modelId num_fields num_fields_PC num_fields_RS num_fields_SS 
  num_fields_fs num_fields_prefixed num_fields_tfidf numRows params partialFit pipeline_stage scoringName scoringTimeSec 
| head 1000 
| makejson output=data 
| table data"
SSL - Cloud Sessions,,"| makeresults | eval current_count=931, historical_count=1072, delta=-141"
SSL - Expired Certificates,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
SSL - Expired Certs - Swimlane,,"| tstats `summariesonly` count, values(All_Certificates.src) as src, values(All_Certificates.SSL.ssl_subject_common_name) as subject_common_name from datamodel=Certificates.All_Certificates where $constraints$ nodename=All_Certificates.SSL All_Certificates.SSL.ssl_is_valid=0 by _time span=$span$"
SSL - Short Duration Certificates,,"| makeresults | eval current_count=832, historical_count=955, delta=-123"
SSL - Total SSL Sessions,,"| makeresults | eval current_count=21051, historical_count=24046, delta=-2995"
Story Search Credential Dumping,,index=asx mitre_id=t1003 | stats values(source) as detections values(process) as processes values(user) as users values(_time) as time count by dest
Suppressions - Currently Suppressed Events Over Time,,`suppressed_notables` | timechart minspan=10m count by rule_name
Suppressions - Expired Suppressions,,`suppression_audit-expired` | eval raw=_raw | table _time suppression raw
Suppressions - Suppression History Over Time,,"index=notable_summary source=""Threat - Suppressed Notables - Summary Gen"" | timechart minspan=1d sum(count) as count by rule_name"
Suppressions - Suppression Management Activity,,`suppression_audit` | table _time suppression action status user
Threat - Alexa Top Sites - Lookup Gen,,| inputintelligence `top_1m_sites` | outputlookup alexa_lookup_by_str | stats count
Threat - All Notable Events By Asset - Swimlane,,"$constraints$ `notable` | bucket _time span=$span$ | stats values(rule_name) as rule_name,values(urgency) as urgency,values(src) as src,values(dest) as dest,count by _time"
Threat - All Notable Events By Identity - Swimlane,,"$constraints$ `notable` | bucket _time span=$span$ | stats values(rule_name) as rule_name,values(urgency) as urgency,values(src) as src,values(dest) as dest,count by _time"
Threat - All Risk Modifiers By Asset - Swimlane,,"| tstats summariesonly=false values(source) as source,values(All_Risk.risk_object) as risk_object,sum(All_Risk.calculated_risk_score) as count from datamodel=Risk.All_Risk where $constraints$ by _time span=$span$ | eval risk_score=count"
Threat - All Risk Modifiers By Identity - Swimlane,,"| tstats summariesonly=false values(source) as source,values(All_Risk.risk_object) as risk_object,sum(All_Risk.calculated_risk_score) as count from datamodel=Risk.All_Risk where $constraints$ by _time span=$span$ | eval risk_score=count"
Threat - ASN CIDR Matches - Lookup Gen,,"| inputintelligence maxmind_geoip_asn_ipv4 | eval description='autonomous_system_organization' | expandiprange ip | eval ip=mvfilter(match(ip, `ipv4_cidr_regex`)) | where isnotnull(ip) | mvexpand ip | outputlookup output_format=splunk_mv_csv asn_lookup_by_cidr | stats count"
Threat - ASN IPv6 CIDR Matches - Lookup Gen,,| inputintelligence maxmind_geoip_asn_ipv6 | eval description='autonomous_system_organization' | outputlookup asn_lookup_by_cidr_ipv6 | stats count
Threat - ASN String Matches - Lookup Gen,,"| inputintelligence maxmind_geoip_asn_ipv4 | eval description='autonomous_system_organization' | expandiprange ip | eval ip=mvfilter(!match(ip, `ipv4_cidr_regex`)) | where isnotnull(ip) | mvexpand ip | outputlookup output_format=splunk_mv_csv asn_lookup_by_str | stats count"
Threat - Correlation Searches - Lookup Gen,,"| rest splunk_server=local count=0 ""/servicesNS/-/-/saved/searches?listDefaultActionArgs=1"" | where match('action.correlationsearch.enabled', ""1|[Tt]|[Tt][Rr][Uu][Ee]"") OR match('action.notable', ""1|[Tt]|[Tt][Rr][Uu][Ee]"") OR match('action.risk', ""1|[Tt]|[Tt][Rr][Uu][Ee]"") | join type=left title [| rest splunk_server=local count=0 /services/configs/conf-analyticstories search=""name=savedsearch* AND annotations=*"" | eval title=replace(title, ""savedsearch://"", """") | table title,annotations] | eval annotations=case(isnotnull('action.correlationsearch.annotations') AND 'action.correlationsearch.annotations'!="""",'action.correlationsearch.annotations',isnotnull(annotations) AND annotations!="""",annotations,1=1,null()),rule_name=if(isnotnull('action.correlationsearch.label'),'action.correlationsearch.label',title) | rename title as _key,action.notable.param.* as * | append [| rest splunk_server=local count=0 /servicesNS/-/-/configs/conf-correlationsearches | rename title as _key] | eval security_domain=if(security_domain="""",null(),security_domain),severity=if(severity="""",null(),severity),rule_name=if(rule_name="""",null(),rule_name),description=if(description="""",null(),description),rule_title=if(rule_title="""",null(),rule_title),rule_description=if(rule_description="""",null(),rule_description),drilldown_name=if(drilldown_name="""",null(),drilldown_name),drilldown_search=if(drilldown_search="""",null(),drilldown_search),drilldown_earliest_offset=if(drilldown_earliest_offset="""",null(),drilldown_earliest_offset),drilldown_latest_offset=if(drilldown_latest_offset="""",null(),drilldown_latest_offset),default_status=if(default_status="""",null(),default_status),default_owner=if(default_owner="""",null(),default_owner),next_steps=if(next_steps="""",null(),next_steps),investigation_profiles=if(investigation_profiles="""",null(),investigation_profiles),extract_artifacts=if(extract_artifacts="""",null(),extract_artifacts),recommended_actions=if(recommended_actions="""",null(),recommended_actions) | appendpipe [ where _key LIKE ""%\""%"" | eval _key=replace(_key, ""\"""", ""_"") ] | stats first(annotations) as annotations,first(security_domain) as security_domain,first(severity) as severity,first(rule_name) as rule_name,first(description) as description,first(rule_title) as rule_title,first(rule_description) as rule_description,first(drilldown_name) as drilldown_name,first(drilldown_search) as drilldown_search,first(drilldown_earliest_offset) as drilldown_earliest_offset,first(drilldown_latest_offset) as drilldown_latest_offset,first(default_status) as default_status,first(default_owner) as default_owner,first(next_steps) as next_steps,first(investigation_profiles) as investigation_profiles,first(extract_artifacts) as extract_artifacts,first(recommended_actions) as recommended_actions by _key | outputlookup correlationsearches_lookup append=T key_field=_key | stats count"
Threat - ICANN Top Level Domain - Lookup Gen,,| inputintelligence icann_top_level_domain_list | mvexpand domain | eval tld=lower(domain) | fields tld | outputlookup cim_http_tld_lookup | stats count
Threat - Login from Tor IP - Rule,Alerts when more than a couple of logins report in from any TOR IP.,"sourcetype=stream:http dest_port=80 store.froth.ly | lookup torIPs src_ip | search isTor=1| rex field=cookie ""form_key=(?<splSessionID>\w+)"" | rex field=form_data ""login\[username\]=(?<splUsername>[^&|^$]+)"" | rex field=form_data ""login\[password\]=(?<splPassword>[^&|^$]+)"" |search splUsername=* |rex field=splUsername ""(?<TLD>[^\.|^\@]+.[^.]+)$"" |stats dc(splUsername) as numUsernames list(splUsername) as user list(splPassword) as password count by TLD | where numUsernames > 2"
Threat - Mitre Attack - Lookup Gen,,| inputintelligence mitre_attack | outputlookup mitre_attack_lookup | stats count
Threat - Mozilla Public Suffix - Lookup Gen,,"| inputintelligence mozilla_public_suffix_list | mvexpand domain | eval segments=mvcount(split(domain, ""."")), length=case(rule==""*"", segments+2, rule==""!"", segments, 1==1, segments+1) | fields length,domain,segments | outputlookup mozilla_public_suffix_lookup | stats count"
Threat - Notable Owners - Lookup Gen,,"| rest splunk_server=local count=0 /services/authentication/users | search capabilities=""can_own_notable_events"" | rename title as owner | append [| makeresults | eval owner=""unassigned"" ] | eval _key=owner | eval realname=if(isnull(realname) or realname="""", null(), realname) | table _key owner realname | outputlookup notable_owners_lookup | stats count"
Threat - Reflected XSS Detected - Rule,Alert on instances of common XSS script patterns found in web access logs.,"sourcetype=access_combined | eval decoded_uri = urldecode (uri) | search decoded_uri=""*<script>*alert*(*"" | rename clientip as src_ip | eval dest=host | table _time src_ip host decoded_uri"
Threat - Refresh Governance - Administrative,,| rest splunk_server=local count=0 /services/alerts/governance/_reload
Threat - Refresh Reviewstatuses - Administrative,,| rest splunk_server=local count=0 /services/alerts/reviewstatuses/_reload
Threat - Risk Correlation By Other - Lookup Gen,,"| tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk where (All_Risk.risk_object_type!=""user"" AND All_Risk.risk_object_type!=""system"") by All_Risk.risk_object,All_Risk.risk_object_type | `drop_dm_object_name(""All_Risk"")` | eval risk_object=lower('risk_object'),risk_object_type=lower('risk_object_type') | stats sum(risk_score) as risk_score by risk_object,risk_object_type | outputlookup risk_correlation_by_other_lookup | stats count"
Threat - Risk Correlation By System - Lookup Gen,,"| tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk where All_Risk.risk_object_type=""system"" by All_Risk.risk_object | eval dest=lower('All_Risk.risk_object') | `get_asset(dest)` | eval dest=mvdedup(if(isnotnull(dest_asset_id),mvappend(dest,lower(dest_asset)),dest)) | stats sum(risk_score) as risk_score by dest | rename dest as risk_object | outputlookup risk_correlation_by_system_lookup | stats count"
Threat - Risk Correlation By User - Lookup Gen,,"| tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk where All_Risk.risk_object_type=""user"" by All_Risk.risk_object | eval user=lower('All_Risk.risk_object') | `get_identity4events(user)` | eval risk_object=if(isnotnull(user_identity),lower(user_identity),user),risk_object=mvdedup(risk_object) | stats sum(risk_score) as risk_score by risk_object | outputlookup risk_correlation_by_user_lookup | stats count"
Threat - Same Error On Many Systems - Rule,Alerts when multiple systems are exhibiting the same errors,"tag=error NOT tag=authentication | stats first(_raw) as orig_raw,dc(host) as system_count by sourcetype,punct | where 'system_count'>100"
Threat - Suppressed Notables - Summary Gen,,"`suppressed_notables` | stats count by security_domain, rule_name, urgency, suppression"
Threat - Threat Intelligence By Certificate Common Name - Lookup Gen,,"| `certificate_intel` | `exclude_disabled_entries` | rex field=certificate_issuer ""CN\s*=(?<_certificate_issuer_common_name>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""CN\s*=(?<_certificate_subject_common_name>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | eval certificate_common_name=mvappend(certificate_issuer_common_name,certificate_subject_common_name,_certificate_issuer_common_name,_certificate_subject_common_name) | `threatintel_outputlookup(certificate_common_name)`"
Threat - Threat Intelligence By Certificate Common Name Wildcard - Lookup Gen,,"| `certificate_intel` | `exclude_disabled_entries` | rex field=certificate_issuer ""CN\s*=(?<_certificate_issuer_common_name>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""CN\s*=(?<_certificate_subject_common_name>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | eval certificate_common_name=mvappend(certificate_issuer_common_name,certificate_subject_common_name,_certificate_issuer_common_name,_certificate_subject_common_name) | `threatintel_outputlookup_wildcard(certificate_common_name)`"
Threat - Threat Intelligence By Certificate Organization - Lookup Gen,,"| `certificate_intel` | `exclude_disabled_entries` | rex field=certificate_issuer ""O\s*=(?<_certificate_issuer_org>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""O\s*=(?<_certificate_subject_org>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | eval certificate_organization=mvappend(certificate_issuer_organization,_certificate_issuer_org,certificate_subject_organization,_certificate_subject_org) | `threatintel_outputlookup(certificate_organization)`"
Threat - Threat Intelligence By Certificate Organization Wildcard - Lookup Gen,,"| `certificate_intel` | `exclude_disabled_entries` | rex field=certificate_issuer ""O\s*=(?<_certificate_issuer_org>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""O\s*=(?<_certificate_subject_org>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | eval certificate_organization=mvappend(certificate_issuer_organization,_certificate_issuer_org,certificate_subject_organization,_certificate_subject_org) | `threatintel_outputlookup_wildcard(certificate_organization)`"
Threat - Threat Intelligence By Certificate Serial - Lookup Gen,,| `certificate_intel`  | `exclude_disabled_entries` | `explode_certificate_serial` | `threatintel_outputlookup(certificate_serial)`
Threat - Threat Intelligence By Certificate Unit - Lookup Gen,,"| `certificate_intel`  | `exclude_disabled_entries` | rex field=certificate_issuer ""OU\s*=(?<_certificate_issuer_unit>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""OU\s*=(?<_certificate_subject_unit>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | eval certificate_unit=mvappend(certificate_issuer_unit,_certificate_issuer_unit,certificate_subject_unit,_certificate_subject_unit) | `threatintel_outputlookup(certificate_unit)`"
Threat - Threat Intelligence By Certificate Unit Wildcard - Lookup Gen,,"| `certificate_intel` | `exclude_disabled_entries` | rex field=certificate_issuer ""OU\s*=(?<_certificate_issuer_unit>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""OU\s*=(?<_certificate_subject_unit>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | eval certificate_unit=mvappend(certificate_issuer_unit,_certificate_issuer_unit,certificate_subject_unit,_certificate_subject_unit) | `threatintel_outputlookup_wildcard(certificate_unit)`"
Threat - Threat Intelligence By CIDR - Lookup Gen,,"| `certificate_intel` | `email_intel` | `http_intel` | `ip_intel` | `process_intel` | `exclude_disabled_entries` | eval ip=mvappend(ip,embedded_ip,src,dest) | `get_threat_download_status` | `threatintel_outputlookup_exclusions` | mvexpand ip | where match(ip, ""\/[0-9]{1,2}"")  | eval key=md5('threat_collection'.'_key'.'ip'),threat_collection_key='_key',value='ip' | `threatintel_upsert(threatintel_by_cidr)`"
Threat - Threat Intelligence By Domain - Lookup Gen,,"| `certificate_intel` | `email_intel` | `http_intel` | `ip_intel` | where NOT match(domain, `ipv4_regex`) | `exclude_disabled_entries` | eval ip=mvappend(domain,embedded_domain) | `threatintel_outputlookup(domain)`"
Threat - Threat Intelligence By Email - Lookup Gen,,"| `certificate_intel` | `exclude_disabled_entries` | rex field=certificate_issuer ""(?:E|emailAddress)\s*=(?<_certificate_issuer_email>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""(?:E|emailAddress)\s*=(?<_certificate_subject_email>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | `email_intel` | eval email=mvappend(certificate_issuer_email,_certificate_issuer_email,certificate_subject_email,_certificate_subject_email,src_user) | `threatintel_outputlookup(email)`"
Threat - Threat Intelligence By Email Subject - Lookup Gen,,"| `email_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(""subject"",""threatintel_by_email_subject"")`"
Threat - Threat Intelligence By Email Subject Wildcard - Lookup Gen,,"| `email_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(""subject"",""threatintel_by_email_subject_wildcard"")`"
Threat - Threat Intelligence By Email Wildcard - Lookup Gen,,"| `certificate_intel` | `exclude_disabled_entries` | rex field=certificate_issuer ""(?:E|emailAddress)\s*=(?<_certificate_issuer_email>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | rex field=certificate_subject ""(?:E|emailAddress)\s*=(?<_certificate_subject_email>.*?)(?=[,;/]\s*(?:[A-Z]+|emailAddress)\s*=|$)"" | `email_intel`| eval email=mvappend(certificate_issuer_email,_certificate_issuer_email,certificate_subject_email,_certificate_subject_email,src_user) | `threatintel_outputlookup_wildcard(email)`"
Threat - Threat Intelligence By File Hash - Lookup Gen,,"| `certificate_intel` | `email_intel` | `file_intel` | `service_intel` | `exclude_disabled_entries` | eval file_hash=mvappend(file_hash,ssl_hash,process_file_hash,service_file_hash,service_dll_file_hash) | `threatintel_outputlookup(file_hash)`"
Threat - Threat Intelligence By File Name - Lookup Gen,,"| `email_intel` | `file_intel` | `process_intel` | `service_intel` | `exclude_disabled_entries` | eval file_name=mvappend(file_name,process_file_name,service_file_name,service_dll_file_name) | `threatintel_outputlookup(file_name)`"
Threat - Threat Intelligence By File Name Wildcard - Lookup Gen,,"| `email_intel` | `file_intel` | `process_intel` | `service_intel` | `exclude_disabled_entries` | eval file_name=mvappend(file_name,process_file_name,service_file_name,service_dll_file_name) | `threatintel_outputlookup_wildcard(file_name)`"
Threat - Threat Intelligence By HTTP User Agent - Lookup Gen,,| `http_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(http_user_agent)`
Threat - Threat Intelligence By HTTP User Agent Wildcard - Lookup Gen,,| `http_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(http_user_agent)`
Threat - Threat Intelligence By Process - Lookup Gen,,| `process_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(process)`
Threat - Threat Intelligence By Process Wildcard - Lookup Gen,,| `process_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(process)`
Threat - Threat Intelligence By Registry Path - Lookup Gen,,| `registry_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(registry_path)`
Threat - Threat Intelligence By Registry Path Wildcard - Lookup Gen,,| `registry_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(registry_path)`
Threat - Threat Intelligence By Registry Value Name - Lookup Gen,,| `registry_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(registry_value_name)`
Threat - Threat Intelligence By Registry Value Name Wildcard - Lookup Gen,,| `registry_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(registry_value_name)`
Threat - Threat Intelligence By Registry Value Text - Lookup Gen,,| `registry_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(registry_value_text)`
Threat - Threat Intelligence By Registry Value Text Wildcard - Lookup Gen,,| `registry_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(registry_value_text)`
Threat - Threat Intelligence By Service - Lookup Gen,,| `service_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(service)`
Threat - Threat Intelligence By Service Wildcard - Lookup Gen,,| `service_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(service)`
Threat - Threat Intelligence By System - Lookup Gen,,"| `certificate_intel` | `email_intel` | `http_intel` | `ip_intel` | `process_intel` | `exclude_disabled_entries` | eval ip=mvappend(ip,embedded_ip,src,dest) | mvexpand ip | where isnotnull(ip) AND NOT ip="""" AND NOT match(ip, `ipv4_cidr_regex`) AND NOT ('ip' LIKE ""*%"" OR 'ip' LIKE ""%*"")  | eval key=md5('threat_collection'.'_key'.'ip'),threat_collection_key='_key',value=lower('ip') | `threatintel_upsert(threatintel_by_system)`"
Threat - Threat Intelligence By URL - Lookup Gen,,"| `http_intel` | `exclude_disabled_entries` | eval url=mvappend(url,http_referrer) | `threatintel_outputlookup(url)`"
Threat - Threat Intelligence By URL Wildcard - Lookup Gen,,"| `http_intel` | `exclude_disabled_entries` | eval url=mvappend(url,http_referrer) | `threatintel_outputlookup_wildcard(url)`"
Threat - Threat Intelligence By User - Lookup Gen,,| `registry_intel` | `user_intel` | `exclude_disabled_entries` | `threatintel_outputlookup(user)`
Threat - Threat Intelligence By User Wildcard - Lookup Gen,,| `registry_intel` | `user_intel` | `exclude_disabled_entries` | `threatintel_outputlookup_wildcard(user)`
Threat - Threat List Activity - Rule,Alerts when any activity matching threat intelligence is detected.,"| from datamodel:""Threat_Intelligence"".""Threat_Activity"" | dedup threat_match_field,threat_match_value | `get_event_id` | table _raw,event_id,source,src,dest,src_user,user,threat*,weight | rename weight as record_weight | `per_panel_filter(""ppf_threat_activity"",""threat_match_field,threat_match_value"")` | `get_threat_attribution(threat_key)` | rename source_* as threat_source_*,description as threat_description | fields - *time | eval risk_score=case(isnum(record_weight), record_weight, isnum(weight) AND weight=1, 60, isnum(weight), weight, 1=1, null()),risk_system=if(threat_match_field IN(""query"", ""answer""),threat_match_value,null()),risk_hash=if(threat_match_field IN(""file_hash""),null(),threat_match_value),risk_network=if(threat_match_field IN(""http_user_agent"", ""url"") OR threat_match_field LIKE ""certificate_%"",null(),threat_match_value),risk_host=if(threat_match_field IN(""file_name"", ""process"", ""service"") OR threat_match_field LIKE ""registry_%"",null(),threat_match_value),risk_other=if(threat_match_field IN(""query"", ""answer"", ""src"", ""dest"", ""src_user"", ""user"", ""file_hash"", ""http_user_agent"", ""url"", ""file_name"", ""process"", ""service"") OR threat_match_field LIKE ""certificate_%"" OR threat_match_field LIKE ""registry_%"",null(),threat_match_value)"
Threat - Watchlisted Events - Rule,"Alerts when an event is discovered including text has been identified as important. This rule triggers whenever an event is discovered with the tag of ""watchlist"".","tag=watchlist NOT sourcetype=stash | eval risk_object=case(isnotnull(user),user,isnotnull(src_user),src_user,isnotnull(dest),dest,isnotnull(src),src,1=1,host) | eval risk_object_type=case(isnotnull(user),""user"",isnotnull(src_user),""user"",isnotnull(dest),""system"",isnotnull(src),""system"",1=1,""system"") | eval risk_score=if(eventtype=""website_watchlist"",50,null()) | eval suppression_value=sourcetype.""|"".risk_object  | `get_event_id` | table _raw,event_id,host,source,sourcetype,src,dest,dvc,src_user,user"
Threat - Web Vuln Scanner Detected - Rule,Alert on more than 1000 requests in a 1 minute period from a single IP with a known vulnerability scan user agent.,"sourcetype=stream:http | bucket _time span=1m | lookup scanner_agents.csv http_user_agent | where scanner=""1"" | stats count by _time dest_ip src_ip http_user_agent | where count > 1000"
Threat Activity - Most Active Threat Sources,,"| tstats `summariesonly` count from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_key | `drop_dm_object_name(""Threat_Activity"")` | `get_threat_attribution(""threat_key"")` | stats sum(count) as count by threat_key,source_id,source_path,source_type | sort 100 - count"
Threat Activity - Most Active Threats Collections,,"| tstats `summariesonly` values(source) as search,values(Threat_Activity.threat_collection_key) as threat_collection_key,count from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by _time,Threat_Activity.threat_collection span=1h | `drop_dm_object_name(""Threat_Activity"")` | stats values(search) as search,sparkline(sum(count),1h) as sparkline,dc(threat_collection_key) as dc(artifacts),sum(count) as count by threat_collection | rex max_match=10 field=search ""Threat\s*-\s*(?<friendly_search>.*)(?:\s*-\s*Threat\s+Gen)"" | rename friendly_search as search | sort - count"
Threat Activity - Systems Impacted By Multiple Threats,,"| tstats `summariesonly` values(Threat_Activity.src) as src,values(Threat_Activity.dest) as dest,count from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_match_field,Threat_Activity.threat_match_value,Threat_Activity.threat_key | `drop_dm_object_name(""Threat_Activity"")` | eval src=if(threat_match_field==""src"",null(),src) | eval dest=if(threat_match_field==""dest"",null(),dest) | eval system=mvappend(src,NULL,dest) | stats dc(threat_key) as dc(threat) by system | search system!=""...truncated..."" system!=""unknown"" ""dc(threat)"">1 | sort 100 - dc(threat)"
Threat Activity - Threat Activity By Threat Category,,"| tstats `summariesonly` count from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_key | `drop_dm_object_name(""Threat_Activity"")` | `get_threat_attribution(threat_key)` | stats sum(count) as count by threat_category | sort 10 - count"
Threat Activity - Threat Activity By Threat Group,,"| tstats `summariesonly` count from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_key | `drop_dm_object_name(""Threat_Activity"")` | `get_threat_attribution(threat_key)` | stats sum(count) as count by threat_group | sort 10 - count"
Threat Activity - Threat Activity Details,,"| tstats `summariesonly` latest(_time) as _time,values(Threat_Activity.orig_sourcetype) as sourcetype,values(Threat_Activity.src) as src,values(Threat_Activity.dest) as dest from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_collection,Threat_Activity.threat_match_field,Threat_Activity.threat_match_value,Threat_Activity.threat_key | `drop_dm_object_name(""Threat_Activity"")` | `get_threat_attribution(""threat_key"")` | `per_panel_filter(""ppf_threat_activity"",""threat_match_field,threat_match_value"")` | rename ppf_filter as filter | sort - filter,_time | table _time,threat_match_field,threat_match_value,filter,sourcetype,src,dest,threat_collection,threat_group,threat_category"
Threat Activity - Threat Activity Over Time,,"| `tstats` count from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by _time,Threat_Activity.threat_collection span=10m | timechart count by Threat_Activity.threat_collection | `drop_dm_object_name(""Threat_Activity"")`"
Threat Activity - Threats Impacting Multiple Systems,,"| tstats `summariesonly` values(Threat_Activity.src) as src,values(Threat_Activity.dest) as dest,count from datamodel=Threat_Intelligence.Threat_Activity where NOT [| `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_match_field,Threat_Activity.threat_match_value,Threat_Activity.threat_key | `drop_dm_object_name(""Threat_Activity"")` | `get_threat_attribution(threat_key)` | eval src=if(threat_match_field==""src"",null(),src) | eval dest=if(threat_match_field==""dest"",null(),dest) | eval system=mvappend(src,NULL,dest) | stats dc(system) by source_path | search ""dc(system)"">1 | sort 100 - dc(system)"
Threat Activity - Total Count,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Threat Activity - Unique Categories,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Threat Activity - Unique Collections,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Threat Activity - Unique Matches,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Threat Activity - Unique Sources,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Threats - Disable Suppressions - Administrative,,| rest splunk_server=local count=0 /services/alerts/suppressions/-/_autodisable
Traffic - Maximum Bytes,,"| makeresults | eval current_count=26231797, historical_count=26215732, delta=16065"
Traffic - Mean Bytes,,"| makeresults | eval current_count=37934, historical_count=34912, delta=3022"
Traffic - Minimum Bytes,,"| makeresults | eval current_count=6, historical_count=6, delta=0"
Traffic - Network Threat Activity,,"| makeresults | eval current_count=0, historical_count=1, delta=-1"
Traffic - New Port Activity,,"| `port_protocol_tracker` | `dayDiff(firstTime)` | search dayDiff<7 | eval _firstTime=firstTime,firstTime=strftime(firstTime, ""%m/%d/%Y %H:%M:%S""),_lastTime=lastTime,lastTime=strftime(lastTime,""%m/%d/%Y %H:%M:%S"") | fields firstTime,lastTime,transport,dest_port,app"
Traffic - Prohibited Or Insecure Traffic Over Time,,"| tstats `summariesonly` values(All_Traffic.src_category) as src_category,values(All_Traffic.dest_category) as dest_category,count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src,All_Traffic.dest,All_Traffic.transport,All_Traffic.dest_port span=10m | `drop_dm_object_name(""All_Traffic"")` | `is_traffic_prohibited(dest_port)` | search (is_prohibited!=""false"" OR is_secure!=""unknown"") | `get_transport_dest_port` | timechart minspan=10m sum(count) as count by transport_dest_port"
Traffic - Prohibited Traffic Details,,"| tstats `summariesonly` max(_time) as _time,values(All_Traffic.src_category) as src_category,values(All_Traffic.dest_category) as dest_category,count from datamodel=Network_Traffic.All_Traffic by All_Traffic.src,All_Traffic.dest,All_Traffic.transport,All_Traffic.dest_port | `drop_dm_object_name(""All_Traffic"")` | `is_traffic_prohibited(dest_port)` | search (is_prohibited!=""false"" OR is_secure!=""unknown"") | fields _time,src,src_category,dest,dest_category,transport,dest_port,is_prohibited,is_secure"
Traffic - Scan Activity By Destination Ports,,"| tstats `summariesonly` dc(All_Traffic.dest_port) as dest_port_count from datamodel=Network_Traffic.All_Traffic by All_Traffic.src | `drop_dm_object_name(""All_Traffic"")` | sort 10 - dest_port_count"
Traffic - Scan Activity By Destinations,,"| tstats `summariesonly` dc(All_Traffic.dest) as dest_count from datamodel=Network_Traffic.All_Traffic by All_Traffic.src | `drop_dm_object_name(""All_Traffic"")` | sort 10 - dest_count"
Traffic - Standard Deviation Bytes,,"| makeresults | eval current_count=555050, historical_count=529033, delta=26017"
Traffic - Stream Connections,,"| makeresults | eval current_count=233264, historical_count=295497, delta=-62233"
Traffic - Threat List Activity By Asset - Swimlane,,"| tstats `summariesonly` values(Threat_Activity.threat_match_field) as threat_match_field,values(Threat_Activity.threat_match_value) as threat_match_value,values(Threat_Activity.threat_collection) as threat_collection,count from datamodel=Threat_Intelligence.Threat_Activity where $constraints$ by _time span=$span$"
Traffic - Threat List Activity By Identity - Swimlane,,"| tstats `summariesonly` values(Threat_Activity.threat_match_field) as threat_match_field,values(Threat_Activity.threat_match_value) as threat_match_value,values(Threat_Activity.threat_collection) as threat_collection,count from datamodel=Threat_Intelligence.Threat_Activity where $constraints$ by _time span=$span$"
Traffic - Top Traffic By Destination,,"| tstats `summariesonly` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dest span=1h | `drop_dm_object_name(""All_Traffic"")` | stats sparkline(sum(count),1h) as sparkline,sum(count) as count by dest | sort 100 - count"
Traffic - Top Traffic By Destination Port,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.dest_port | chart count over All_Traffic.dest_port by All_Traffic.action | `drop_dm_object_name(""All_Traffic"")` | `sort_chart`"
Traffic - Top Traffic By Device,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.dvc | chart count over All_Traffic.dvc by All_Traffic.action | `drop_dm_object_name(""All_Traffic"")` | `sort_chart`"
Traffic - Top Traffic By Source,,"| tstats `summariesonly` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src span=1h | `drop_dm_object_name(""All_Traffic"")` | stats sparkline(sum(count),1h) as sparkline,sum(count) as count by src | sort 100 - count"
Traffic - Top Traffic By Source Port,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.src_port | chart count over All_Traffic.src_port by All_Traffic.action | `drop_dm_object_name(""All_Traffic"")` | `sort_chart`"
Traffic - Top Traffic By Transport,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.transport | chart count over All_Traffic.transport by All_Traffic.action | `drop_dm_object_name(""All_Traffic"")` | `sort_chart`"
Traffic - Total Bytes,,"| makeresults | eval current_count=10455502995, historical_count=12095841522, delta=-1640338527"
Traffic - Total Count,,"| makeresults | eval current_count=305490, historical_count=377984, delta=-72494"
Traffic - Total Encrypted Connections,,"| makeresults | eval current_count=16383, historical_count=18687, delta=-2304"
Traffic - Traffic Over Time,,| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time span=10m | timechart minspan=10m count
Traffic - Traffic Over Time By Action,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.action span=10m | timechart minspan=10m count by All_Traffic.action | `drop_dm_object_name(""All_Traffic"")`"
Traffic - Traffic Over Time By Bytes,,"| `tstats` min(All_Traffic.bytes),avg(All_Traffic.bytes),max(All_Traffic.bytes) from datamodel=Network_Traffic.All_Traffic where All_Traffic.bytes>0 by _time span=10m  | timechart minspan=10m min(All_Traffic.bytes) as min(bytes),avg(All_Traffic.bytes) as avg(bytes),max(All_Traffic.bytes) as max(bytes) | eval min(bytes)=round('min(bytes)') | eval max(bytes)=round('max(bytes)') | eval avg(bytes)=round('avg(bytes)')"
Traffic - Traffic Over Time By Destination,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dest span=10m | timechart minspan=10m useother=`useother` count by All_Traffic.dest | `drop_dm_object_name(""All_Traffic"")`"
Traffic - Traffic Over Time By Destination Port,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dest_port span=10m | timechart minspan=10m useother=`useother` count by All_Traffic.dest_port | `drop_dm_object_name(""All_Traffic"")`"
Traffic - Traffic Over Time By Device,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dvc span=10m | timechart minspan=10m useother=`useother` count by All_Traffic.dvc | `drop_dm_object_name(""All_Traffic"")`"
Traffic - Traffic Over Time By Mega-Bytes,,"| `tstats` min(All_Traffic.bytes),avg(All_Traffic.bytes),max(All_Traffic.bytes) from datamodel=Network_Traffic.All_Traffic where All_Traffic.bytes>0 by _time span=10m  | timechart minspan=10m min(All_Traffic.bytes) as min(bytes),avg(All_Traffic.bytes) as avg(bytes),max(All_Traffic.bytes) as max(bytes) | eval min(megabytes)=round('min(bytes)'/1024/1024), max(megabytes)=round('max(bytes)'/1024/1024), avg(megabytes)=round('avg(bytes)'/1024/1024) | fields - min(bytes) max(bytes) avg(bytes)"
Traffic - Traffic Over Time By Source,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src span=10m | timechart minspan=10m useother=`useother` count by All_Traffic.src | `drop_dm_object_name(""All_Traffic"")`"
Traffic - Traffic Over Time By Source Port,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src_port span=10m | timechart minspan=10m useother=`useother` count by All_Traffic.src_port | `drop_dm_object_name(""All_Traffic"")`"
Traffic - Traffic Over Time By Transport Protocol,,"| `tstats` count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.transport span=10m | timechart minspan=10m useother=`useother` count by All_Traffic.transport | `drop_dm_object_name(""All_Traffic"")`"
Traffic - Traffic Size Anomalies,,"| tstats `summariesonly` max(_time) as lastTime,min(All_Traffic.bytes) as min_bytes,avg(All_Traffic.bytes) as mean_bytes,max(All_Traffic.bytes) as max_bytes,dc(All_Traffic.dest) as dc(dest),count from datamodel=Network_Traffic.All_Traffic where [| from inputlookup:traffic_bytes_tracker | search Z=2 | fields search] by All_Traffic.src | `drop_dm_object_name(""All_Traffic"")` | appendcols [inputlookup append=T start=0 max=1 traffic_bytes_tracker | rename mean_bytes as tracker_mean | fields tracker_mean,stdev] | filldown tracker_mean,stdev | eval Z=round(((mean_bytes-tracker_mean)/stdev),2) | `per_panel_filter(""ppf_traffic_size"",""src"")` | rename ppf_filter as filter | eval bytes=if(min_bytes==mean_bytes AND mean_bytes==max_bytes,floor(min_bytes),""min: "".floor(min_bytes).""|avg: "".floor(mean_bytes).""|max: "".floor(max_bytes)) | `makemv(bytes)` | sort - filter,Z | `uitime(lastTime)` | table src,filter,bytes,dc(dest),count,Z,lastTime"
Traffic - Traffic Size Anomalies Over Time,,"| tstats `summariesonly` count from datamodel=Network_Traffic.All_Traffic where [| from inputlookup:traffic_bytes_tracker | search Z=2 | fields search] by _time,All_Traffic.src,All_Traffic.transport span=10m | `drop_dm_object_name(""All_Traffic"")` | `per_panel_filter(""ppf_traffic_size"",""src"")` | timechart minspan=10m sum(count) by All_Traffic"
Traffic - Unique Destinations,,"| makeresults | eval current_count=563, historical_count=564, delta=-1"
Traffic - Unique Network Protocols,,"| makeresults | eval current_count=94, historical_count=94, delta=0"
Traffic - Unique Sources,,"| makeresults | eval current_count=245, historical_count=341, delta=-96"
Updates - Available Updates,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Updates - Available Updates By System,,"| tstats `summariesonly` latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product | `drop_dm_object_name(""Updates"")` | search status=available | stats count by dest | `get_asset(dest)` | sort 100 - count | fields dest,dest_should_update,count"
Updates - Installed Updates,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Updates - Number Of Systems Not Updating,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Updates - Number Of Systems With Start Mode Anomalies,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Updates - Systems By Last Update Time,,"| tstats `summariesonly` min(_time) as _time,latest(Updates.dest_should_update) as dest_should_update from datamodel=Updates.Updates where Updates.status=installed by Updates.dest,Updates.signature_id,Updates.vendor_product | `drop_dm_object_name(""Updates"")` | stats max(_time) as lastTime,latest(dest_should_update) as dest_should_update by dest | eval dayDiff=round((now()-lastTime)/86400,1) | sort + lastTime | `uitime(lastTime)`"
Updates - Top Systems Needing Updates,,"| tstats `summariesonly` latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product | `drop_dm_object_name(""Updates"")` | search status=available | stats count by dest | sort 10 - count"
Updates - Top Updates Needed,,"| tstats `summariesonly` latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product | `drop_dm_object_name(""Updates"")` | search status=available | stats count by signature_id | sort 10 - count"
Updates - Update Errors,,"| from datamodel:""Updates"".""Update_Errors"" | head 1000"
Updates - Update Service Start Mode Anomalies,,"| tstats `summariesonly` latest(Services.start_mode) as start_mode,latest(Services.status) as status from datamodel=Endpoint.Services where Services.tag=update by Services.dest,Services.service | `drop_dm_object_name(""Services"")` | search start_mode!=auto | sort 100 + start_mode | fields dest,service,start_mode,status"
Updates - Updates By Status,,"| tstats `summariesonly` latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product | `drop_dm_object_name(""Updates"")` | stats count by status | sort - count"
Utils - Top REST actions,,`rest_handler_transactions` | top action
Utils - Top REST actions by sourcetype,,"`rest_handler_transactions` | search duration>0.05 | stats sparkline(sum(duration)) as sparkline,min(duration),avg(duration),max(duration),count by handler,action | sort - count"
Utils - Top REST by duration,,`rest_handler_transactions` | stats sum(duration) by handler | sort 10 - sum(duration)
Utils - User Realnames - Lookup Gen,,"| rest splunk_server=local count=0 /services/authentication/users | rename title as user | eval _key=user | eval realname=if(isnull(realname) or realname="""", null(), realname) | table _key user realname | outputlookup user_realnames_lookup | stats count"
Vuln - Average Vulnerability Age,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Vuln - Average Vulns Per System,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Vuln - Delinquent Scanning,,"| tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.dest | `drop_dm_object_name(""Vulnerabilities"")` | `dayDiff(lastTime)` | eval dayDiff=round(dayDiff,1) | `uitime(firstTime)` | `uitime(lastTime)` | sort 100 + lastTime"
Vuln - Most Vulnerable Hosts,,"| tstats `summariesonly` dc(Vulnerabilities.signature) as vuln_count from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.severity,Vulnerabilities.dest | chart useother=`useother` first(vuln_count) over Vulnerabilities.dest by Vulnerabilities.severity | `drop_dm_object_name(""Vulnerabilities"")` | eval total=case(critical>0 AND high>0,critical+high,critical>0,critical,high>0,high,1==1,0) | eval subTotal=case(medium>0 AND low>0,medium+low,medium>0,medium,low>0,low,1==1,0) | eval subSubTotal=case(informational>0 AND unknown>0,informational+unknown,informational>0,informational,unknown>0,unknown,1==1,0) | sort 10 - total,subTotal,subSubTotal | fields - total,subTotal,subSubTotal"
Vuln - New Vulnerabilities,,"| `vuln_signature_reference(firstTime)` | `uitime(firstTime)` | sort 100 - firstTime | `makemv(cve)` | fields firstTime,signature,cve,vendor_product"
Vuln - Percentage Of Vulnerable Systems,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Vuln - Scan Activity Over Time,,"| `tstats` dc(Vulnerabilities.dest) from datamodel=Vulnerabilities.Vulnerabilities by _time span=1d | timechart minspan=1d dc(Vulnerabilities.dest) as ""dc(dest)"""
Vuln - Top Vulnerabilities,,"| tstats `summariesonly` dc(Vulnerabilities.dest) as dest_count from datamodel=Vulnerabilities.Vulnerabilities where * `cim_filter_vuln_severity(""Vulnerabilities"")` by Vulnerabilities.signature | `drop_dm_object_name(""Vulnerabilities"")` | sort 10 - dest_count"
Vuln - Total Vulnerabilities,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Vuln - Vulnerabilities By Age,,"| `vulnerability_tracker(lastTime)` | where firstTime!=lastTime | eval timeDiff=lastTime-firstTime | sort 100 - timeDiff,lastTime | eval ""Age (days)""=round(timeDiff/86400,1) | `uitime(firstTime)` | `uitime(lastTime)` | fields firstTime,lastTime,signature,dest,""Age (days)"""
Vuln - Vulnerabilities By Category,,"| tstats `summariesonly` dc(Vulnerabilities.signature) as vuln_count from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.category,Vulnerabilities.dest | `drop_dm_object_name(""Vulnerabilities"")` | stats sum(vuln_count) as count by category"
Vuln - Vulnerabilities By Severity,,"| tstats `summariesonly` dc(Vulnerabilities.signature) as vuln_count from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.severity,Vulnerabilities.dest | `drop_dm_object_name(""Vulnerabilities"")` | stats sum(vuln_count) as count by severity"
Vuln - Vulnerable System Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Web - Abnormally High Number of HTTP Method Events By Src - Rule,Alerts when a host has an abnormally high number of HTTP requests by http method.,"| tstats `summariesonly` count as web_event_count from datamodel=Web.Web by Web.src, Web.http_method | `drop_dm_object_name(""Web"")` | `mltk_apply_upper(""app:count_by_http_method_by_src_1d"", ""extreme"", ""web_event_count"")`"
Web - Destination Count,,"| makeresults | eval current_count=281, historical_count=281, delta=0"
Web - Errors - Swimlane,,"| tstats `summariesonly` count,values(Web.src) as src, values(Web.dest) as dest, values(Web.status) as status from datamodel=Web.Web where $constraints$ Web.status!=200 by _time span=$span$"
Web - Events Over Time By Action,,"| `tstats` count from datamodel=Web.Web by _time,Web.action span=10m | timechart minspan=10m useother=`useother` count by Web.action | `drop_dm_object_name(""Web"")`"
Web - Events Over Time By Content Type,,"| `tstats` count from datamodel=Web.Web by _time,Web.http_content_type span=10m | timechart minspan=10m useother=`useother` count by Web.http_content_type | `drop_dm_object_name(""Web"")`"
Web - Events Over Time By Method,,"| `tstats` count from datamodel=Web.Web by _time,Web.http_method span=10m | timechart minspan=10m useother=`useother` count by Web.http_method | `drop_dm_object_name(""Web"")`"
Web - Events Over Time By Status,,"| `tstats` count from datamodel=Web.Web by _time,Web.status span=10m | timechart minspan=10m useother=`useother` count by Web.status | `drop_dm_object_name(""Web"")`"
Web - Events Over Time By User Agent,,"| `tstats` count from datamodel=Web.Web by _time,Web.http_user_agent span=10m | timechart minspan=10m useother=`useother` count by Web.http_user_agent | `drop_dm_object_name(""Web"")`"
Web - HTTP Category Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Web - HTTP Category Details,,"| tstats `summariesonly` max(_time) as lastTime,dc(Web.src) as dc(src),dc(Web.dest) as dc(dest),count from datamodel=Web.Web by Web.category | `drop_dm_object_name(""Web"")` | join type=outer category [| tstats `summariesonly` count from datamodel=Web.Web where earliest=-24h@h latest=+0s by _time,Web.category span=`http_category_sparkline_span` | stats sparkline(sum(count),`http_category_sparkline_span`) as sparkline by Web.category | `drop_dm_object_name(""Web"")`] | `makemv(sparkline,"","")` | eventstats avg(count) as mean_count,stdev(count) as stdev | `get_stdev_index(count)` | `round(Z)` | `per_panel_filter(""ppf_http_category"",""category"")` | rename ppf_filter as filter | sort -filter,+count | `uitime(lastTime)` | table category,filter,sparkline,dc(src),dc(dest),count,Z,lastTime"
Web - HTTP Category Distribution,,"| tstats `summariesonly` dc(Web.src) as dc(src),count from datamodel=Web.Web by Web.category | eval category='Web.category' | `per_panel_filter(""ppf_http_category"",""category"")` | table category,count,dc(src)"
Web - HTTP Category Maximum Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Web - HTTP Category Mean Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Web - HTTP Category Minimum Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Web - HTTP Category Standard Deviation Count,,"| makeresults | eval current_count=0, historical_count=0, delta=0"
Web - Source Count,,"| makeresults | eval current_count=71, historical_count=163, delta=-92"
Web - Top Destinations,,"| tstats `summariesonly` dc(Web.src) as dc(src),dc(Web.url) as dc(url),count,sum(Web.bytes) as bytes from datamodel=Web.Web by Web.dest | `drop_dm_object_name(""Web"")` | sort 100 - bytes"
Web - Top Sources,,"| tstats `summariesonly` dc(Web.dest) as dc(dest),dc(Web.url) as dc(url),count,sum(Web.bytes) as bytes from datamodel=Web.Web by Web.src | `drop_dm_object_name(""Web"")` | sort 100 - bytes"
Web - Total Events By Action,,"| tstats `summariesonly` count from datamodel=Web.Web by Web.action | `drop_dm_object_name(""Web"")` | sort 10 - count"
Web - Total Events By Content Type,,"| tstats `summariesonly` count from datamodel=Web.Web by Web.http_content_type | `drop_dm_object_name(""Web"")` | sort 10 - count"
Web - Total Events By Method,,"| tstats `summariesonly` count from datamodel=Web.Web by Web.http_method | `drop_dm_object_name(""Web"")` | sort 10 - count"
Web - Total Events By Status,,"| tstats `summariesonly` count from datamodel=Web.Web by Web.status | `drop_dm_object_name(""Web"")` | sort 10 - count"
Web - Total Events By User Agent,,"| tstats `summariesonly` count from datamodel=Web.Web by Web.http_user_agent | `drop_dm_object_name(""Web"")` | sort 10 - count"
Web - URL Count,,"| makeresults | eval current_count=1348, historical_count=1643, delta=-295"
Web - URL Length Anomalies,,"| tstats `summariesonly` max(_time) as lastTime,latest(Web.url_length) as length,dc(Web.src) as dc(src),dc(Web.dest) as dc(dest),count from datamodel=Web.Web where Web.url!=""unknown"" [| from inputlookup:url_length_tracker | search Z=2 | fields search] by Web.url | `drop_dm_object_name(""Web"")` | appendcols[| inputlookup append=T start=0 max=1 url_length_tracker | fields mean_length,stdev] | filldown mean_length,stdev | `get_stdev_index(length)` | `round(Z)`| `per_panel_filter(""ppf_url_length"",""url"")` | rename ppf_filter as filter | sort - filter,Z | `uitime(lastTime)` | table url,filter,length,dc(src),dc(dest),count,Z,lastTime"
Web - URL Length Anomalies Over Time,,"| tstats `summariesonly` latest(Web.http_method) as http_method,count from datamodel=Web.Web where Web.url!=""unknown"" [| from inputlookup:url_length_tracker | search Z=2 | fields search] by _time,Web.url span=10m | `drop_dm_object_name(""Web"")` | `per_panel_filter(""ppf_url_length"",""url"")` | timechart minspan=10m sum(count) as count by http_method"
Web - URL Length Over Time,,"| `tstats` min(Web.url_length),avg(Web.url_length),max(Web.url_length) from datamodel=Web.Web by _time span=10m | timechart minspan=10m min(Web.url_length) as min(length),avg(Web.url_length) as avg(length),max(Web.url_length) as max(length)"
Web - URL Length Standard Deviation,,"| makeresults | eval current_count=213.781, historical_count=167.009, delta=46.772"
Web - URL Maximum Length,,"| makeresults | eval current_count=1989, historical_count=1989, delta=0"
Web - URL Mean Length,,"| makeresults | eval current_count=120.117, historical_count=122.539, delta=-2.422"
Web - URL Minimum Length,,"| makeresults | eval current_count=1, historical_count=1, delta=0"
Web - User Agent Count,,"| makeresults | eval current_count=38, historical_count=40, delta=-2"
Web - User Agent Details,,"| tstats `summariesonly` max(_time) as lastTime,dc(Web.src) as dc(src),dc(Web.dest) as dc(dest),latest(Web.http_user_agent_length) as length,count from datamodel=Web.Web where Web.http_user_agent!=unknown by Web.http_user_agent | `drop_dm_object_name(""Web"")` | join type=outer http_user_agent [| tstats `summariesonly` count from datamodel=Web.Web where earliest=-24h@h latest=+0s Web.http_user_agent!=unknown by _time,Web.http_user_agent span=`http_user_agent_sparkline_span` | stats sparkline(sum(count),`http_user_agent_sparkline_span`) as sparkline by Web.http_user_agent | `drop_dm_object_name(""Web"")`] | `makemv(sparkline,"","")` | appendcols[| inputlookup append=T start=0 max=1 user_agent_length_tracker | fields mean_length,stdev] | filldown mean_length,stdev | `get_stdev_index(length)` | `round(Z)` | `per_panel_filter(""ppf_http_user_agent"",""http_user_agent"")` | rename ppf_filter as filter | sort - filter,Z | `uitime(lastTime)` | table http_user_agent,filter,sparkline,length,dc(src),dc(dest),count,Z,lastTime"
Web - User Agent Distribution,,"| tstats `summariesonly` latest(Web.http_user_agent_length) as length,count from datamodel=Web.Web where Web.http_user_agent!=unknown by Web.http_user_agent | eval http_user_agent='Web.http_user_agent' | `per_panel_filter(""ppf_http_user_agent"",""http_user_agent"")` | table http_user_agent,length,count"
Web - User Agent Length Standard Deviation,,"| makeresults | eval current_count=43, historical_count=35, delta=8"
Web - User Agent Maximum Length,,"| makeresults | eval current_count=211, historical_count=211, delta=0"
Web - User Agent Mean Length,,"| makeresults | eval current_count=94, historical_count=101, delta=-7"
Web - User Agent Minimum Length,,"| tstats `summariesonly` min(Web.http_user_agent_length) as current_length from datamodel=Web.Web where earliest=-24h@h latest=+0s Web.http_user_agent!=unknown | appendcols [| tstats `summariesonly` min(Web.http_user_agent_length) as historical_length from datamodel=Web.Web where earliest=-48h@h latest=-24h@h Web.http_user_agent!=unknown] | `get_delta(current_length,historical_length)`"
Web - Web Event Count By Src By HTTP Method Per 1d - Model Gen,,"| tstats `summariesonly` count as web_event_count from datamodel=Web.Web by Web.src, Web.http_method, _time span=24h | `drop_dm_object_name(""Web"")` | where match(http_method, ""^[A-Za-z]+$"") | fit DensityFunction web_event_count by http_method partial_fit=true dist=norm into app:count_by_http_method_by_src_1d"
Whois - New Domain Activity,,"| tstats `summariesonly` max(_time) as _time,count from datamodel=Web.Web by Web.dest | `drop_dm_object_name(""Web"")` | `get_whois` | search (created=* NOT created=""unknown"") | eval ""Age (days)""=ceil((now()-created)/86400) | where 'Age (days)'<=30 | eval domain=if(isnull(domain), dest, domain) | `swap_resolved_domain(domain)` | `per_panel_filter(""ppf_new_domains"",""domain"")` | rename ppf_filter as filter | eval resolved_domain=if(isnull(resolved_domain) OR resolved_domain==""unknown"",null(),resolved_domain) | sort - filter,_time | `uitime(created)` | fields _time,dest,resolved_domain,filter,created,""Age (days)"",count"
Whois - New Domain Activity By Age,,"| tstats `summariesonly` count from datamodel=Web.Web by Web.dest | `drop_dm_object_name(""Web"")` | `get_whois` | search (created=* NOT created=""unknown"") | eval age=ceil((now()-created)/86400) | where age<=30 | eval domain=if(isnull(domain), dest, domain) | `swap_resolved_domain(domain)` | `per_panel_filter(""ppf_new_domains"",""domain"")` | stats sum(count) as count by age | eval ""Age (days)""=age | table ""Age (days)"",count"
Whois - New Domain Activity By TLD,,"| tstats `summariesonly` count from datamodel=Web.Web by Web.dest | `drop_dm_object_name(""Web"")` | `get_whois` | search (created=* NOT created=""unknown"") | eval age=ceil((now()-created)/86400) | where age<=30 | eval domain=if(isnull(domain), dest, domain) | `swap_resolved_domain(domain)` | `per_panel_filter(""ppf_new_domains"",""domain"")` | `get_tld(domain)` | stats sum(count) as count by tld | sort 10 - count"
Whois - Registration Details,,"| from datamodel:""Domain_Analysis"".""All_Domains"" | head 1000 | eval orig_domain=domain,age=ceil(((now() - created) / 86400)) | `swap_resolved_domain(domain)` | `per_panel_filter(""ppf_new_domains"",""domain"")` | rename ppf_filter as filter | eval domain=orig_domain | eval resolved_domain=if(isnull(resolved_domain) OR resolved_domain==""unknown"",null(),resolved_domain) | sort - filter,_time | `uitime(created)` | `uitime(expires)` | table _time domain resolved_domain filter created age expires nameservers registrant registrar"
