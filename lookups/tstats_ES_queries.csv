title,description,search
"Access - Access App Tracker - Lookup Gen","Maintains a list of Authentication app values and the first and last time they have been seen","
 tstats min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Authentication"".""Authentication"" where ""Authentication.app""!=""unknown"" by ""Authentication.app"" 
 rename ""Authentication.app"" as ""app"" 
 inputlookup append=T ""access_app_tracker"" 
 stats min(""firstTime"") as ""firstTime"",max(""lastTime"") as ""lastTime"" by ""app"" 
 outputlookup override_if_empty=false ""access_app_tracker"" 
 stats count"
"Access - Access Over Time",,"
 tstasts count from datamodel=Authentication.Authentication by _time span=10m 
 timechart minspan=10m count"
"Access - Access Over Time By Action",,"
 tstasts count from datamodel=Authentication.Authentication by _time,Authentication.action span=10m 
 timechart minspan=10m useother=`useother` count by Authentication.action 
 `drop_dm_object_name(""Authentication"")`"
"Access - Access Over Time By App",,"
 tstasts count from datamodel=Authentication.Authentication by _time,Authentication.app span=10m 
 timechart minspan=10m useother=`useother` count by Authentication.app"
"Access - Account Usage For Expired Identities",,"
 tstats max(_time) as _time,values(Authentication.dest) as dest from datamodel=Authentication.Authentication by Authentication.user 
 `drop_dm_object_name(""Authentication"")` 
 `get_identity4events(user)` 
 where isnotnull(user_endDate) 
 where _time>user_endDate 
 `uitime(user_endDate,""%m/%d/%Y %H:%M:%S"")` 
 fields _time,user,user_first,user_last,user_endDate,dest"
"Access - Authentication Failures By Source - Model Gen",,"
 tstats count as failure from datamodel=Authentication.Authentication where Authentication.action=""failure"" by Authentication.src,_time span=1h 
 fit DensityFunction failure partial_fit=true dist=norm into app:failures_by_src_count_1h"
"Access - Authentication Failures By Source Per Day - Model Gen",,"
 tstats count as failure from datamodel=Authentication.Authentication where Authentication.action=""failure"" by Authentication.src,_time span=1d 
 fit DensityFunction failure partial_fit=true dist=norm into app:failures_by_src_count_1d"
"Access - Authentication Tracker - Lookup Gen","Maintains a list of users that have authenticated to each system and the first, second to last, and last time they have been seen","
 tstats count from datamodel=Authentication.Authentication where Authentication.action=success Authentication.dest!=unknown Authentication.user!=unknown by _time,Authentication.dest,Authentication.user span=1s 
 `drop_dm_object_name(""Authentication"")` 
 stats min(_time) as firstTime,values(_time) as second2lastTime,max(_time) as lastTime by dest,user 
 eval dest=lower(dest),user=lower(user),_key=sha1(dest.""
"".user) 
 lookup access_tracker _key OUTPUTNEW firstTime as lookup_firstTime, second2lastTime as lookup_second2lastTime, lastTime as lookup_lastTime 
 eval firstTime=min(firstTime, lookup_firstTime),lastTime=max(lastTime, lookup_lastTime), second2lastTime=mvdedup(mvappend(second2lastTime,NULL,lookup_second2lastTime)), lastTime_vals=mvdedup(mvappend(lastTime,NULL,lookup_lastTime)) 
 eval `get_second2lastTime_meval(second2lastTime,lastTime_vals,lastTime)` 
 eventstats min(firstTime) as firstTime_user,max(lastTime) as lastTime_user by user  
 fields - lastTime_vals, lookup_firstTime, lookup_lastTime, lookup_second2lastTime 
 outputlookup append=T key_field=_key access_tracker 
 stats count"
"Access - Authentication Volume Per Day - Model Gen",,"
 tstats count as current_count from datamodel=Authentication.Authentication by _time span=1d 
 fit DensityFunction current_count partial_fit=true dist=norm into app:authentication_count_1d"
"Access - Brute Force Access Behavior Detected Over 1d - Rule","Detects an excessive number of failed login attempts, along with a successful attempt, over a one day period (this could indicate a successful brute force attack)","
 tstats values(Authentication.app) as app,count from datamodel=Authentication.Authentication by Authentication.action,Authentication.src 
 `drop_dm_object_name(""Authentication"")` 
 eval success=if(action=""success"",count,0),failure=if(action=""failure"",count,0) 
 stats values(app) as app,sum(failure) as failure,sum(success) as success by src 
 where success > 0 
 `mltk_apply_upper(""app:failures_by_src_count_1d"", ""medium"", ""failure"")`"
"Access - Concurrent App Accesses - Rule","Alerts on concurrent access attempts to an app from different hosts. These are good indicators of shared passwords and potential misuse.","
 tstats count from datamodel=Authentication.Authentication by _time,Authentication.app,Authentication.src,Authentication.user span=1s 
 `drop_dm_object_name(""Authentication"")` 
 eventstats dc(src) as src_count by app,user 
 search src_count>1 
 sort 0 + _time 
 streamstats current=t window=2 earliest(_time) as previous_time,earliest(src) as previous_src by app,user 
 where (src!=previous_src) 
 eval time_diff=abs(_time-previous_time) 
 where time_diff<300"
"Access - Default Account Usage Over Time",,"
 tstasts count from datamodel=Authentication.Authentication where nodename=Authentication.Default_Authentication Authentication.action=success by _time span=1h 
 timechart minspan=1h count"
"Access - Default Account Usage Over Time By App",,"
 tstasts count from datamodel=Authentication.Authentication where nodename=Authentication.Default_Authentication Authentication.action=success by _time,Authentication.app span=1h 
 timechart minspan=1h count by Authentication.app 
 `drop_dm_object_name(""Authentication"")`"
"Access - Default Accounts In Use",,"
 tstats max(_time) as _time,values(Authentication.user_category) as user_category,dc(Authentication.dest) as dc(dest) from datamodel=Authentication.Authentication where Authentication.user_category=default by Authentication.user 
 `drop_dm_object_name(""Authentication"")` 
 sort 100 - _time 
 fields _time,user,user_category,dc(dest)"
"Access - Geographically Improbable Access - Summary Gen",,"
 tstasts min(_time),earliest(Authentication.app) from datamodel=Authentication.Authentication where Authentication.action=""success"" by Authentication.src,Authentication.user 
 eval psrsvd_ct_src_app='psrsvd_ct_Authentication.app',psrsvd_et_src_app='psrsvd_et_Authentication.app',psrsvd_ct_src_time='psrsvd_ct__time',psrsvd_nc_src_time='psrsvd_nc__time',psrsvd_nn_src_time='psrsvd_nn__time',psrsvd_vt_src_time='psrsvd_vt__time',src_time='_time',src_app='Authentication.app',user='Authentication.user',src='Authentication.src' 
 lookup asset_lookup_by_str asset as ""src"" OUTPUTNEW lat as ""src_lat"",long as ""src_long"",city as ""src_city"",country as ""src_country"" 
 lookup asset_lookup_by_cidr asset as ""src"" OUTPUTNEW lat as ""src_lat"",long as ""src_long"",city as ""src_city"",country as ""src_country"" 
 iplocation src 
 search (src_lat=* src_long=*) OR (lat=* lon=*) 
 eval src_lat=if(isnotnull(src_lat),src_lat,lat),src_long=if(isnotnull(src_long),src_long,lon),src_city=case(isnotnull(src_city),src_city,isnotnull(City),City,1=1,""unknown""),src_country=case(isnotnull(src_country),src_country,isnotnull(Country),Country,1=1,""unknown"") 
 stats earliest(src_app) as src_app,min(src_time) as src_time by src,src_lat,src_long,src_city,src_country,user 
 eval key=src.""@@"".src_time.""@@"".src_app.""@@"".src_lat.""@@"".src_long.""@@"".src_city.""@@"".src_country 
 eventstats dc(key) as key_count,values(key) as key by user 
 search key_count>1 
 stats first(src_app) as src_app,first(src_time) as src_time,first(src_lat) as src_lat,first(src_long) as src_long,first(src_city) as src_city,first(src_country) as src_country by src,key,user 
 rex field=key ""^(?<dest>.+?)@@(?<dest_time>.+?)@@(?<dest_app>.+)@@(?<dest_lat>.+)@@(?<dest_long>.+)@@(?<dest_city>.+)@@(?<dest_country>.+)"" 
 where src!=dest 
 eval key=mvsort(mvappend(src.""->"".dest, NULL, dest.""->"".src)),units=""m"" 
 dedup key, user 
 `globedistance(src_lat,src_long,dest_lat,dest_long,units)` 
 eval speed=distance/(abs(src_time-dest_time+1)/3600) 
 where speed>=500 
 fields user,src_time,src_app,src,src_lat,src_long,src_city,src_country,dest_time,dest_app,dest,dest_lat,dest_long,dest_city,dest_country,distance,speed 
 eval _time=now()"
"Access - High or Critical Priority Individual Logging into Infected Machine - Rule","Detects users with a high or critical priority logging into a malware infected machine","
 tstats values(Authentication.user) as ""user"" from datamodel=Authentication.Authentication where earliest=-70m@m latest=+0s nodename=Authentication.Successful_Authentication (""Authentication.user_priority""=""high"" OR ""Authentication.user_priority""=""critical"") by ""Authentication.dest"" 
 rename ""Authentication.dest"" as ""dest"" 
 eval cs_key='dest' 
 join type=inner cs_key [
 tstats summariesonly=false values(Malware_Attacks.signature) as ""signature"" from datamodel=Malware.Malware_Attacks where earliest=-1450m@m latest=+0s nodename=Malware_Attacks.Allowed_Malware  by ""Malware_Attacks.dest"" 
 rename ""Malware_Attacks.dest"" as ""dest"" 
 eval cs_key='dest']"
"Access - Privileged Account Usage Over Time",,"
 tstasts count from datamodel=Authentication.Authentication where nodename=Authentication.Privileged_Authentication by _time span=1h 
 timechart span=1h count"
"Access - Privileged Accounts In Use",,"
 tstats values(Authentication.user_category) as user_category,dc(Authentication.dest) as dest_count,max(_time) as lastTime from datamodel=Authentication.Authentication where Authentication.user_category=privileged by Authentication.user 
 `drop_dm_object_name(""Authentication"")` 
 sort 100 - lastTime 
 `uitime(lastTime)`"
"Access - Short-lived Account Detected - Rule","Detects when a account or credential is created and then removed a short time later. This may be an indication of malicious activities.","
 tstats count from datamodel=Change.All_Changes where nodename=""All_Changes.Account_Management"" (All_Changes.action=""created"" OR All_Changes.action=""deleted"") by _time,All_Changes.dest,All_Changes.user span=1s 
 `drop_dm_object_name(""All_Changes"")` 
 streamstats range(_time) as delta,sum(count) as count by user,dest window=2 global=f 
 where count>1 AND delta<`useraccount_minimal_lifetime` 
 `uptime2string(delta,timestr)` 
 table user, dest, delta, timestr"
"Access - Top Access By Destination",,"
 tstats count from datamodel=Authentication.Authentication by _time,Authentication.dest span=1h 
 `drop_dm_object_name(""Authentication"")` 
 stats sparkline(sum(count),1h) as sparkline,sum(count) as count by dest 
 sort - count"
"Access - Top Access By Source",,"
 tstats count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h 
 `drop_dm_object_name(""Authentication"")` 
 stats sparkline(sum(count),1h) as sparkline,sum(count) as count by src 
 sort - count"
"Access - Unique Access By App Count",,"
 tstats values(Authentication.app) as app,count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h 
 `drop_dm_object_name(""Authentication"")` 
 stats sparkline(sum(count),1h) as sparkline,dc(app) as app_count by src 
 sort - app_count"
"Access - Unique Access By Destination Count",,"
 tstats values(Authentication.dest) as dest,count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h 
 `drop_dm_object_name(""Authentication"")` 
 stats sparkline(sum(count),1h) as sparkline,dc(dest) as dest_count by src 
 sort - dest_count"
"Access - Unique Access By User Count",,"
 tstats values(Authentication.user) as user,count from datamodel=Authentication.Authentication by _time,Authentication.src span=1h 
 `drop_dm_object_name(""Authentication"")` 
 stats sparkline(sum(count),1h) as sparkline,dc(user) as user_count by src 
 sort - user_count"
"App State - Ports By System Count",,"
 tstats dc(Ports.dest) as dest_count from datamodel=Endpoint.Ports by Ports.transport,Ports.dest_port 
 `drop_dm_object_name(""Ports"")` 
 sort 100 - dest_count"
"App State - Processes By System Count",,"
 tstats max(_time) as _time from datamodel=Endpoint.Processes by Processes.dest,Processes.process_name 
 `drop_dm_object_name(""Processes"")` 
 eventstats max(_time) as lastReportTime by dest 
 where _time==lastReportTime 
 stats dc(dest) as dest_count by process_name 
 sort 100 - dest_count"
"App State - Services By System Count",,"
 tstats dc(Services.dest) as dest_count from datamodel=Endpoint.Services by Services.service 
 `drop_dm_object_name(""Services"")` 
 sort 100 - dest_count"
"App State - Systems By Port Count",,"
 tstats dc(Ports.transport_dest_port) as port_count from datamodel=Endpoint.Ports by Ports.dest 
 `drop_dm_object_name(""Ports"")` 
 sort 10 - port_count"
"App State - Systems By Process Count",,"
 tstats max(_time) as _time from datamodel=Endpoint.Processes by Processes.dest,Processes.process 
 `drop_dm_object_name(""Processes"")` 
 eventstats max(_time) as lastReportTime by dest 
 where _time==lastReportTime 
 stats dc(process) as process_count by dest 
 sort 10 - process_count"
"App State - Systems By Service Count",,"
 tstats dc(Services.service) as service_count from datamodel=Endpoint.Services by Services.dest 
 `drop_dm_object_name(""Services"")` 
 sort 10 - service_count"
"Audit - ES View Activity Over Time",,"
 tstasts count from datamodel=Splunk_Audit.View_Activity where `es_context_only(""View_Activity"")` by _time,View_Activity.view span=1h 
 timechart span=1h useother=`useother` count by View_Activity.view 
 `drop_dm_object_name(""View_Activity"")`"
"Audit - Searches Over Time By Type",,"
 tstasts count from datamodel=Splunk_Audit.Search_Activity where (Search_Activity.info=""granted"" OR (Search_Activity.info=""completed"" Search_Activity.search_type=""subsearch"")) by _time,Search_Activity.search_type span=10m 
 timechart minspan=10m count by Search_Activity.search_type"
"Audit - Searches Over Time By User",,"
 tstats count from datamodel=Splunk_Audit.Search_Activity where (Search_Activity.info=""granted"" OR (Search_Activity.info=""completed"" Search_Activity.search_type=""subsearch"")) by Search_Activity.user 
 rename Search_Activity.* as * 
 sort 10 - count"
"Audit - Splunk Service Start Mode Anomalies",,"
 tstats max(_time) as _time,latest(Services.start_mode) as start_mode,latest(Services.status) as status from datamodel=Endpoint.Services where (Services.service=splunkd OR Services.service=splunk) by Services.dest 
 `drop_dm_object_name(""Services"")` 
 search start_mode!=auto 
 sort 100 + start_mode 
 fields _time,dest,start_mode,status"
"Audit - Splunkd Process Utilization",,"
 tstats avg(Processes.cpu_load_percent) as avg_cpu_load,avg(Processes.mem_used) as avg_mem_used from datamodel=Endpoint.Processes where Processes.process=*splunkd* by Processes.dest 
 `drop_dm_object_name(""Processes"")` 
 eval ""avg_cpu_load (%)""=floor(avg_cpu_load) 
 eval ""avg_mem_used (MB)""=floor(avg_mem_used/1048576) 
 fields - avg_cpu_load,avg_mem_used 
 sort 100 - ""avg_cpu_load (%)"""
"Audit - Top Searches By Run Time",,"
 tstats first(Search_Activity.search_alias) as search_alias,first(Search_Activity.search) as search,first(Search_Activity.total_run_time) as run_time,first(Search_Activity.user) as user from datamodel=Splunk_Audit.Search_Activity by Search_Activity.search_id 
 stats first(search_alias) as ""search alias"",min(run_time),avg(run_time),max(run_time),values(user) as user,count by search 
 eval ""min(run_time)""=round('min(run_time)', 1),""avg(run_time)""=round('avg(run_time)', 1),""max(run_time)""=round('max(run_time)', 1) 
 sort 500 - ""avg(run_time)"""
"Change - Abnormally High Number of Endpoint Changes By User - Rule","Detects an abnormally high number of endpoint changes by user account, as they relate to restarts, audits, filesystem, user, and registry modifications.","
 tstasts count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by Filesystem.user 
 eval change_type=""filesystem"",user='Filesystem.user' 
 tstasts append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by Registry.user 
 eval change_type=if(isnull(change_type),""registry"",change_type),user=if(isnull(user),'Registry.user',user) 
 tstasts append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by All_Changes.change_type,All_Changes.user 
 eval change_type=if(isnull(change_type),'All_Changes.change_type',change_type),user=if(isnull(user),'All_Changes.user',user) 
 stats count as change_count by change_type,user  
 `mltk_apply_upper(""app:change_count_by_user_by_change_type_1d"", ""extreme"", ""change_count"")`"
"Change - Account Lockouts",,"
 tstats count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.src,All_Changes.Account_Management.src_nt_domain,All_Changes.user 
 sort 100 - count 
 `drop_dm_object_name(""All_Changes"")` 
`drop_dm_object_name(""Account_Management"")`"
"Change - Account Management By Source User",,"
 tstats count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management by All_Changes.Account_Management.src_user
 `drop_dm_object_name(""All_Changes"")` 
 `drop_dm_object_name(""Account_Management"")` 
 sort 10 - count"
"Change - Account Management Over Time By Action",,"
 tstasts count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management by _time,All_Changes.action span=10m 
 timechart minspan=10m useother=`useother` count by All_Changes.action 
 `drop_dm_object_name(""All_Changes"")`"
"Change - Endpoint Changes By Action",,"
 tstasts count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by Filesystem.action 
 eval action='Filesystem.action' 
 tstasts append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by Registry.action 
 eval action=if(isnull(action),'Registry.action',action) 
 tstasts append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by All_Changes.action 
 eval action=if(isnull(action),'All_Changes.action',action) 
 timechart minspan=10m useother=`useother` count by action"
"Change - Endpoint Changes By System",,"
 tstasts count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by _time,Filesystem.dest 
 eval object_category=""file"",dest='Filesystem.dest' 
 tstasts append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by _time,Registry.dest 
 eval object_category=if(isnull(object_category),""registry"",object_category),dest=if(isnull(dest),'Registry.dest',dest) 
 tstasts append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by _time,All_Changes.object_category,All_Changes.dest 
 eval object_category=if(isnull(object_category),'All_Changes.object_category',object_category),dest=if(isnull(dest),'All_Changes.dest',dest) 
 stats count by _time,object_category,dest 
 stats sparkline(sum(count)) as sparkline,values(object_category) as object_category,sum(count) as count by dest 
 sort 100 - count"
"Change - Endpoint Changes By Type",,"
 tstasts count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" 
 eval object_category=""file"" 
 tstasts append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" 
 eval object_category=if(isnull(object_category),""registry"",object_category) 
 tstasts append=T count from datamodel=Change.All_Changes where nodename=""All_Changes.Endpoint_Changes"" by All_Changes.object_category 
 eval object_category=if(isnull(object_category),'All_Changes.object_category',object_category) 
 stats count by object_category 
 sort 10 - count"
"Change - Network Changes By Action",,"
 tstasts count from datamodel=Change.All_Changes where nodename=All_Changes.Network_Changes by _time,All_Changes.action span=10m 
 timechart minspan=10m useother=`useother` count by All_Changes.action 
 `drop_dm_object_name(""All_Changes"")`"
"Change - Network Changes By Device",,"
 tstats count from datamodel=Change.All_Changes where nodename=All_Changes.Network_Changes by All_Changes.dvc 
 `drop_dm_object_name(""All_Changes"")`"
"Change - Top Account Management Events",,"
 tstats count from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management by _time,All_Changes.action span=1h 
 `drop_dm_object_name(""All_Changes"")` 
 stats sparkline(sum(count),1h) as sparkline,sum(count) as count by action 
 sort 10 - count"
"Change - Total Change Count By User By Change Type Per Day - Model Gen",,"
 tstasts count from datamodel=Endpoint.Filesystem where Filesystem.tag=""change"" by _time,Filesystem.user span=24h 
 eval change_type=""filesystem"",user='Filesystem.user' 
 tstasts append=T count from datamodel=Endpoint.Registry where Registry.tag=""change"" by _time,Registry.user span=24h 
 eval change_type=if(isnull(change_type),""registry"",change_type),user=if(isnull(user),'Registry.user',user) 
 tstasts append=T count from datamodel=Change.All_Changes by _time,All_Changes.change_type,All_Changes.user span=24h 
 eval change_type=if(isnull(change_type),'All_Changes.change_type',change_type),user=if(isnull(user),'All_Changes.user',user) 
 stats count as change_count by _time,change_type,user 
 fit DensityFunction change_count by change_type partial_fit=true dist=norm into app:change_count_by_user_by_change_type_1d"
"CIM - Vendor Product Tracker - Lookup Gen","Maintains a list of vendor_product values and the first and list time they have been seen","
 tstats prestats=true min(_time),max(_time) from datamodel=Malware.Malware_Attacks by Malware_Attacks.vendor_product 
 `drop_dm_object_name(""Malware_Attacks"")` 
 eval model=""Malware"" 
 tstats prestats=true append=true min(_time),max(_time) from datamodel=Network_Traffic.All_Traffic by All_Traffic.vendor_product 
 `drop_dm_object_name(""All_Traffic"")` 
 eval model=if(isnull(model),""Network_Traffic"",model) 
 tstats prestats=true append=true min(_time),max(_time) from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.vendor_product 
 `drop_dm_object_name(""IDS_Attacks"")` 
 eval model=if(isnull(model),""Intrusion_Detection"",model) 
 tstats prestats=true append=true min(_time),max(_time) from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.vendor_product 
 `drop_dm_object_name(""Vulnerabilities"")` 
 eval model=if(isnull(model),""Vulnerabilities"",model) 
 stats min(_time) as firstTime,max(_time) as lastTime by vendor_product,model 
 inputlookup append=true cim_vendor_product_tracker 
 stats min(firstTime) as firstTime,max(lastTime) as lastTime by vendor_product,model 
 outputlookup override_if_empty=false cim_vendor_product_tracker 
 stats count"
"Endpoint - Emails By Destination Count - Model Gen",,"
 tstats summariesonly=false dc(All_Email.dest) as dest_count from datamodel=Email.All_Email where NOT All_Email.src_category=""email_servers"" by ""All_Email.src"",_time span=1h 
 fit DensityFunction dest_count partial_fit=true dist=norm into app:destinations_by_src_1h"
"Endpoint - Emails By Source - Model Gen",,"
 tstats summariesonly=false sum(All_Email.recipient_count) as recipient_count from datamodel=Email.All_Email where NOT All_Email.src_category=""email_servers"" by ""All_Email.src"",_time span=1h 
 fit DensityFunction recipient_count partial_fit=true dist=norm into app:recipients_by_src_1h"
"Endpoint - High Number Of Infected Hosts - Rule","Alerts when a high total number of infected hosts is discovered.","
 tstats estdc(""Malware_Attacks.dest"") as ""infected_hosts"" from datamodel=""Malware"".""Malware_Attacks""    
 where 'infected_hosts'>100 
 eval const_dedup_id=""const_dedup_id"""
"Endpoint - Host Sending Excessive Email - Rule","Alerts when an host not designated as an e-mail server sends excessive e-mail to one or more target hosts.","
 tstats sum(All_Email.recipient_count) as recipient_count,dc(All_Email.dest) as dest_count from datamodel=Email.All_Email where NOT All_Email.src_category=""email_servers"" by ""All_Email.src"",_time span=1h 
 `drop_dm_object_name(""All_Email"")` 
 apply app:recipients_by_src_1h [
`get_qualitative_upper_threshold(high)`] 
 apply app:destinations_by_src_1h [
`get_qualitative_upper_threshold(high)`] 
 search ""IsOutlier(recipient_count)""=1 OR ""IsOutlier(dest_count)""=1"
"Endpoint - Host With Excessive Number Of Listening Ports - Rule","Alerts when host has a high number of listening services. This may be an indication that the device is running services that are not necessary (such as a default installation of a server) or is not running a firewall.","
 tstats dc(""Ports.transport_dest_port"") as ""port_count"" from datamodel=""Endpoint"".""Ports""  by ""Ports.dest"" 
 rename ""Ports.dest"" as ""dest"" 
 where 'port_count'>20"
"Endpoint - Host With Excessive Number Of Processes - Rule","Alerts when host has a high number of processes. This may be due to an infection or a runaway process.","
 tstats max(_time) as _time from datamodel=Endpoint.Processes by Processes.dest,Processes.process 
 `drop_dm_object_name(""Processes"")` 
 eventstats max(_time) as lastReportTime by dest 
 where _time==lastReportTime 
 stats dc(process) as process_count by dest 
 search process_count>200"
"Endpoint - Host With Excessive Number Of Services - Rule","Alerts when host has a high number of services. This may be an indication that the device is running services that are not necessary (such as a default installation of a server).","
 tstats dc(""Services.service"") as ""service_count"" from datamodel=""Endpoint"".""Services""  by ""Services.dest"" 
 rename ""Services.dest"" as ""dest"" 
 where 'service_count'>100"
"Endpoint - Host With Multiple Infections - Rule","Alerts when a host with multiple infections is discovered.","
 tstats dc(""Malware_Attacks.signature"") as ""infection_count"" from datamodel=""Malware"".""Malware_Attacks""   by ""Malware_Attacks.dest"" 
 rename ""Malware_Attacks.dest"" as ""dest"" 
 where 'infection_count'>1"
"Endpoint - Listening Ports Tracker - Lookup Gen","Maintains a list of all port and protocol combinations listening on each system and the first and last time they were seen","
 tstats min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Endpoint"".""Ports"" by ""Ports.dest"",""Ports.transport"",""Ports.dest_port"" 
 rename ""Ports.dest"" as ""dest"",""Ports.transport"" as ""transport"",""Ports.dest_port"" as ""dest_port"" 
 eval _key=sha1('dest'.'transport'.'dest_port') 
 lookup ""listeningports_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" 
 eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') 
 fields - ""lookup_firstTime"",""lookup_lastTime"" 
 outputlookup append=T key_field=_key ""listeningports_tracker"" 
 stats count"
"Endpoint - Local Processes Tracker - Lookup Gen","Maintains a list of all processes on each system and the first and last time they were seen","
 tstats min(_time) as firstTime,max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest,Processes.process 
 `drop_dm_object_name(""Processes"")` 
 rex field=process ""^\s*(?<process>[^\s]+)"" 
 eval _key=sha1(dest.""
"".process) 
 lookup localprocesses_tracker _key OUTPUTNEW firstTime as lookup_firstTime, lastTime as lookup_lastTime 
 eval firstTime=min(firstTime, lookup_firstTime),lastTime=max(lastTime, lookup_lastTime) 
 fields - lookup_firstTime, lookup_lastTime 
 outputlookup append=T key_field=_key localprocesses_tracker 
 stats count"
"Endpoint - Malware Daily Count - Model Gen",,"
 tstats dc(Malware_Attacks.signature) as infection_count from datamodel=Malware.Malware_Attacks where earliest=-2d@d latest=-1d@d Malware_Attacks.action=allowed by Malware_Attacks.dest,_time span=1d 
 stats sum(infection_count) as current_count by _time 
 fit DensityFunction current_count partial_fit=true dist=norm into app:malware_infection_count_by_1d"
"Endpoint - Malware Tracker - Lookup Gen","Maintains a list of all detections (regardless of status) for each system and the first and last time they were seen","
 tstats min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Malware"".""Malware_Attacks"" by ""Malware_Attacks.dest"",""Malware_Attacks.signature"" 
 rename ""Malware_Attacks.dest"" as ""dest"",""Malware_Attacks.signature"" as ""signature"" 
 eval _key=sha1('dest'.'signature') 
 lookup ""malware_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" 
 eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') 
 fields - ""lookup_firstTime"",""lookup_lastTime"" 
 outputlookup append=T key_field=_key ""malware_tracker"" 
 stats count"
"Endpoint - Old Malware Infection - Rule","Alerts when a host with an old infection is discovered (likely a re-infection).","
 tstats max(_time) as lastTime from datamodel=Malware.Malware_Attacks by Malware_Attacks.signature,Malware_Attacks.dest 
 `drop_dm_object_name(""Malware_Attacks"")` 
 lookup local=true malware_tracker dest,signature OUTPUT firstTime 
 eval dayDiff=round((lastTime-firstTime)/86400,1) 
 search dayDiff>30"
"Endpoint - Outbreak Observed - Rule","Alerts when a potential outbreak is observed based on newly infected systems all exhibiting the same infection","
 tstats dc(""Malware_Attacks.dest"") as ""system_count"",values(""Malware_Attacks.tag"") as ""tag"" from datamodel=""Malware"".""Malware_Attacks""   by ""Malware_Attacks.signature""  
 rename ""Malware_Attacks.signature"" as ""signature"" 
 where 'system_count'>10"
"Endpoint - Recurring Malware Infection - Rule","Alerts when a host has an infection that has been re-infected remove multiple times over multiple days.","
 tstats dc(""Malware_Attacks.date"") as ""day_count"",count from datamodel=""Malware"".""Malware_Attacks""   by ""Malware_Attacks.dest"",""Malware_Attacks.signature"" 
 rename ""Malware_Attacks.dest"" as ""dest"",""Malware_Attacks.signature"" as ""signature"" 
 where 'day_count'>3"
"Endpoint - Services Tracker - Lookup Gen","Maintains a list of all services (and the most recent startmode) for each system and the first and last time they were seen","
 tstats min(_time) as firstTime,max(_time) as lastTime,latest(Services.start_mode) as start_mode from datamodel=Endpoint.Services by Services.dest,Services.service 
 `drop_dm_object_name(""Services"")` 
 inputlookup append=T services_tracker 
 sort 0 - lastTime 
 stats min(firstTime) as firstTime,max(lastTime) as lastTime,first(start_mode) as start_mode by dest,service 
 outputlookup override_if_empty=false services_tracker 
 stats count"
"Endpoint - Should Timesync Host Not Syncing - Rule","Detects when hosts that are required to synchronize their clocks have failed to do so. Time synchronization is important because it ensures that the event logs are stamped with the proper time. Additionally, this is required by some regulatory compliance standards (such as PCI).","
 tstats max(_time) as lastTime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=success by All_Performance.dest 
 rename All_Performance.dest as dest 
 `get_asset(dest)` 
 rename dest_* as * 
 `assets` 
 search should_timesync=true 
 stats max(lastTime) as lastTime,first(should_timesync) as should_timesync,values(asset) as dest by asset_id 
 where isnull(lastTime) 
 addinfo 
 eval hourDiff=floor((info_max_time-info_min_time)/3600) 
 fields dest,should_timesync,hourDiff"
"Endpoint - System Version Tracker - Lookup Gen","Maintains a list of the most recent operating system version for each system and the time we got this information","
 tstats summariesonly=false max(""_time"") as ""_time"" from datamodel=""Compute_Inventory"".""All_Inventory"" where nodename=""All_Inventory.OS"" by ""All_Inventory.dest"",""All_Inventory.OS.os"" 
 rename ""All_Inventory.dest"" as ""dest"",""All_Inventory.OS.os"" as ""os"" 
 inputlookup append=T ""system_version_tracker"" 
 stats max(""_time"") as ""_time"" by ""dest"",""os"" 
 outputlookup override_if_empty=false ""system_version_tracker"" 
 stats count"
"ESCU - Attempt To Add Certificate To Untrusted Store - Rule","Attempt to add a certificate to the certificate store","
 tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=*certutil* (Processes.process=*-addstore*) by Processes.parent_process Processes.process_name Processes.user 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)` 
`security_content_ctime(lastTime)` 
 `attempt_to_add_certificate_to_untrusted_store_filter`"
"ESCU - Attempt To Set Default PowerShell Execution Policy To Unrestricted or Bypass - Rule","Monitor for changes of the ExecutionPolicy in the registry to the values ""unrestricted"" or ""bypass,"" which allows the execution of malicious scripts.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=*Software\\Microsoft\\Powershell\\1\\ShellIds\\Microsoft.PowerShell* Registry.registry_key_name=ExecutionPolicy (Registry.registry_value_name=Unrestricted OR Registry.registry_value_name=Bypass) by Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.dest 
 `drop_dm_object_name(Registry)` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)` 
 `attempt_to_set_default_powershell_execution_policy_to_unrestricted_or_bypass_filter`"
"ESCU - Attempt To Stop Security Service - Rule","This search looks for attempts to stop security-related services on the endpoint.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = net.exe OR  Processes.process_name = sc.exe) Processes.process=""* stop *"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
lookup security_services_lookup service as process OUTPUTNEW category, description 
 search category=security 
 `attempt_to_stop_security_service_filter`"
"ESCU - Attempted Credential Dump From Registry via Reg exe - Rule","Monitor for execution of reg.exe with parameters specifying an export of keys that contain hashed credentials that attackers may try to crack offline.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=reg.exe OR Processes.process_name=cmd.exe) Processes.process=*save* (Processes.process=*HKEY_LOCAL_MACHINE\\Security* OR Processes.process=*HKEY_LOCAL_MACHINE\\SAM* OR Processes.process=*HKEY_LOCAL_MACHINE\\System* OR Processes.process=*HKLM\\Security* OR Processes.process=*HKLM\\System* OR Processes.process=*HKLM\\SAM*) by Processes.user Processes.process_name Processes.process Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `attempted_credential_dump_from_registry_via_reg_exe_filter`"
"ESCU - Baseline of Command Line Length - MLTK","This search is used to build a Machine Learning Toolkit (MLTK) model to characterize the length of the command lines observed for each user in the environment. By default, the search uses the last 30 days of data to build the model. The model created by this search is then used in the corresponding detection search, which identifies outliers in the length of the command line.","
 tstats `security_content_summariesonly` count min(_time) as start_time max(_time) as end_time FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process 
 `drop_dm_object_name(Processes)` 
 search user!=unknown 
 `security_content_ctime(start_time)`
 `security_content_ctime(end_time)`
 eval processlen=len(process) 
 fit DensityFunction processlen by user into cmdline_pdfmodel"
"ESCU - Baseline of DNS Query Length - MLTK","This search is used to build a Machine Learning Toolkit (MLTK) model to characterize the length of the DNS queries for each DNS record type observed in the environment. By default, the search uses the last 30 days of data to build the model. The model created by this search is then used in the corresponding detection search, which uses it to identify outliers in the length of the DNS query.","
 tstats `security_content_summariesonly` count from datamodel=Network_Resolution by DNS.query DNS.record_type 
 search DNS.record_type=* 
 `drop_dm_object_name(""DNS"")` 
 eval query_length = len(query) 
 fit DensityFunction query_length by record_type into dns_query_pdfmodel"
"ESCU - Baseline of SMB Traffic - MLTK","This search is used to build a Machine Learning Toolkit (MLTK) model to characterize the number of SMB connections observed each hour for every day of week. By default, the search uses the last 30 days of data to build the model. The model created by this search is then used in the corresponding detection search to identify outliers in the number of SMB connections for that hour and day of the week.","
 tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=10m, All_Traffic.src 
 eval HourOfDay=strftime(_time, ""%H"") 
 eval DayOfWeek=strftime(_time, ""%A"") 
 `drop_dm_object_name(""All_Traffic"")` 
 fit DensityFunction count by ""HourOfDay,DayOfWeek"" into smb_pdfmodel"
"ESCU - Batch File Write to System32 - Rule","The search looks for a batch file (.bat) written to the Windows system directory tree.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.dest) as dest values(Filesystem.file_name) as file_name values(Filesystem.user) as user from datamodel=Endpoint.Filesystem by Filesystem.file_path 
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)`
 rex field=file_name ""(?<file_extension>\.[^\.]+)$"" 
 search file_path=*system32* AND file_extension=.bat 
 `batch_file_write_to_system32_filter`"
"ESCU - Child Processes of Spoolsv exe - Rule","This search looks for child processes of spoolsv.exe. This activity is associated with a POC privilege-escalation exploit associated with CVE-2018-8440. Spoolsv.exe is the process associated with the Print Spooler service in Windows and typically runs as SYSTEM.","
 tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=spoolsv.exe AND Processes.process_name!=regsvr32.exe by Processes.dest Processes.parent_process Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `child_processes_of_spoolsv_exe_filter`"
"ESCU - Clients Connecting to Multiple DNS Servers - Rule","This search allows you to identify the endpoints that have connected to more than five DNS servers and made DNS Queries over the time frame of the search.","
 tstats `security_content_summariesonly` count, values(DNS.dest) AS dest dc(DNS.dest) as dest_count from datamodel=Network_Resolution where DNS.message_type=QUERY by DNS.src 
 `drop_dm_object_name(""Network_Resolution"")` 
where dest_count > 5 
 `clients_connecting_to_multiple_dns_servers_filter`         
 collect index=asx sourcetype=asx marker=""mitre_id=T1048.003, execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - Cloud Compute Instance Created By Previously Unseen User - Rule","This search looks for cloud compute instances created by users who have not created them before.","
 tstats `security_content_summariesonly` earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.action=run by Compute.src_user 
 `drop_dm_object_name(""Compute"")` 
 inputlookup append=t previously_seen_cloud_compute_creations_by_user  
 stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by src_user 
 multireport [
 table src_user, firstTime, lastTime 
 outputlookup previously_seen_cloud_compute_creations_by_user 
 where fact=fiction][
 eval new_user=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_creations_by_user_search_window_begin_offset`), 1, 0) 
 where new_user=1 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)`] 
 table src_user, dest, firstTime, lastTime 
 `cloud_compute_instance_created_by_previously_unseen_user_filter`"
"ESCU - Cloud Compute Instance Created With Previously Unseen Image - Rule","This search looks for cloud compute instances being created with previously unseen image IDs.","
 tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `cloud_compute_instance_created_with_previously_unseen_image_filter` by Compute.image_id, Compute.src_user 
 `drop_dm_object_name(""Compute"")` 
 inputlookup append=t previously_seen_cloud_compute_images 
 stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by image_id, src_user 
 multireport [
 table image_id, firstTime, lastTime 
 outputlookup previously_seen_cloud_compute_images 
 where fact=fiction][
 eval new_image=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_image_search_window_begin_offset`), 1, 0) 
 where new_image=1 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)`] 
 table image_id, dest, src_user, firstTime, lastTime"
"ESCU - Cloud Compute Instance Created With Previously Unseen Instance Type - Rule","Find EC2 instances being created with previously unseen instance types.","
 tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.event_name=RunInstances `cloud_compute_instance_created_with_previously_unseen_instance_type_filter` by Compute.instance_type, Compute.src_user 
 `drop_dm_object_name(""Compute"")` 
 inputlookup append=t previously_seen_cloud_compute_instance_types 
 stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by instance_type, src_user 
 multireport [
 table instance_type, firstTime, lastTime 
 outputlookup previously_seen_cloud_compute_instance_types 
 where fact=fiction][
 eval new_type=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_instance_types_search_window_begin_offset`), 1, 0) 
 where new_type=1 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)`] 
 table instance_type, dest, src_user, firstTime, lastTime"
"ESCU - Cloud Compute Instance Started In Previously Unused Region - Rule","This search looks at cloud-infrastructure events where an instance is created in any region within the last hour and then compares it to a lookup file of previously seen regions where instances have been created.","
 tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.event_name=RunInstances `cloud_compute_instance_started_in_previously_unused_region_filter` by Compute.region, Compute.src_user 
 `drop_dm_object_name(""Compute"")` 
 inputlookup append=t previously_seen_cloud_regions 
 stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by region, src_user 
 multireport [
 table region, firstTime, lastTime 
 outputlookup previously_seen_cloud_regions 
 where fact=fiction][
 eval new_region=if(firstTime >= relative_time(now(), `previously_seen_cloud_regions_search_window_begin_offset`), 1, 0) 
 where new_region=1 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)`] 
 table region, dest, src_user, firstTime, lastTime"
"ESCU - Common Ransomware Extensions - Rule","The search looks for file modifications with extensions commonly used by Ransomware","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name 
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)`
 rex field=file_name ""(?<file_extension>\.[^\.]+)$"" 
 `ransomware_extensions` 
 `common_ransomware_extensions_filter`"
"ESCU - Common Ransomware Notes - Rule","The search looks for files created with names matching those typically used in ransomware notes that tell the victim how to get their data back.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name 
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `ransomware_notes` 
 `common_ransomware_notes_filter`"
"ESCU - Count of Unique IPs Connecting to Ports","The search counts the number of times a connection was observed to each destination port, and the number of unique source IPs connecting to them.","
 tstats `security_content_summariesonly` count dc(All_Traffic.src) as numberOfUniqueHosts from datamodel=Network_Traffic by All_Traffic.dest_port 
 `drop_dm_object_name(""All_Traffic"")` 
 sort - count"
"ESCU - Create local admin accounts using net exe - Rule","This search looks for the creation of local administrator accounts using net.exe.","
 tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=net.exe OR Processes.process_name=net1.exe) AND (Processes.process=*localgroup* OR Processes.process=*/add* OR Processes.process=*user*) by Processes.process Processes.process_name Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
`create_local_admin_accounts_using_net_exe_filter`"
"ESCU - Create or delete windows shares using net exe - Rule","This search looks for the creation or deletion of hidden shares using net.exe.","
 tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processs.process_name=net.exe OR Processes.process_name=net1.exe) by Processes.process Processes.process_name Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 search process=*share* 
 `create_or_delete_windows_shares_using_net_exe_filter`"
"ESCU - Creation of Shadow Copy - Rule","Monitor for signs that Ntdsutil, Vssadmin, or Wmic has been used to create a shadow copy.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=ntdsutil.exe Processes.process=*ntds* Processes.process=*create*) OR (Processes.process_name=vssadmin.exe Processes.process=*create* Processes.process=*shadow*) OR (Processes.process_name=wmic.exe Processes.process=*shadowcopy* Processes.process=*create*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `creation_of_shadow_copy_filter`"
"ESCU - Creation of Shadow Copy with wmic and powershell - Rule","This search detects the use of wmic and Powershell to create a shadow copy.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic* OR Processes.process_name=powershell* Processes.process=*shadowcopy* Processes.process=*create* by Processes.user Processes.process_name Processes.process Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `creation_of_shadow_copy_with_wmic_and_powershell_filter`"
"ESCU - Credential Dumping via Copy Command from Shadow Copy - Rule","This search detects credential dumping using copy command from a shadow copy.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe (Processes.process=*\\system32\\config\\sam* OR Processes.process=*\\system32\\config\\security* OR Processes.process=*\\system32\\config\\system* OR Processes.process=*\\windows\\ntds\\ntds.dit*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `credential_dumping_via_copy_command_from_shadow_copy_filter`"
"ESCU - Credential Dumping via Symlink to Shadow Copy - Rule","This search detects the creation of a symlink to a shadow copy.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe Processes.process=*mklink* Processes.process=*HarddiskVolumeShadowCopy* by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `credential_dumping_via_symlink_to_shadow_copy_filter`"
"ESCU - Deleting Shadow Copies - Rule","The vssadmin.exe utility is used to interact with the Volume Shadow Copy Service.  Wmic is an interface to the Windows Management Instrumentation.  This search looks for either of these tools being used to delete shadow copies.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=vssadmin.exe OR Processes.process_name=wmic.exe) Processes.process=*delete* Processes.process=*shadow* by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `deleting_shadow_copies_filter`"
"ESCU - Detect attackers scanning for vulnerable JBoss servers - Rule","This search looks for specific GET or HEAD requests to web servers that are indicative of reconnaissance attempts to identify vulnerable JBoss servers. JexBoss is described as the exploit tool of choice for this malicious activity.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Web where (Web.http_method=""GET"" OR Web.http_method=""HEAD"") AND (Web.url=""*/web-console/ServerInfo.jsp*"" OR Web.url=""*web-console*"" OR Web.url=""*jmx-console*"" OR Web.url = ""*invoker*"") by Web.http_method, Web.url, Web.src, Web.dest 
 `drop_dm_object_name(""Web"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `detect_attackers_scanning_for_vulnerable_jboss_servers_filter`"
"ESCU - Detect DNS requests to Phishing Sites leveraging EvilGinx2 - Rule","This search looks for DNS requests for phishing domains that are leveraging EvilGinx tools to mimic websites.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(DNS.answer) as answer from datamodel=Network_Resolution.DNS by DNS.dest DNS.src DNS.query host 
 `drop_dm_object_name(DNS)`
 rex field=query "".*?(?<domain>[^./:]+\.(\S{2,3}
\S{2,3}.\S{2,3}))$"" 
 stats count values(query) as query by domain dest src answer
 search `evilginx_phishlets_amazon` OR `evilginx_phishlets_facebook` OR `evilginx_phishlets_github` OR `evilginx_phishlets_0365` OR `evilginx_phishlets_outlook` OR `evilginx_phishlets_aws` OR `evilginx_phishlets_google` 
 search NOT [ inputlookup legit_domains.csv 
 fields domain]
 join domain type=outer [
 tstats count `security_content_summariesonly` values(Web.url) as url from datamodel=Web.Web by Web.dest Web.site 
 rename ""Web.*"" as * 
 rex field=site "".*?(?<domain>[^./:]+\.(\S{2,3}
\S{2,3}.\S{2,3}))$"" 
 table dest domain url] 
 table count src dest query answer domain url 
 `detect_dns_requests_to_phishing_sites_leveraging_evilginx2_filter`"
"ESCU - Detect Excessive Account Lockouts From Endpoint - Rule","This search identifies endpoints that have caused a relatively high number of account lockouts in a short period.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(All_Changes.user) as user from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.dest All_Changes.result 
`drop_dm_object_name(""All_Changes"")` 
`drop_dm_object_name(""Account_Management"")`
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 search count > 5 
 `detect_excessive_account_lockouts_from_endpoint_filter`"
"ESCU - Detect Excessive User Account Lockouts - Rule","This search detects user accounts that have been locked out a relatively high number of times in a short period.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.user All_Changes.result 
`drop_dm_object_name(""All_Changes"")` 
`drop_dm_object_name(""Account_Management"")`
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 search count > 5 
 `detect_excessive_user_account_lockouts_filter`"
"ESCU - Detect hosts connecting to dynamic domain providers - Rule","Malicious actors often abuse legitimate Dynamic DNS services to host malicious payloads or interactive command and control nodes. Attackers will automate domain resolution changes by routing dynamic domains to countless IP addresses to circumvent firewall blocks, blacklists as well as frustrate a network defenders analytic and investigative processes. This search will look for DNS queries made from within your infrastructure to suspicious dynamic domains.","
 tstats `security_content_summariesonly` count values(DNS.answer) as answer min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query 
 `drop_dm_object_name(""DNS"")` 
 `security_content_ctime(firstTime)` 
 `dynamic_dns_providers` 
 `detect_hosts_connecting_to_dynamic_domain_providers_filter`         
 collect index=asx sourcetype=asx marker=""execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - Detect Large Outbound ICMP Packets - Rule","This search looks for outbound ICMP packets with a packet size larger than 1,000 bytes. Various threat actors have been known to use ICMP as a command and control channel for their attack infrastructure. Large ICMP packets from an endpoint to a remote host may be indicative of this activity.","
 tstats `security_content_summariesonly` count earliest(_time) as firstTime latest(_time) as lastTime values(All_Traffic.action) values(All_Traffic.bytes) from datamodel=Network_Traffic where All_Traffic.action !=blocked All_Traffic.dest_category !=internal (All_Traffic.protocol=icmp OR All_Traffic.transport=icmp) All_Traffic.bytes > 1000 by All_Traffic.src_ip All_Traffic.dest_ip 
 `drop_dm_object_name(""All_Traffic"")` 
 search ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16) 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)` 
 `detect_large_outbound_icmp_packets_filter`"
"ESCU - Detect Long DNS TXT Record Response - Rule","This search is used to detect attempts to use DNS tunneling, by calculating the length of responses to DNS TXT queries. Endpoints using DNS as a method of transmission for data exfiltration, command and control, or evasion of security controls can often be detected by noting unusually large volumes of DNS traffic.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Resolution where DNS.message_type=response AND DNS.record_type=TXT by DNS.src DNS.dest DNS.answer DNS.record_type 
`drop_dm_object_name(""DNS"")` 
 eval anslen=len(answer) 
 search anslen>100 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 rename src as ""Source IP"", dest as ""Destination IP"", answer as ""DNS Answer"" anslen as ""Answer Length"" record_type as ""DNS Record Type"" firstTime as ""First Time"" lastTime as ""Last Time"" count as Count 
 table ""Source IP"" ""Destination IP"" ""DNS Answer"" ""DNS Record Type""  ""Answer Length"" Count ""First Time"" ""Last Time"" 
 `detect_long_dns_txt_record_response_filter`         
 collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - Detect malicious requests to exploit JBoss servers - Rule","This search is used to detect malicious HTTP requests crafted to exploit jmx-console in JBoss servers. The malicious requests have a long URL length, as the payload is embedded in the URL.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Web where (Web.http_method=""GET"" OR Web.http_method=""HEAD"") by Web.http_method, Web.url,Web.url_length Web.src, Web.dest 
 search Web.url=""*jmx-console/HtmlAdaptor?action=invokeOpByName&name=jboss.admin*import*"" AND Web.url_length > 200 
 `drop_dm_object_name(""Web"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 table src, dest_ip, http_method, url, firstTime, lastTime 
 `detect_malicious_requests_to_exploit_jboss_servers_filter`"
"ESCU - Detect mshta exe running scripts in command-line arguments - Rule","This search looks for the execution of ""mshta.exe"" with command-line arguments that launch a script. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""mshta.exe"" and its parent process.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=mshta.exe (Processes.process=*vbscript* OR Processes.process=*javascript*) by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 search (process=*vbscript* OR process=*javascript*) 
 `detect_mshta_exe_running_scripts_in_command_line_arguments_filter`"
"ESCU - Detect New Login Attempts to Routers - Rule","The search queries the authentication logs for assets that are categorized as routers in the ES Assets and Identity Framework, to identify connections that have not been seen before in the last 30 days.","
 tstats `security_content_summariesonly` count earliest(_time) as earliest latest(_time) as latest from datamodel=Authentication where Authentication.dest_category=router by Authentication.dest Authentication.user
 eval isOutlier=if(earliest >= relative_time(now(), ""-30d@d""), 1, 0) 
 where isOutlier=1
 `security_content_ctime(earliest)`
 `security_content_ctime(latest)` 
 `drop_dm_object_name(""Authentication"")` 
 `detect_new_login_attempts_to_routers_filter`"
"ESCU - Detect new user AWS Console Login - DM - Rule","This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour","
 tstats earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Authentication where Authentication.signature=ConsoleLogin by Authentication.user 
 `drop_dm_object_name(Authentication)` 
 inputlookup append=t previously_seen_users_console_logins.csv 
 stats min(firstTime) as firstTime max(lastTime) as lastTime by user 
 eval userStatus=if(firstTime >=relative_time(now(), '-70m@m'), 'First Time Logging into AWS Console','Previously Seen User')
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)`
 `detect_new_user_aws_console_login___dm_filter`"
"ESCU - Detect Oulook exe writing a  zip file - Rule","This search looks for execution of process `outlook.exe` where the process is writing a `.zip` file to the disk.","
 tstats `security_content_summariesonly`  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name=outlook.exe OR Processes.process_name=explorer.exe by _time span=5m Processes.parent_process_id Processes.process_id Processes.dest Processes.process_name Processes.parent_process_name Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 rename process_id as malicious_id
 rename parent_process_id as outlook_id
 join malicious_id type=inner[
 tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name  FROM datamodel=Endpoint.Filesystem where (Filesystem.file_path=*zip*   OR Filesystem.file_name=*.lnk ) AND (Filesystem.file_path=C:\\Users* OR Filesystem.file_path=*Local\\Temp*) by  _time span=5m Filesystem.process_id Filesystem.file_hash Filesystem.dest  
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 rename process_id as malicious_id
 fields malicious_id outlook_id dest file_path file_name file_hash count file_id] 
 table firstTime lastTime user malicious_id outlook_id process_name parent_process_name file_name  file_path 
 where file_name != """" 
 `detect_oulook_exe_writing_a__zip_file_filter`"
"ESCU - Detect Outbound SMB Traffic - Rule","This search looks for outbound SMB connections made by hosts within your network to the Internet. SMB traffic is used for Windows file-sharing activity. One of the techniques often used by attackers involves retrieving the credential hash using an SMB request made to a compromised server controlled by the threat actor.","
 tstats `security_content_summariesonly` count earliest(_time) as earliest latest(_time) as latest values(All_Traffic.action) from datamodel=Network_Traffic where All_Traffic.action !=blocked All_Traffic.dest_category !=internal (All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb) by All_Traffic.src_ip All_Traffic.dest_ip 
 `drop_dm_object_name(""All_Traffic"")` 
 search ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16) 
 `security_content_ctime(earliest)`
 `security_content_ctime(latest)` 
 `detect_outbound_smb_traffic_filter`"
"ESCU - Detect Path Interception By Creation Of program exe - Rule","The detection Detect Path Interception By Creation Of program exe is detecting the abuse of unquoted service paths, which is a popular technique for privilege escalation.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=services.exe by Processes.user Processes.process_name Processes.process Processes.dest 
 `drop_dm_object_name(Processes)` 
 rex field=process ""^.*\\\\(?<service_process>.*\.(?:exe
bat
com
ps1))"" 
 eval process_name = lower(process_name) 
 eval service_process = lower(service_process)
 where process_name != service_process 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `detect_path_interception_by_creation_of_program_exe_filter`"
"ESCU - Detect processes used for System Network Configuration Discovery - Rule","This search looks for fast execution of processes used for system network configuration discovery on the endpoint.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.process_name Processes.user _time 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(Processes)` 
 search `system_network_configuration_discovery_tools` 
 transaction dest connected=false maxpause=5m 
where eventcount>=5 
 table firstTime lastTime dest user process_name process parent_process eventcount 
 `detect_processes_used_for_system_network_configuration_discovery_filter`"
"ESCU - Detect Prohibited Applications Spawning cmd exe - Rule","This search looks for executions of cmd.exe spawned by a process that is often abused by attackers and that does not typically launch cmd.exe.","
 tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe by Processes.parent_process_name Processes.process_name Processes.dest Processes.user
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
search [`prohibited_apps_launching_cmd`] 
 `detect_prohibited_applications_spawning_cmd_exe_filter`"
"ESCU - Detect PsExec With accepteula Flag - Rule","This search looks for events where `PsExec.exe` is run with the `accepteula` flag in the command line. PsExec is a built-in Windows utility that enables you to execute processes on other systems. It is fully interactive for console applications. This tool is widely used for launching interactive command prompts on remote systems. Threat actors leverage this extensively for executing code on compromised systems. If an attacker is running PsExec for the first time, they will be prompted to accept the end-user license agreement (EULA), which can be passed as the argument `accepteula` within the command line.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = PsExec.exe Processes.process = ""*accepteula*"" by Processes.process_name Processes.dest  Processes.parent_process_name 
 `drop_dm_object_name(Processes)`
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `detect_psexec_with_accepteula_flag_filter`"
"ESCU - Detect Rare Executables - Rule","This search will return a table of rare processes, the names of the systems running them, and the users who initiated each process.","
 tstats `security_content_summariesonly` count values(Processes.dest) as dest values(Processes.user) as user min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.process_name  
 rename Processes.process_name as process 
 rex field=user ""(?<user_domain>.*)\\\\(?<user_name>.*)"" 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 search [
 tstats count from datamodel=Endpoint.Processes by Processes.process_name 
 rare Processes.process_name limit=30 
 rename Processes.process_name as process
 `filter_rare_process_whitelist`
 table process ] 
 `detect_rare_executables_filter`"
"ESCU - Detect Unauthorized Assets by MAC address - Rule","By populating the organization's assets within the assets_by_str.csv, we will be able to detect unauthorized devices that are trying to connect with the organization's network by inspecting DHCP request packets, which are issued by devices when they attempt to obtain an IP address from the DHCP server. The MAC address associated with the source of the DHCP request is checked against the list of known devices, and reports on those that are not found.","
 tstats `security_content_summariesonly` count from datamodel=Network_Sessions where nodename=All_Sessions.DHCP All_Sessions.signature=DHCPREQUEST by All_Sessions.src_ip All_Sessions.src_mac 
 dedup All_Sessions.src_mac
 `drop_dm_object_name(""Network_Sessions"")`
`drop_dm_object_name(""All_Sessions"")` 
 search NOT [
 inputlookup asset_lookup_by_str 
rename mac as src_mac 
 fields + src_mac] 
 `detect_unauthorized_assets_by_mac_address_filter`"
"ESCU - Detect USB device insertion - Rule","The search is used to detect hosts that generate Windows Event ID 4663 for successful attempts to write to or read from a removable storage and Event ID 4656 for failures, which occurs when a USB drive is plugged in. In this scenario we are querying the Change_Analysis data model to look for Windows Event ID 4656 or 4663 where the priority of the affected host is marked as high in the ES Assets and Identity Framework.","
 tstats `security_content_summariesonly` count earliest(_time) AS earliest latest(_time) AS latest from datamodel=Change_Analysis where (nodename = All_Changes) All_Changes.result=""Removable Storage device"" (All_Changes.result_id=4663 OR All_Changes.result_id=4656) (All_Changes.src_priority=high) by All_Changes.dest 
 `drop_dm_object_name(""All_Changes"")`
 `security_content_ctime(earliest)`
 `security_content_ctime(latest)`  
 `detect_usb_device_insertion_filter`"
"ESCU - Detect Use of cmd exe to Launch Script Interpreters - Rule","This search looks for the execution of the cscript.exe or wscript.exe processes, with a parent of cmd.exe. The search will return the count, the first and last time this execution was seen on a machine, the user, and the destination of the machine","
 tstats `security_content_summariesonly` count values(Processes.process) min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""cmd.exe"" (Processes.process_name=cscript.exe OR Processes.process_name =wscript.exe) by Processes.parent_process Processes.process_name Processes.user Processes.dest 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)` 
 `detect_use_of_cmd_exe_to_launch_script_interpreters_filter`"
"ESCU - Detect web traffic to dynamic domain providers - Rule","This search looks for web connections to dynamic DNS providers.","
 tstats `security_content_summariesonly` count values(Web.url) as url min(_time) as firstTime from datamodel=Web where Web.status=200 by Web.src Web.dest Web.status 
 `drop_dm_object_name(""Web"")` 
 `security_content_ctime(firstTime)` 
 `dynamic_dns_web_traffic` 
 `detect_web_traffic_to_dynamic_domain_providers_filter`"
"ESCU - Detect Windows DNS SIGRed via Zeek - Rule","This search detects SIGRed via Zeek DNS and Zeek Conn data.","
 tstats `security_content_summariesonly` count from datamodel=Network_Resolution where DNS.query_type IN (SIG,KEY) by DNS.flow_id 
 rename DNS.flow_id as flow_id 
 append [
 tstats  `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.bytes_in>65000 by All_Traffic.flow_id 
 rename All_Traffic.flow_id as flow_id] 
 `detect_windows_dns_sigred_via_zeek_filter` 
 stats count by flow_id 
 where count>1 
 fields - count"
"ESCU - Detection of DNS Tunnels - Rule","This search is used to detect DNS tunneling, by calculating the sum of the length of DNS queries and DNS answers. The search also filters out potential false positives by filtering out queries made to internal systems and the queries originating from internal DNS, Web, and Email servers. Endpoints using DNS as a method of transmission for data exfiltration, command and control, or evasion of security controls can often be detected by noting an unusually large volume of DNS traffic.","
 tstats `security_content_summariesonly` dc(""DNS.query"") as count  from datamodel=Network_Resolution  where nodename=DNS ""DNS.message_type""=""QUERY"" NOT (`cim_corporate_web_domain_search(""DNS.query"")`) NOT ""DNS.query""=""*.in-addr.arpa"" NOT (""DNS.src_category""=""svc_infra_dns"" OR ""DNS.src_category""=""svc_infra_webproxy"" OR ""DNS.src_category""=""svc_infra_email*""   ) by ""DNS.src"",""DNS.query"" 
 rename ""DNS.src"" as src  ""DNS.query"" as message 
 eval length=len(message) 
 stats sum(length) as length by src 
 append [ tstats `security_content_summariesonly` dc(""DNS.answer"") as count  from datamodel=Network_Resolution  where nodename=DNS ""DNS.message_type""=""QUERY"" NOT (`cim_corporate_web_domain_search(""DNS.query"")`) NOT ""DNS.query""=""*.in-addr.arpa"" NOT (""DNS.src_category""=""svc_infra_dns"" OR ""DNS.src_category""=""svc_infra_webproxy"" OR ""DNS.src_category""=""svc_infra_email*""   ) by ""DNS.src"",""DNS.answer"" 
 rename ""DNS.src"" as src  ""DNS.answer"" as message 
 eval message=if(message==""unknown"","""", message) 
 eval length=len(message) 
 stats sum(length) as length by src ] 
 stats sum(length) as length by src 
 where length > 10000 
 `detection_of_dns_tunnels_filter`         
 collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - Detection of tools built by NirSoft - Rule","This search looks for specific command-line arguments that may indicate the execution of tools made by Nirsoft, which are legitimate, but may be abused by attackers.","
 tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""* /stext *"" OR Processes.process=""* /scomma *"" ) by Processes.parent_process Processes.process_name Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
`security_content_ctime(lastTime)` 
 `detection_of_tools_built_by_nirsoft_filter`"
"ESCU - Disabling Remote User Account Control - Rule","The search looks for modifications to registry keys that control the enforcement of Windows User Account Control (UAC).","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path=""*Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy"" by Registry.dest, Registry.registry_key_name Registry.user Registry.registry_path Registry.action 
 `drop_dm_object_name(Registry)` 
 `disabling_remote_user_account_control_filter`"
"ESCU - Discover DNS records","The search takes corporate and common cloud provider domains configured under `cim_corporate_email_domains.csv`, `cim_corporate_web_domains.csv`, and `cloud_domains.csv` finds their responses across the last 30 days from data in the `Network_Resolution ` datamodel, then stores the output under the `discovered_dns_records.csv` lookup","
 inputlookup cim_corporate_email_domains.csv 
 inputlookup append=T cim_corporate_web_domains.csv 
 inputlookup append=T cim_cloud_domains.csv 
 eval domain = trim(replace(domain, ""\*"", """")) 
 join domain [
tstats `security_content_summariesonly` count values(DNS.record_type) as type, values(DNS.answer) as answer from datamodel=Network_Resolution where DNS.message_type=RESPONSE DNS.answer!=""unknown"" DNS.answer!="""" by DNS.query 
 rename DNS.query as query 
 where query!=""unknown"" 
 rex field=query ""(?<domain>\w+\.\w+?)(?:$
/)""] 
 makemv delim="" "" answer 
makemv delim="" "" type 
 sort -count 
 table count,domain,type,query,answer 
 outputlookup createinapp=true discovered_dns_records.csv"
"ESCU - DNS Query Length Outliers - MLTK - Rule","This search allows you to identify DNS requests that are unusually large for the record type being requested in your environment.","
 tstats `security_content_summariesonly` count min(_time) as start_time max(_time) as end_time values(DNS.src) as src values(DNS.dest) as dest from datamodel=Network_Resolution by DNS.query DNS.record_type 
 search DNS.record_type=* 
`drop_dm_object_name(DNS)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 eval query_length = len(query) 
 apply dns_query_pdfmodel threshold=0.01 
 rename ""IsOutlier(query_length)"" as isOutlier 
 search isOutlier > 0 
 sort -query_length 
 table start_time end_time query record_type count src dest query_length 
 `dns_query_length_outliers___mltk_filter`         
 collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - DNS Query Length With High Standard Deviation - Rule","This search allows you to identify DNS requests and compute the standard deviation on the length of the names being resolved, then filter on two times the standard deviation to show you those queries that are unusually large for your environment.","
 tstats `security_content_summariesonly` count from datamodel=Network_Resolution by DNS.query DNS.record_type 
`drop_dm_object_name(""DNS"")` 
 eval query_length = len(query) 
 table query query_length record_type count 
 eventstats stdev(query_length) AS stdev avg(query_length) AS avg p50(query_length) AS p50
 where query_length>(avg+stdev*2) 
 eval z_score=(query_length-avg)/stdev 
 `dns_query_length_with_high_standard_deviation_filter`         
 collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - DNS Query Requests Resolved by Unauthorized DNS Servers - Rule","This search will detect DNS requests resolved by unauthorized DNS servers. Legitimate DNS servers should be identified in the Enterprise Security Assets and Identity Framework.","
 tstats `security_content_summariesonly` count from datamodel=Network_Resolution where DNS.dest_category != dns_server AND DNS.src_category != dns_server by DNS.src DNS.dest 
 `drop_dm_object_name(""DNS"")` 
 `dns_query_requests_resolved_by_unauthorized_dns_servers_filter`         
 collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - DNS record changed - Rule","The search takes the DNS records and their answers results of the discovered_dns_records lookup and finds if any records have changed by searching DNS response from the Network_Resolution datamodel across the last day.","
 inputlookup discovered_dns_records.csv 
 rename answer as discovered_answer 
 join domain[
tstats `security_content_summariesonly` count values(DNS.record_type) as type, values(DNS.answer) as current_answer values(DNS.src) as src from datamodel=Network_Resolution where DNS.message_type=RESPONSE DNS.answer!=""unknown"" DNS.answer!="""" by DNS.query 
 rename DNS.query as query 
 where query!=""unknown"" 
 rex field=query ""(?<domain>\w+\.\w+?)(?:$
/)""] 
 makemv delim="" "" answer 
makemv delim="" "" type 
 sort -count 
 table count,src,domain,type,query,current_answer,discovered_answer 
 makemv current_answer  
 mvexpand current_answer 
 makemv discovered_answer 
 eval n=mvfind(discovered_answer, current_answer) 
 where isnull(n) 
 `dns_record_changed_filter`"
"ESCU - Dump LSASS via comsvcs DLL - Rule","Detect the usage of comsvcs.dll for dumping the lsass process.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rundll32.exe Processes.process=*comsvcs.dll* Processes.process=*MiniDump* by Processes.user Processes.process_name Processes.process Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `dump_lsass_via_comsvcs_dll_filter`"
"ESCU - Email Attachments With Lots Of Spaces - Rule","Attackers often use spaces as a means to obfuscate an attachment's file extension. This search looks for messages with email attachments that have many spaces within the file names.","
 tstats `security_content_summariesonly` count values(All_Email.recipient) as recipient_address min(_time) as firstTime max(_time) as lastTime from datamodel=Email where All_Email.file_name=""*"" by All_Email.src_user, All_Email.file_name All_Email.message_id 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(""All_Email"")` 
 eval space_ratio = (mvcount(split(file_name,"" ""))-1)/len(file_name) 
 search space_ratio >= 0.1 
rex field=recipient_address ""(?<recipient_user>.*)@"" 
 `email_attachments_with_lots_of_spaces_filter`"
"ESCU - Email files written outside of the Outlook directory - Rule","The search looks at the change-analysis data model and detects email files created outside the normal Outlook directory.","
 tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where (Filesystem.file_name=*.pst OR Filesystem.file_name=*.ost) Filesystem.file_path != ""C:\\Users\\*\\My Documents\\Outlook Files\\*""  Filesystem.file_path!=""C:\\Users\\*\\AppData\\Local\\Microsoft\\Outlook*"" by Filesystem.action Filesystem.process_id Filesystem.file_name Filesystem.dest 
 `drop_dm_object_name(""Filesystem"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)`
 `email_files_written_outside_of_the_outlook_directory_filter`"
"ESCU - Email servers sending high volume traffic to hosts - Rule","This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.","
 tstats `security_content_summariesonly` sum(All_Traffic.bytes_out) as bytes_out from datamodel=Network_Traffic where All_Traffic.src_category=email_server by All_Traffic.dest_ip _time span=1d 
 `drop_dm_object_name(""All_Traffic"")` 
 eventstats avg(bytes_out) as avg_bytes_out stdev(bytes_out) as stdev_bytes_out 
 eventstats count as num_data_samples avg(eval(if(_time < relative_time(now(), ""@d""), bytes_out, null))) as per_source_avg_bytes_out stdev(eval(if(_time < relative_time(now(), ""@d""), bytes_out, null))) as per_source_stdev_bytes_out by dest_ip 
 eval minimum_data_samples = 4, deviation_threshold = 3 
 where num_data_samples >= minimum_data_samples AND bytes_out > (avg_bytes_out + (deviation_threshold * stdev_bytes_out)) AND bytes_out > (per_source_avg_bytes_out + (deviation_threshold * per_source_stdev_bytes_out)) AND _time >= relative_time(now(), ""@d"") 
 eval num_standard_deviations_away_from_server_average = round(abs(bytes_out - avg_bytes_out) / stdev_bytes_out, 2), num_standard_deviations_away_from_client_average = round(abs(bytes_out - per_source_avg_bytes_out) / per_source_stdev_bytes_out, 2) 
 table dest_ip, _time, bytes_out, avg_bytes_out, per_source_avg_bytes_out, num_standard_deviations_away_from_server_average, num_standard_deviations_away_from_client_average 
 `email_servers_sending_high_volume_traffic_to_hosts_filter`"
"ESCU - Excessive DNS Failures - Rule","This search identifies DNS query failures by counting the number of DNS responses that do not indicate success, and trigger on more than 50 occurrences.","
 tstats `security_content_summariesonly` count values(""DNS.query"") as queries from datamodel=Network_Resolution where nodename=DNS ""DNS.reply_code""!=""No Error"" ""DNS.reply_code""!=""NoError"" DNS.reply_code!=""unknown"" NOT ""DNS.query""=""*.arpa"" ""DNS.query""=""*.*"" by ""DNS.src"",""DNS.query""
 `drop_dm_object_name(""DNS"")`
 lookup cim_corporate_web_domain_lookup domain as query OUTPUT domain
 where isnull(domain)
 lookup update=true alexa_lookup_by_str domain as query OUTPUT rank
 where isnull(rank)
 stats sum(count) as count mode(queries) as queries by src
 `get_asset(src)`
 where count>50 
 `excessive_dns_failures_filter`         
 collect index=asx sourcetype=asx marker=""mitre_id=T1071.004, execution_type=adhoc, execution_time=1604093561.9819374"""
"ESCU - Execution of File with Multiple Extensions - Rule","This search looks for processes launched from files that have double extensions in the file name. This is typically done to obscure the ""real"" file extension and make it appear as though the file being accessed is a data file, as opposed to executable content.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = *.doc.exe OR Processes.process = *.htm.exe OR Processes.process = *.html.exe OR Processes.process = *.txt.exe OR Processes.process = *.pdf.exe OR Processes.process = *.doc.exe by Processes.dest Processes.user Processes.process Processes.parent_process 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(Processes)` 
 `execution_of_file_with_multiple_extensions_filter`"
"ESCU - Execution of File With Spaces Before Extension - Rule","This search looks for processes launched from files with at least five spaces in the name before the extension. This is typically done to obfuscate the file extension by pushing it outside of the default view.","
 tstats `security_content_summariesonly` count values(Processes.process_path) as process_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*     .*"" by Processes.dest Processes.user Processes.process Processes.process_name 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(Processes)` 
 `execution_of_file_with_spaces_before_extension_filter`"
"ESCU - File with Samsam Extension - Rule","The search looks for file writes with extensions consistent with a SamSam ransomware attack.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name 
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)`
 rex field=file_name ""(?<file_extension>\.[^\.]+)$"" 
 search file_extension=.stubbin OR file_extension=.berkshire OR file_extension=.satoshi OR file_extension=.sophos OR file_extension=.keyxml 
 `file_with_samsam_extension_filter`"
"ESCU - First Time Seen Child Process of Zoom - Rule","This search looks for child processes spawned by zoom.exe or zoom.us that has not previously been seen.","
 tstats `security_content_summariesonly` min(_time) as firstTime values(Processes.parent_process_name) as parent_process_name values(Processes.parent_process_id) as parent_process_id values(Processes.process_name) as process_name values(Processes.process) as process from datamodel=Endpoint.Processes where (Processes.parent_process_name=zoom.exe OR Processes.parent_process_name=zoom.us) by Processes.process_id Processes.dest 
 `drop_dm_object_name(Processes)` 
 lookup zoom_first_time_child_process dest as dest process_name as process_name OUTPUT firstTimeSeen 
 where isnull(firstTimeSeen) OR firstTimeSeen > relative_time(now(), ""`previously_seen_zoom_child_processes_window`"") 
 `security_content_ctime(firstTime)` 
 table firstTime dest, process_id, process_name, parent_process_id, parent_process_name 
`first_time_seen_child_process_of_zoom_filter`"
"ESCU - First time seen command line argument - Rule","This search looks for command-line arguments that use a `/c` parameter to execute a command that has not previously been seen.","
 tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = cmd.exe Processes.process = ""* /c *"" by Processes.process Processes.process_name Processes.parent_process_name Processes.dest
 `drop_dm_object_name(Processes)`
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 search [
 tstats `security_content_summariesonly` earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = cmd.exe Processes.process = ""* /c *"" by Processes.process 
 `drop_dm_object_name(Processes)` 
 inputlookup append=t previously_seen_cmd_line_arguments 
 stats min(firstTime) as firstTime, max(lastTime) as lastTime by process 
 outputlookup previously_seen_cmd_line_arguments 
 eval newCmdLineArgument=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) 
 where newCmdLineArgument=1 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 table process] 
 `first_time_seen_command_line_argument_filter`"
"ESCU - GCP GCR container uploaded - Rule","This search show information on uploaded containers including source user, account, action, bucket name event name, http user agent, message and destination path.","
tstats count min(_time) as firstTime max(_time) as lastTime  FROM datamodel=Cloud_Infrastructure.Storage where Storage.event_name=storage.objects.create by Storage.src_user Storage.account Storage.action Storage.bucket_name Storage.event_name Storage.http_user_agent Storage.msg Storage.object_path 
 `drop_dm_object_name(""Storage"")`  
 `gcp_gcr_container_uploaded_filter`"
"ESCU - Get Authentication Logs For Endpoint - Response Task","This search returns all users that have attempted to access a particular endpoint.","
 tstats count from datamodel=Authentication where Authentication.dest=$dest$ by _time, Authentication.dest, Authentication.user, Authentication.app, Authentication.action 
 `drop_dm_object_name(""Authentication"")`"
"ESCU - Get Certificate logs for a domain - Response Task","This search queries the Certificates datamodel and give you all the information for a specific domain. Please note that the certificates issued by ""Let's Encrypt"" are widely used by attackers.","
 tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Certificates.All_Certificates where All_Certificates.SSL.ssl_subject_common_name=*$domain$  by All_Certificates.dest All_Certificates.src All_Certificates.SSL.ssl_issuer_common_name All_Certificates.SSL.ssl_subject_common_name All_Certificates.SSL.ssl_hash 
 `drop_dm_object_name(All_Certificates)` 
 `drop_dm_object_name(SSL)` 
 rename ssl_subject_common_name as domain 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)`"
"ESCU - Get DNS traffic ratio - Response Task","This search calculates the ratio of DNS traffic originating and coming from a host to a list of DNS servers over the last 24 hours. A high value of this ratio could be very useful to quickly understand if a src_ip (host) is sending a high volume of data out via port 53, could be an indicator of data exfiltration via DNS.","
 tstats allow_old_summaries=true sum(All_Traffic.bytes_out) as ""bytes_out"" sum(All_Traffic.bytes_in) as ""bytes_in"" from datamodel=Network_Traffic where nodename=All_Traffic All_Traffic.dest_port=53 All_Traffic.src=$src_ip$ All_Traffic.dest=$dest_ip$ 
 eval ratio = (bytes_out/bytes_in) 
 table ratio"
"ESCU - Get First Occurrence and Last Occurrence of a MAC Address - Response Task","This search allows you to gather more context around a notable which has detected a new device connecting to your network. Use this search to determine the first and last occurrences of the suspicious device attempting to connect with your network.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Sessions where nodename=All_Sessions.DHCP All_Sessions.signature=DHCPREQUEST All_Sessions.All_Sessions.src_mac= $src_mac$ by All_Sessions.src_ip All_Sessions.user 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)`"
"ESCU - Get History Of Email Sources - Response Task","This search returns a list of all email sources seen in the 48 hours prior to the notable event to 24 hours after, and the number of emails from each source.","
tstats `security_content_summariesonly` values(All_Email.dest) as dest values(All_Email.recipient) as recepient  min(_time) as firstTime max(_time) as lastTime count from datamodel=Email.All_Email by All_Email.src 
`drop_dm_object_name(All_Email)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)`"
"ESCU - Get Parent Process Info - Response Task","This search queries the Endpoint data model to give you details about the parent process of a process running on a host which is under investigation. Enter the values of the process name in question and the dest","
 tstats count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name = $process_name$ Processes.dest = $dest$ by Processes.user Processes.parent_process_name  Processes.process_name  
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`"
"ESCU - Get Process File Activity - Response Task","This search returns the file activity for a specific process on a specific endpoint","
 tstats `security_content_summariesonly` values(Filesystem.file_name) as file_name values(Filesystem.dest) as dest, values(Filesystem.process_id) as process_id from datamodel=Endpoint.Filesystem where Filesystem.dest=$dest$ Filesystem.process_id=$process_id$ by Filesystem.file_path, Filesystem.action, _time 
 `drop_dm_object_name(Filesystem)`  
 sort _time 
 table _time, process_id, dest, action, file_name, file_path"
"ESCU - Get Process Info - Response Task","This search queries the Endpoint data model to give you details about the process running on a host which is under investigation. To gather the process info, enter the values for the process name in question and the destination IP address.","
 tstats `security_content_summariesonly` count min(_time)  max(_time) as lastTime from datamodel=Endpoint.Processes where Proceses.dest=$dest$ Proceses.process_name=$process_name$ by Processes.parent_process Processes.process_name Processes.user Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)`"
"ESCU - Get Process Information For Port Activity - Response Task","This search will return information about the process associated with observed network traffic to a specific destination port from a specific host.","
 tstats `security_content_summariesonly` count min(_time)  max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.dest = $dest$ by Processes.process_name Processes.user Processes.dest Processes.process_id 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)` 
 search [
 tstats `security_content_summariesonly` count from datamodel=Endpoint.Ports where Ports.dest_port=$dest_port$ by Ports.process_id Ports.src  
 `drop_dm_object_name(Ports)` 
 rename src as dest]"
"ESCU - Get Process Registry Activity - Response Task","This search returns the registry activity for a specific process on a specific endpoint","
 tstats `security_content_summariesonly` values(Registry.registry_key_name) as registry_key_name, values(Registry.dest) as dest, values(Registry.process_id) as process_id from datamodel=Endpoint.Registry where Registry.process_id=$process_id$ AND Registry.dest=$dest$ by Registry.registry_path, Registry.action, _time 
 `drop_dm_object_name(Registry)` 
 sort _time 
 table _time, process_id, dest, action, registry_key_name, registry_path"
"ESCU - Get Process Responsible For The DNS Traffic - Response Task","While investigating, an analyst will want to know what process and parent_process is responsible for generating suspicious DNS traffic. Use the following search and enter the value of `dest` in the search to get specific details on the process responsible for creating the DNS traffic.","
 tstats `security_content_summariesonly` count min(_time)  max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.dest = $dest$ by Processes.parent_process Processes.process_name Processes.user Processes.dest Processes.process_id 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)` 
 search [
 tstats `security_content_summariesonly` count from datamodel=Endpoint.Ports where Ports.dest_port=53 by Ports.process_id Ports.src 
 `drop_dm_object_name(Ports)` 
 rename src as dest]"
"ESCU - Get Registry Activities - Response Task","This search queries the Endpoint Datamodel to give you details of the latest registry values for a specific destination computer.","
 tstats `security_content_summariesonly` values(Registry.registry_path) as registry_path values(Registry.registry_key_name) as registry_key_name count FROM datamodel=Endpoint.Registry where Registry.dest = ""$dest$"" by Registry.process_id Registry.dest 
 `drop_dm_object_name(""Registry"")` 
 join [
 tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name = reg.exe by Processes.process_id 
 `drop_dm_object_name(""Processes"")`]"
"ESCU - Hiding Files And Directories With Attrib exe - Rule","Attackers leverage an existing Windows binary, attrib.exe, to mark specific as hidden by using specific flags so that the victim does not see the file.  The search looks for specific command-line arguments to detect the use of attrib.exe to hide files.","
 tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=attrib.exe (Processes.process=*+h*) by Processes.parent_process Processes.process_name Processes.user Processes.dest 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)`
 `hiding_files_and_directories_with_attrib_exe_filter`"
"ESCU - Hosts receiving high volume of network traffic from email server - Rule","This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.","
 tstats `security_content_summariesonly` sum(All_Traffic.bytes_in) as bytes_in from datamodel=Network_Traffic where All_Traffic.dest_category=email_server by All_Traffic.src_ip _time span=1d 
 `drop_dm_object_name(""All_Traffic"")` 
 eventstats avg(bytes_in) as avg_bytes_in stdev(bytes_in) as stdev_bytes_in 
 eventstats count as num_data_samples avg(eval(if(_time < relative_time(now(), ""@d""), bytes_in, null))) as per_source_avg_bytes_in stdev(eval(if(_time < relative_time(now(), ""@d""), bytes_in, null))) as per_source_stdev_bytes_in by src_ip 
 eval minimum_data_samples = 4, deviation_threshold = 3 
 where num_data_samples >= minimum_data_samples AND bytes_in > (avg_bytes_in + (deviation_threshold * stdev_bytes_in)) AND bytes_in > (per_source_avg_bytes_in + (deviation_threshold * per_source_stdev_bytes_in)) AND _time >= relative_time(now(), ""@d"") 
 eval num_standard_deviations_away_from_server_average = round(abs(bytes_in - avg_bytes_in) / stdev_bytes_in, 2), num_standard_deviations_away_from_client_average = round(abs(bytes_in - per_source_avg_bytes_in) / per_source_stdev_bytes_in, 2) 
 table src_ip, _time, bytes_in, avg_bytes_in, per_source_avg_bytes_in, num_standard_deviations_away_from_server_average, num_standard_deviations_away_from_client_average 
 `hosts_receiving_high_volume_of_network_traffic_from_email_server_filter`"
"ESCU - Identify Systems Creating Remote Desktop Traffic","This search counts the numbers of times the system has generated remote desktop traffic.","
 tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=3389 by All_Traffic.src 
 `drop_dm_object_name(""All_Traffic"")` 
 sort - count"
"ESCU - Identify Systems Receiving Remote Desktop Traffic","This search counts the numbers of times the system has created remote desktop traffic","
 tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=3389 by All_Traffic.dest 
 `drop_dm_object_name(""All_Traffic"")` 
 sort - count"
"ESCU - Identify Systems Using Remote Desktop","This search counts the numbers of times the remote desktop process, mstsc.exe, has run on each system.","
 tstats `security_content_summariesonly` count from datamodel=Endpoint.Processes where Processes.process_name=""*mstsc.exe*"" by Processes.dest Processes.process_name 
 `drop_dm_object_name(Processes)` 
 sort - count"
"ESCU - Investigate AWS ECR container listing activity - Response Task","This search lists all the users performing a list image operation on AWS Elastic Container Registry. Listing source user, image id, source IP, user type, http user agent. This search also gives counts of unique user agents per listing source.","
tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Cloud_Infrastructure.Compute where Compute.user_type!=""AssumeRole"" AND Compute.event_name=""ListImages"" by Compute.image_id Compute.src_user Compute.src Compute.http_user_agent Compute.user_type 
 rename ""Compute.*"" as * 
stats values(http_user_agent) as http_user_agent distinct_count(http_user_agent) as unique_ua_count by src_user, image_id, src, user_type 
 where unique_ua_count > 1"
"ESCU - Investigate Failed Logins for Multiple Destinations - Response Task","This search returns failed logins to multiple destinations by user.","
 tstats count `security_content_summariesonly` earliest(_time) as first_login latest(_time) as last_login dc(Authentication.dest) AS distinct_count_dest values(Authentication.dest) AS Authentication.dest values(Authentication.app) AS Authentication.app  from datamodel=Authentication where Authentication.action=failure by Authentication.user 
 where distinct_count_dest > 1 
 `security_content_ctime(first_login)` 
 `security_content_ctime(last_login)` 
 `drop_dm_object_name(""Authentication"")`"
"ESCU - Investigate Previous Unseen User - Response Task","This search returns previous unseen user, which didn't log in for 30 days.","
 tstats count `security_content_summariesonly` earliest(_time) as first_login latest(_time) as last_login values(Authentication.dest) AS Authentication.dest values(Authentication.app) AS Authentication.app values(Authentication.action) AS Authentication.action from datamodel=Authentication where Authentication.action=success by _time, Authentication.user 
 bucket _time span=30d 
 stats count min(first_login) as first_login max(last_login) as last_login values(Authentication.dest) AS Authentication.dest by Authentication.user 
 where count=1 
 where first_login >= relative_time(now(), ""-30d"") 
 `security_content_ctime(first_login)` 
 `security_content_ctime(last_login)` 
 `drop_dm_object_name(""Authentication"")`"
"ESCU - Investigate Successful Remote Desktop Authentications - Response Task","This search returns the source, destination, and user for all successful remote-desktop authentications. A successful authentication after a brute-force attack on a destination machine is suspicious behavior.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Authentication where Authentication.signature_id=4624 Authentication.app=win:remote by Authentication.src Authentication.dest Authentication.app Authentication.user Authentication.signature Authentication.src_nt_domain 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `drop_dm_object_name(""Authentication"")`
 table firstTime lastTime src src_nt_domain dest user app count 
 sort count"
"ESCU - Investigate Web POSTs From src - Response Task","This investigative search retrieves POST requests from a specified source IP or hostname. Identifying the POST requests, as well as their associated destination URLs and user agent(s), may help you scope and characterize the suspicious traffic.","
 tstats `security_content_summariesonly` values(Web.url) as url from datamodel=Web by Web.src,Web.http_user_agent,Web.http_method 
 `drop_dm_object_name(""Web"")`
 where like(src, ""$src$"") and like(http_method, ""POST"")"
"ESCU - Large Volume of DNS ANY Queries - Rule","The search is used to identify attempts to use your DNS Infrastructure for DDoS purposes via a DNS amplification attack leveraging ANY queries.","
 tstats `security_content_summariesonly` count from datamodel=Network_Resolution where nodename=DNS ""DNS.message_type""=""QUERY"" ""DNS.record_type""=""ANY"" by ""DNS.dest"" 
 `drop_dm_object_name(""DNS"")` 
 where count>200 
 `large_volume_of_dns_any_queries_filter`"
"ESCU - MacOS - Re-opened Applications - Rule","This search looks for processes referencing the plist files that determine which applications are re-opened when a user reboots their machine.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*com.apple.loginwindow*"" by Processes.user Processes.process_name Processes.parent_process_name Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `macos___re_opened_applications_filter`"
"ESCU - Malicious PowerShell Process - Connect To Internet With Hidden Window - Rule","This search looks for PowerShell processes started with parameters to modify the execution policy of the run, run in a hidden window, and connect to the Internet. This combination of command-line options is suspicious because it's overriding the default PowerShell execution policy, attempts to hide its activity from the user, and connects to the Internet.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 search process=""*-Exec*"" process=""*-WindowStyle*"" process=""*hidden*"" process=""*New-Object*"" process=""*System.Net.WebClient*"" 
 `malicious_powershell_process___connect_to_internet_with_hidden_window_filter`"
"ESCU - Malicious PowerShell Process - Encoded Command - Rule","This search looks for PowerShell processes that have encoded the script within the command-line. Malware has been seen using this parameter, as it obfuscates the code and makes it relatively easy to pass a script on the command-line.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = powershell.exe (Processes.process=*-EncodedCommand* OR Processes.process=*-enc*) by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.process_id 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `malicious_powershell_process___encoded_command_filter`"
"ESCU - Malicious PowerShell Process - Execution Policy Bypass - Rule","This search looks for PowerShell processes started with parameters used to bypass the local execution policy for scripts. These parameters are often observed in attacks leveraging PowerShell scripts as they override the default PowerShell execution policy.","
 tstats `security_content_summariesonly` values(Processes.process_id) as process_id, values(Processes.parent_process_id) as parent_process_id values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe AND (Processes.process=""* -ex*"" OR Processes.process=""* bypass *"") by Processes.process_id, Processes.user, Processes.dest 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `malicious_powershell_process___execution_policy_bypass_filter`"
"ESCU - Malicious PowerShell Process - Multiple Suspicious Command-Line Arguments - Rule","This search looks for PowerShell processes started with a base64 encoded command-line passed to it, with parameters to modify the execution policy for the process, and those that prevent the display of an interactive prompt to the user. This combination of command-line options is suspicious because it overrides the default PowerShell execution policy, attempts to hide itself from the user, and passes an encoded script to be run on the command-line.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 search (process=*-EncodedCommand* OR process=*-enc*) process=*-Exec* AND process=*-NonI* 
 `malicious_powershell_process___multiple_suspicious_command_line_arguments_filter`"
"ESCU - Malicious PowerShell Process With Obfuscation Techniques - Rule","This search looks for PowerShell processes launched with arguments that have characters indicative of obfuscation on the command-line.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest Processes.process 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 eval num_obfuscation = (mvcount(split(process, ""`""))-1) + (mvcount(split(process, ""^""))-1) 
 `malicious_powershell_process_with_obfuscation_techniques_filter` 
 search num_obfuscation > 0"
"ESCU - Monitor DNS For Brand Abuse - Rule","This search looks for DNS requests for faux domains similar to the domains that you want to have monitored for abuse.","
 tstats `security_content_summariesonly` values(DNS.answer) as IPs min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query 
 `drop_dm_object_name(""DNS"")` 
 `security_content_ctime(firstTime)`
 `brand_abuse_dns` 
 `monitor_dns_for_brand_abuse_filter`"
"ESCU - Monitor Email For Brand Abuse - Rule","This search looks for emails claiming to be sent from a domain similar to one that you want to have monitored for abuse.","
 tstats `security_content_summariesonly` values(All_Email.recipient) as recipients, min(_time) as firstTime, max(_time) as lastTime from datamodel=Email by All_Email.src_user, All_Email.message_id 
 `drop_dm_object_name(""All_Email"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 eval temp=split(src_user, ""@"") 
 eval email_domain=mvindex(temp, 1) 
 lookup update=true brandMonitoring_lookup domain as email_domain OUTPUT domain_abuse 
 search domain_abuse=true 
 table message_id, src_user, email_domain, recipients, firstTime, lastTime 
 `monitor_email_for_brand_abuse_filter`"
"ESCU - Monitor Registry Keys for Print Monitors - Rule","This search looks for registry activity associated with modifications to the registry key `HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors`. In this scenario, an attacker can load an arbitrary .dll into the print-monitor registry by giving the full path name to the after.dll. The system will execute the .dll with elevated (SYSTEM) permissions and will persist after reboot.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.action=modified AND Registry.registry_path=""*CurrentControlSet\\Control\\Print\\Monitors*"" by Registry.dest, Registry.registry_key_name Registry.status Registry.user Registry.registry_path Registry.action 
 `drop_dm_object_name(Registry)` 
 `monitor_registry_keys_for_print_monitors_filter`"
"ESCU - Monitor Web Traffic For Brand Abuse - Rule","This search looks for Web requests to faux domains similar to the one that you want to have monitored for abuse.","
 tstats `security_content_summariesonly` values(Web.url) as urls min(_time) as firstTime from datamodel=Web by Web.src 
 `drop_dm_object_name(""Web"")` 
 `security_content_ctime(firstTime)` 
 `brand_abuse_web` 
 `monitor_web_traffic_for_brand_abuse_filter`"
"ESCU - New container uploaded to AWS ECR - Rule","This searches show information on uploaded containers including source user, image id, source IP user type, http user agent, region, first time, last time of operation (PutImage). These searches are based on Cloud Infrastructure Data Model.","
 tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Cloud_Infrastructure.Compute where Compute.user_type!=""AssumeRole"" AND Compute.http_user_agent=""AWS Internal"" AND Compute.event_name=""PutImage"" by Compute.image_id Compute.src_user Compute.src Compute.region Compute.msg Compute.user_type 
 `drop_dm_object_name(""Compute"")` 
 `new_container_uploaded_to_aws_ecr_filter`"
"ESCU - No Windows Updates in a time frame - Rule","This search looks for Windows endpoints that have not generated an event indicating a successful Windows update in the last 60 days. Windows updates are typically released monthly and applied shortly thereafter. An endpoint that has not successfully applied an update in this time frame indicates the endpoint is not regularly being patched for some reason.","
 tstats `security_content_summariesonly` max(_time) as lastTime from datamodel=Updates where Updates.status=Installed Updates.vendor_product=""Microsoft Windows"" by Updates.dest Updates.status Updates.vendor_product 
 rename Updates.dest as Host 
 rename Updates.status as ""Update Status"" 
 rename Updates.vendor_product as Product 
 eval isOutlier=if(lastTime <= relative_time(now(), ""-60d@d""), 1, 0)  
 `security_content_ctime(lastTime)`  
 search isOutlier=1 
 rename lastTime as ""Last Update Time"", 
 table Host, ""Update Status"", Product, ""Last Update Time"" 
 `no_windows_updates_in_a_time_frame_filter`"
"ESCU - Overwriting Accessibility Binaries - Rule","Microsoft Windows contains accessibility features that can be launched with a key combination before a user has logged in. An adversary can modify or replace these programs so they can get a command prompt or backdoor without logging in to the system. This search looks for modifications to these binaries.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem where (Filesystem.file_path=*\\Windows\\System32\\sethc.exe* OR Filesystem.file_path=*\\Windows\\System32\\utilman.exe* OR Filesystem.file_path=*\\Windows\\System32\\osk.exe* OR Filesystem.file_path=*\\Windows\\System32\\Magnify.exe* OR Filesystem.file_path=*\\Windows\\System32\\Narrator.exe* OR Filesystem.file_path=*\\Windows\\System32\\DisplaySwitch.exe* OR Filesystem.file_path=*\\Windows\\System32\\AtBroker.exe*) by Filesystem.file_name Filesystem.dest 
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `overwriting_accessibility_binaries_filter`"
"ESCU - Previously Seen Cloud Compute Creations By User","This search builds a table of previously seen users that have launched a cloud compute instance.","
 tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `previously_seen_cloud_compute_creations_by_user_input_filter` by Compute.src_user 
 `drop_dm_object_name(""Compute"")` 
 outputlookup previously_seen_cloud_compute_creations_by_user 
 stats count"
"ESCU - Previously Seen Cloud Compute Images","This search builds a table of previously seen images used to launch cloud compute instances","
 tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `previously_seen_cloud_compute_image_input_filter` by Compute.image_id 
 `drop_dm_object_name(""Compute"")` 
 outputlookup previously_seen_cloud_compute_images 
 stats count"
"ESCU - Previously Seen Cloud Compute Instance Types","This search builds a table of previously seen cloud compute instance types","
 tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `previously_seen_cloud_compute_instance_types_input_filter` by Compute.instance_type 
 `drop_dm_object_name(""Compute"")` 
 outputlookup previously_seen_cloud_compute_instance_types 
 stats count"
"ESCU - Previously Seen Cloud Regions","This search looks for cloud compute events where a compute instance is started and creates a baseline of most recent time, `lastTime` and the first time `firstTime` we've seen this region in our dataset grouped by the region for the last 30 days","
 tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Cloud_Infrastructure.Compute where Compute.action=start `previously_seen_cloud_regions_input_filter` by Compute.region 
 `drop_dm_object_name(""Compute"")` 
 outputlookup previously_seen_cloud_regions 
 stats count"
"ESCU - Previously seen command line arguments","This search looks for command-line arguments where `cmd.exe /c` is used to execute a program, then creates a baseline of the earliest and latest times we have encountered this command-line argument in our dataset within the last 30 days.","
 tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe AND Processes.process=""* /c *"" by Processes.process 
 `drop_dm_object_name(Processes)`"
"ESCU - Previously seen users in CloudTrail - DM","This search looks for CloudTrail events where a user logs into the console, then creates a baseline of the latest and earliest times, City, Region, and Country we have encountered this user in our dataset, grouped by username, within the last 30 days.","
 tstats earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Authentication where Authentication.signature=ConsoleLogin by Authentication.user Authentication.src 
 iplocation Authentication.src 
 rename Authentication.user as user Authentication.src as src 
 table user src City Region Country firstTime lastTime 
 outputlookup previously_seen_users_console_logins.csv 
 stats count"
"ESCU - Previously Seen Zoom Child Processes - Initial","This search returns the first and last time a process was seen per endpoint with a parent process of zoom.exe (Windows) or zoom.us (macOS). This table is then cached.","
 tstats `security_content_summariesonly` min(_time) as firstTimeSeen max(_time) as lastTimeSeen from datamodel=Endpoint.Processes where (Processes.parent_process_name=zoom.exe OR Processes.parent_process_name=zoom.us) by Processes.process_name Processes.dest
 `drop_dm_object_name(Processes)` 
 table dest, process_name, firstTimeSeen, lastTimeSeen 
 outputlookup zoom_first_time_child_process"
"ESCU - Previously Seen Zoom Child Processes - Update","This search returns the first and last time a process was seen per endpoint with a parent process of zoom.exe (Windows) or zoom.us (macOS) within the last hour. It then updates this information with historical data and filters out proces_name and endpoint pairs that have not been seen within the specified time window. This updated table is outputed to disk.","
 tstats `security_content_summariesonly` min(_time) as firstTimeSeen max(_time) as lastTimeSeen from datamodel=Endpoint.Processes where (Processes.parent_process_name=zoom.exe OR Processes.parent_process_name=zoom.us) by Processes.process_name Processes.dest
 `drop_dm_object_name(Processes)` 
 table firstTimeSeen, lastTimeSeen, process_name, dest 
 inputlookup zoom_first_time_child_process append=t 
 stats min(firstTimeSeen) as firstTimeSeen max(lastTimeSeen) as lastTimeSeen by process_name, dest 
 where lastTimeSeen > relative_time(now(), ""`previously_seen_zoom_child_processes_forget_window`"") 
 outputlookup zoom_first_time_child_process"
"ESCU - Process Execution via WMI - Rule","This search looks for processes launched via WMI.","
 tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name = *WmiPrvSE.exe by Processes.user Processes.dest Processes.process_name  
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 `process_execution_via_wmi_filter`"
"ESCU - Processes created by netsh - Rule","This search looks for processes launching netsh.exe to execute various commands via the netsh command-line utility. Netsh.exe is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper .dll when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe that are executing commands via the command line.","
 tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process=""*C:\\Windows\\System32\\netsh.exe*"" AND Processes.process_path!=""C:\\Program Files\\rempl\\sedlauncher.exe"") by Processes.user Processes.dest Processes.parent_process Processes.parent_process_name Processes.process_name 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `processes_created_by_netsh_filter`"
"ESCU - Processes launching netsh - Rule","This search looks for processes launching netsh.exe. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.","
 tstats `security_content_summariesonly` count values(Processes.process) AS Processes.process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=netsh.exe by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.user Processes.dest 
`drop_dm_object_name(""Processes"")` 
`security_content_ctime(firstTime)` 
`security_content_ctime(lastTime)` 
`processes_launching_netsh_filter`"
"ESCU - Prohibited Network Traffic Allowed - Rule","This search looks for network traffic defined by port and transport layer protocol in the Enterprise Security lookup table ""lookup_interesting_ports"", that is marked as prohibited, and has an associated 'allow' action in the Network_Traffic data model. This could be indicative of a misconfigured network device.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.action = allowed by All_Traffic.src_ip All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.action 
 lookup update=true interesting_ports_lookup dest_port as All_Traffic.dest_port OUTPUT app is_prohibited note transport 
 search is_prohibited=true 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(""All_Traffic"")` 
 `prohibited_network_traffic_allowed_filter`"
"ESCU - Prohibited Software On Endpoint - Rule","This search looks for applications on the endpoint that you have marked as prohibited.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.user Processes.process_name 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(Processes)` 
 `prohibited_softwares` 
 `prohibited_software_on_endpoint_filter`"
"ESCU - Protocol or Port Mismatch - Rule","This search looks for network traffic on common ports where a higher layer protocol does not match the port that is being used. For example, this search should identify cases where protocols other than HTTP are running on TCP port 80. This can be used by attackers to circumvent firewall restrictions, or as an attempt to hide malicious communications over ports and protocols that are typically allowed and not well inspected.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where (All_Traffic.app=dns NOT All_Traffic.dest_port=53) OR ((All_Traffic.app=web-browsing OR All_Traffic.app=http) NOT (All_Traffic.dest_port=80 OR All_Traffic.dest_port=8080 OR All_Traffic.dest_port=8000)) OR (All_Traffic.app=ssl NOT (All_Traffic.dest_port=443 OR All_Traffic.dest_port=8443)) OR (All_Traffic.app=smtp NOT All_Traffic.dest_port=25) by All_Traffic.src_ip, All_Traffic.dest_ip, All_Traffic.app, All_Traffic.dest_port 
`security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(""All_Traffic"")` 
 `protocol_or_port_mismatch_filter`"
"ESCU - Protocols passing authentication in cleartext - Rule","This search looks for cleartext protocols at risk of leaking credentials. Currently, this consists of legacy protocols such as telnet, POP3, IMAP, and non-anonymous FTP sessions. While some of these protocols can be used over SSL, they typically run on different assigned ports in those cases.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.protocol=""tcp"" AND (All_Traffic.dest_port=""23"" OR All_Traffic.dest_port=""143"" OR All_Traffic.dest_port=""110"" OR (All_Traffic.dest_port=""21"" AND All_Traffic.user != ""anonymous"")) groupby All_Traffic.user All_Traffic.src All_Traffic.dest All_Traffic.dest_port 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(""All_Traffic"")` 
 `protocols_passing_authentication_in_cleartext_filter`"
"ESCU - Reg exe Manipulating Windows Services Registry Keys - Rule","The search looks for reg.exe modifying registry keys that define Windows services and their configurations.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name values(Processes.user) as user FROM datamodel=Endpoint.Processes where Processes.process_name=reg.exe Processes.process=*reg* Processes.process=*add* Processes.process=*Services* by Processes.process_id Processes.dest Processes.process 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `reg_exe_manipulating_windows_services_registry_keys_filter`"
"ESCU - Reg exe used to hide files directories via registry keys - Rule","The search looks for command-line arguments used to hide a file or directory using the reg add command.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = reg.exe Processes.process=""*add*"" Processes.process=""*Hidden*"" Processes.process=""*REG_DWORD*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
`security_content_ctime(lastTime)`
 regex process = ""(/d\s+2)"" 
 `reg_exe_used_to_hide_files_directories_via_registry_keys_filter`"
"ESCU - Registry Keys for Creating SHIM Databases - Rule","This search looks for registry activity associated with application compatibility shims, which can be leveraged by attackers for various nefarious purposes.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Change_Analysis.All_Changes where All_Changes.object_category=registry AND (All_Changes.object_path=""*CurrentVersion\\AppCompatFlags\\Custom*"" OR All_Changes.object_path=""*CurrentVersion\\AppCompatFlags\\InstalledSDB*"") by All_Changes.dest, All_Changes.command, All_Changes.user, All_Changes.object, All_Changes.object_path 
 `drop_dm_object_name(""All_Changes"")` 
 `registry_keys_for_creating_shim_databases_filter`"
"ESCU - Registry Keys Used For Persistence - Rule","The search looks for modifications to registry keys that can be used to launch an application or service at system startup.","
 tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=*currentversion\\run* OR Registry.registry_path=*currentVersion\\Windows\\Appinit_Dlls* OR Registry.registry_path=CurrentVersion\\Winlogon\\Shell* OR Registry.registry_path=*CurrentVersion\\Winlogon\\Userinit* OR Registry.registry_path=*CurrentVersion\\Winlogon\\VmApplet* OR Registry.registry_path=*currentversion\\policies\\explorer\\run* OR Registry.registry_path=*currentversion\\runservices* OR Registry.registry_path=*\\CurrentControlSet\\Control\\Lsa\\* OR Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"" OR Registry.registry_path=HKLM\\SOFTWARE\\Microsoft\\Netsh\\*) by Registry.dest , Registry.status, Registry.user 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `drop_dm_object_name(Registry)` 
 `registry_keys_used_for_persistence_filter`"
"ESCU - Registry Keys Used For Privilege Escalation - Rule","This search looks for modifications to registry keys that can be used to elevate privileges. The registry keys under ""Image File Execution Options"" are used to intercept calls to an executable and can be used to attach malicious binaries to benign system binaries.","
 tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"") AND (Registry.registry_key_name=GlobalFlag OR Registry.registry_key_name=Debugger) by Registry.dest  Registry.user 
 `security_content_ctime(lastTime)`  
 `security_content_ctime(firstTime)` 
 `drop_dm_object_name(Registry)` 
 `registry_keys_used_for_privilege_escalation_filter`"
"ESCU - Remote Desktop Network Bruteforce - Rule","This search looks for RDP application network traffic and filters any source/destination pair generating more than twice the standard deviation of the average traffic.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.app=rdp by All_Traffic.src All_Traffic.dest All_Traffic.dest_port 
 eventstats stdev(count) AS stdev avg(count) AS avg p50(count) AS p50 
 where count>(avg + stdev*2) 
 rename All_Traffic.src AS src All_Traffic.dest AS dest 
 table firstTime lastTime src dest count avg p50 stdev 
 `remote_desktop_network_bruteforce_filter`"
"ESCU - Remote Desktop Network Traffic - Rule","This search looks for network traffic on TCP/3389, the default port used by remote desktop. While remote desktop traffic is not uncommon on a network, it is usually associated with known hosts. This search allows for whitelisting both source and destination hosts to remove them from the output of the search so you can focus on the uncommon uses of remote desktop on your network.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.dest_port=3389 AND All_Traffic.dest_category!=common_rdp_destination AND All_Traffic.src_category!=common_rdp_source by All_Traffic.src All_Traffic.dest All_Traffic.dest_port 
 `drop_dm_object_name(""All_Traffic"")` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `remote_desktop_network_traffic_filter`"
"ESCU - Remote Desktop Process Running On System - Rule","This search looks for the remote desktop process mstsc.exe running on systems upon which it doesn't typically run. This is accomplished by filtering out all systems that are noted in the `common_rdp_source category` in the Assets and Identity framework.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=*mstsc.exe AND Processes.dest_category!=common_rdp_source by Processes.dest Processes.user Processes.process 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(Processes)` 
 `remote_desktop_process_running_on_system_filter`"
"ESCU - Remote Process Instantiation via WMI - Rule","This search looks for wmic.exe being launched with parameters to spawn a process on a remote system.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = wmic.exe Processes.process=""*/node*"" Processes.process=""*process*"" Processes.process=""*call*"" Processes.process=""*create*""   by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
`security_content_ctime(lastTime)` 
 `remote_process_instantiation_via_wmi_filter`"
"ESCU - Remote Registry Key modifications - Rule","This search monitors for remote modifications to registry keys.","
 tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where  Registry.registry_path=""\\\\*""  by Registry.dest , Registry.user 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `drop_dm_object_name(Registry)` 
 `remote_registry_key_modifications_filter`"
"ESCU - Remote WMI Command Attempt - Rule","This search looks for wmic.exe being launched with parameters to operate on remote systems.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic.exe  AND Processes.process= */node* by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `remote_wmi_command_attempt_filter`"
"ESCU - RunDLL Loading DLL By Ordinal - Rule","This search looks for DLLs under %AppData% being loaded by rundll32.exe that are calling the exported function at ordinal 2. Calling exported functions by ordinal is not as common as calling by exported name. There was a bug fixed in IDAPro on 2016-08-08 that would not display functions without names.  Calling functions by ordinal would overcome the lack of name and make it harder for analyst to reverse engineer.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = rundll32.exe Processes.process=""*AppData*"" Processes.process=""*,#2"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `rundll_loading_dll_by_ordinal_filter`"
"ESCU - Ryuk Test Files Detected - Rule","The search looks for files that contain the key word *Ryuk* under any folder in the C drive, which is consistent with Ryuk propagation.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) lastTime FROM datamodel=Endpoint.Filesystem WHERE ""Filesystem.file_path""=C:\\*Ryuk* BY ""Filesystem.dest"", ""Filesystem.user"", ""Filesystem.file_path"" 
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `ryuk_test_files_detected_filter`"
"ESCU - Samsam Test File Write - Rule","The search looks for a file named ""test.txt"" written to the windows system directory tree, which is consistent with Samsam propagation.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_name) as file_name from datamodel=Endpoint.Filesystem where Filesystem.file_path=*\\windows\\system32\\test.txt by Filesystem.file_path 
 `drop_dm_object_name(Filesystem)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `samsam_test_file_write_filter`"
"ESCU - Sc exe Manipulating Windows Services - Rule","This search looks for arguments to sc.exe indicating the creation or modification of a Windows service.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sc.exe (Processes.process=""* create *"" OR Processes.process=""* config *"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `sc_exe_manipulating_windows_services_filter`"
"ESCU - Scheduled Task Name Used by Dragonfly Threat Actors - Rule","This search looks for flags passed to schtasks.exe on the command-line that indicate a task name associated with the Dragonfly threat actor was created or deleted.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe  by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 search (process=*delete* OR process=*create*) process=*reset* 
 `scheduled_task_name_used_by_dragonfly_threat_actors_filter`"
"ESCU - Scheduled tasks used in BadRabbit ransomware - Rule","This search looks for flags passed to schtasks.exe on the command-line that indicate that task names related to the execution of Bad Rabbit ransomware were created or deleted.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process  from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe (Processes.process= ""*create*""  OR Processes.process= ""*delete*"") by Processes.parent_process Processes.process_name Processes.user 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)` 
 search (process=*rhaegal* OR process=*drogon* OR *viserion_*) 
 `scheduled_tasks_used_in_badrabbit_ransomware_filter`"
"ESCU - Schtasks scheduling job on remote system - Rule","This search looks for flags passed to schtasks.exe on the command-line that indicate a job is being scheduled on a remote system.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = schtasks.exe Processes.process=""*/create*"" Processes.process=""* /s *"" by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `schtasks_scheduling_job_on_remote_system_filter`"
"ESCU - Schtasks used for forcing a reboot - Rule","This search looks for flags passed to schtasks.exe on the command-line that indicate that a forced reboot of system is scheduled.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = schtasks.exe Processes.process=""*shutdown*"" Processes.process=""*/r*"" Processes.process=""*/f*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `schtasks_used_for_forcing_a_reboot_filter`"
"ESCU - Script Execution via WMI - Rule","This search looks for scripts launched via WMI.","
 tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name = ""scrcons.exe"" by Processes.user Processes.dest Processes.process_name  
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 `script_execution_via_wmi_filter`"
"ESCU - Shim Database File Creation - Rule","This search looks for shim database files being written to default directories. The sdbinst.exe application is used to install shim database files (.sdb). According to Microsoft, a shim is a small library that transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.","
 tstats `security_content_summariesonly` count values(Filesystem.action) values(Filesystem.file_hash) as file_hash values(Filesystem.file_path) as file_path  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path=*Windows\AppPatch\Custom* by Filesystem.file_name Filesystem.dest 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
`drop_dm_object_name(Filesystem)` 
 `shim_database_file_creation_filter`"
"ESCU - Shim Database Installation With Suspicious Parameters - Rule","This search detects the process execution and arguments required to silently create a shim database.  The sdbinst.exe application is used to install shim database files (.sdb). A shim is a small library which transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sdbinst.exe Processes.process=""*-p*"" Processes.process=""*-q*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `shim_database_installation_with_suspicious_parameters_filter`"
"ESCU - Short Lived Windows Accounts - Rule","This search detects accounts that were created and deleted in a short time period.","
 tstats `security_content_summariesonly` values(All_Changes.result_id) as result_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Change where All_Changes.result_id=4720 OR All_Changes.result_id=4726 by _time span=4h All_Changes.user All_Changes.dest 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `drop_dm_object_name(""All_Changes"")` 
 search result_id = 4720 result_id=4726 
 transaction user connected=false maxspan=240m 
 table firstTime lastTime count user dest result_id 
 `short_lived_windows_accounts_filter`"
"ESCU - Single Letter Process On Endpoint - Rule","This search looks for process names that consist only of a single letter.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest, Processes.user, Processes.process, Processes.process_name 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 eval process_name_length = len(process_name), endExe = if(substr(process_name, -4) == "".exe"", 1, 0) 
 search process_name_length=5 AND endExe=1 
 table count, firstTime, lastTime, dest, user, process, process_name 
 `single_letter_process_on_endpoint_filter`"
"ESCU - SMB Traffic Spike - MLTK - Rule","This search uses the Machine Learning Toolkit (MLTK) to identify spikes in the number of Server Message Block (SMB) connections.","
 tstats `security_content_summariesonly` count values(All_Traffic.dest_ip) as dest values(All_Traffic.dest_port) as port from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=1h, All_Traffic.src 
 eval HourOfDay=strftime(_time, ""%H"") 
 eval DayOfWeek=strftime(_time, ""%A"") 
 `drop_dm_object_name(All_Traffic)` 
 apply smb_pdfmodel threshold=0.001 
 rename ""IsOutlier(count)"" as isOutlier 
 search isOutlier > 0 
 sort -count 
 table _time src dest port count 
 `smb_traffic_spike___mltk_filter`"
"ESCU - SMB Traffic Spike - Rule","This search looks for spikes in the number of Server Message Block (SMB) traffic connections.","
 tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=1h, All_Traffic.src 
 `drop_dm_object_name(""All_Traffic"")` 
 eventstats max(_time) as maxtime 
 stats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, ""-70m@m""), count, null))) as count avg(eval(if(_time<relative_time(maxtime, ""-70m@m""), count, null))) as avg stdev(eval(if(_time<relative_time(maxtime, ""-70m@m""), count, null))) as stdev by src 
 eval upperBound=(avg+stdev*2), isOutlier=if(count > upperBound AND num_data_samples >=50, 1, 0) 
 where isOutlier=1 
 table src count 
 `smb_traffic_spike_filter`"
"ESCU - Spectre and Meltdown Vulnerable Systems - Rule","The search is used to detect systems that are still vulnerable to the Spectre and Meltdown vulnerabilities.","
 tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Vulnerabilities where Vulnerabilities.cve =""CVE-2017-5753"" OR Vulnerabilities.cve =""CVE-2017-5715"" OR Vulnerabilities.cve =""CVE-2017-5754"" by Vulnerabilities.dest 
 `drop_dm_object_name(Vulnerabilities)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `spectre_and_meltdown_vulnerable_systems_filter`"
"ESCU - Spike in File Writes - Rule","The search looks for a sharp increase in the number of files written to a particular host","
 tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.action=created by _time span=1h, Filesystem.dest 
 `drop_dm_object_name(Filesystem)` 
 eventstats max(_time) as maxtime 
 stats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, ""-1d@d""), count, null))) as ""count"" avg(eval(if(_time<relative_time(maxtime, ""-1d@d""), count,null))) as avg stdev(eval(if(_time<relative_time(maxtime, ""-1d@d""), count, null))) as stdev by ""dest"" 
 eval upperBound=(avg+stdev*4), isOutlier=if((count > upperBound) AND num_data_samples >=20, 1, 0) 
 search isOutlier=1 
 `spike_in_file_writes_filter`"
"ESCU - SQL Injection with Long URLs - Rule","This search looks for long URLs that have several SQL commands visible within them.","
 tstats `security_content_summariesonly` count from datamodel=Web where Web.dest_category=web_server AND (Web.url_length > 1024 OR Web.http_user_agent_length > 200) by Web.src Web.dest Web.url Web.url_length Web.http_user_agent 
 `drop_dm_object_name(""Web"")` 
 eval num_sql_cmds=mvcount(split(url, ""alter%20table"")) + mvcount(split(url, ""between"")) + mvcount(split(url, ""create%20table"")) + mvcount(split(url, ""create%20database"")) + mvcount(split(url, ""create%20index"")) + mvcount(split(url, ""create%20view"")) + mvcount(split(url, ""delete"")) + mvcount(split(url, ""drop%20database"")) + mvcount(split(url, ""drop%20index"")) + mvcount(split(url, ""drop%20table"")) + mvcount(split(url, ""exists"")) + mvcount(split(url, ""exec"")) + mvcount(split(url, ""group%20by"")) + mvcount(split(url, ""having"")) + mvcount(split(url, ""insert%20into"")) + mvcount(split(url, ""inner%20join"")) + mvcount(split(url, ""left%20join"")) + mvcount(split(url, ""right%20join"")) + mvcount(split(url, ""full%20join"")) + mvcount(split(url, ""select"")) + mvcount(split(url, ""distinct"")) + mvcount(split(url, ""select%20top"")) + mvcount(split(url, ""union"")) + mvcount(split(url, ""xp_cmdshell"")) - 24 
 where num_sql_cmds > 3 
 `sql_injection_with_long_urls_filter`"
"ESCU - Suspicious Changes to File Associations - Rule","This search looks for changes to registry values that control Windows file associations, executed by a process that is not typical for legitimate, routine changes to this area.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name!=Explorer.exe AND Processes.process_name!=OpenWith.exe by Processes.process_id Processes.dest 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 join [
 tstats `security_content_summariesonly` values(Registry.registry_path) as registry_path count  FROM datamodel=Endpoint.Registry where Registry.registry_path=*\\Explorer\\FileExts* by Registry.process_id Registry.dest 
 `drop_dm_object_name(""Registry"")` 
 table process_id dest registry_path]
 `suspicious_changes_to_file_associations_filter`"
"ESCU - Suspicious Email - UBA Anomaly - Rule","This detection looks for emails that are suspicious because of their sender, domain rareness, or behavior differences. This is an anomaly generated by Splunk User Behavior Analytics (UBA).","
tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(All_UEBA_Events.category) as category from datamodel=UEBA where nodename=All_UEBA_Events.UEBA_Anomalies All_UEBA_Events.UEBA_Anomalies.uba_model = ""SuspiciousEmailDetectionModel"" by All_UEBA_Events.description All_UEBA_Events.severity All_UEBA_Events.user All_UEBA_Events.uba_event_type All_UEBA_Events.link All_UEBA_Events.signature All_UEBA_Events.url All_UEBA_Events.UEBA_Anomalies.uba_model 
 `drop_dm_object_name(All_UEBA_Events)` 
 `drop_dm_object_name(UEBA_Anomalies)`
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `suspicious_email___uba_anomaly_filter`"
"ESCU - Suspicious Email Attachment Extensions - Rule","This search looks for emails that have attachments with suspicious file extensions.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Email where All_Email.file_name=""*"" by All_Email.src_user, All_Email.file_name All_Email.message_id 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(""All_Email"")` 
 `suspicious_email_attachments` 
 `suspicious_email_attachment_extensions_filter`"
"ESCU - Suspicious File Write - Rule","The search looks for files created with names that have been linked to malicious activity.","
 tstats `security_content_summariesonly` count values(Filesystem.action) as action values(Filesystem.file_path) as file_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem by Filesystem.file_name Filesystem.dest 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `drop_dm_object_name(Filesystem)` 
 `suspicious_writes` 
 `suspicious_file_write_filter`"
"ESCU - Suspicious LNK file launching a process - Rule","This search looks for a ``*.lnk` file under `C:\User*` or `*\Local\Temp\*` executing a process. This is common behavior used by various spear phishing tools.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""*.lnk"" AND (Filesystem.file_path=""C:\\Users*"" OR Filesystem.file_path=""*Local\\Temp*"")  by _time span=1h Filesystem.process_id Filesystem.file_name Filesystem.file_path Filesystem.file_hash Filesystem.user 
 `drop_dm_object_name(Filesystem)` 
 rename process_id as lnk_pid 
 join lnk_pid, _time [
 tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=*  by _time span=1h Processes.parent_process_id Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process 
 `drop_dm_object_name(Processes)` 
 rename parent_process_id as lnk_pid 
 fields _time lnk_pid process_id dest process_name process_path process] 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 table firstTime, lastTime, lnk_pid, process_id, user, dest, file_name, file_path, process_name, process, process_path, file_hash 
 `suspicious_lnk_file_launching_a_process_filter`"
"ESCU - Suspicious Reg exe Process - Rule","This search looks for reg.exe being launched from a command prompt not started by the user. When a user launches cmd.exe, the parent process is usually explorer.exe. This search filters out those instances.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name != explorer.exe Processes.process_name =cmd.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest Processes.process_id Processes.parent_process_id 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 search [
 tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.parent_process_name=cmd.exe Processes.process_name= reg.exe by Processes.parent_process_id Processes.dest Processes.process_name 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 rename parent_process_id as process_id 
dedup process_id
 table process_id dest] 
 `suspicious_reg_exe_process_filter`"
"ESCU - Suspicious wevtutil Usage - Rule","The wevtutil.exe application is the windows event log utility. This searches for wevtutil.exe with parameters for clearing the application, security, setup, or system event logs.","
 tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = wevtutil.exe Processes.process=""*cl*"" (Processes.process=""*System*"" OR Processes.process=""*Security*"" OR Processes.process=""*Setup*"" OR Processes.process=""*Application*"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
`security_content_ctime(lastTime)` 
 `suspicious_wevtutil_usage_filter`"
"ESCU - Suspicious writes to windows Recycle Bin - Rule","This search detects writes to the recycle bin by a process other than explorer.exe.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name FROM datamodel=Endpoint.Filesystem where Filesystem.file_path = ""*$Recycle.Bin*"" by Filesystem.process_id Filesystem.dest 
 `drop_dm_object_name(""Filesystem"")`
 search [
 tstats `security_content_summariesonly` values(Processes.user) as user values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name != ""explorer.exe"" by Processes.process_id Processes.dest
 `drop_dm_object_name(""Processes"")` 
 table process_id dest] 
 `suspicious_writes_to_windows_recycle_bin_filter`"
"ESCU - System Information Discovery Detection - Rule","Detect system information discovery techniques used by attackers to understand configurations of the system to further exploit it.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""*wmic* qfe*"" OR Processes.process=*systeminfo* OR Processes.process=*hostname*) by Processes.user Processes.process_name Processes.process Processes.dest 
 `drop_dm_object_name(Processes)` 
 eventstats dc(process) as dc_processes_by_dest by dest 
 where dc_processes_by_dest > 2 
 stats values(process) min(firstTime) as firstTime max(lastTime) as lastTime by user, dest 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `system_information_discovery_detection_filter`"
"ESCU - System Processes Run From Unexpected Locations - Rule","This search looks for system processes that normally run out of C:\Windows\System32\ or C:\Windows\SysWOW64 that are not run from that location.  This can indicate a malicious process that is trying to hide as a legitimate process.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_path !=""C:\\Windows\\System32*"" Processes.process_path !=""C:\\Windows\\SysWOW64*"" by Processes.user Processes.dest Processes.process_name Processes.process_id Processes.process_path Processes.parent_process_name Processes.process_hash
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 `is_windows_system_file` 
 `system_processes_run_from_unexpected_locations_filter`"
"ESCU - Systems Ready for Spectre-Meltdown Windows Patch","Some AV applications can cause the Spectre/Meltdown patch for Windows not to install successfully. This registry key is supposed to be created by the AV engine when it has been patched to be able to handle the Windows patch. If this key has been written, the system can then be patched for Spectre and Meltdown.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Change_Analysis.All_Changes where All_Changes.object_category=registry AND (All_Changes.object_path=""HKLM\Software\Microsoft\Windows\CurrentVersion\QualityCompat*"") by All_Changes.dest, All_Changes.command, All_Changes.user, All_Changes.object, All_Changes.object_path 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `drop_dm_object_name(""All_Changes"")`"
"ESCU - TOR Traffic - Rule","This search looks for network traffic identified as The Onion Router (TOR), a benign anonymity network which can be abused for a variety of nefarious purposes.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.app=tor AND All_Traffic.action=allowed by All_Traffic.src_ip All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.action 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(""All_Traffic"")` 
 `tor_traffic_filter`"
"ESCU - Uncommon Processes On Endpoint - Rule","This search looks for applications on the endpoint that you have marked as uncommon.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.user Processes.process Processes.process_name 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 `drop_dm_object_name(Processes)` 
 `uncommon_processes` 
`uncommon_processes_on_endpoint_filter`"
"ESCU - Unload Sysmon Filter Driver - Rule","Attackers often disable security tools to avoid detection. This search looks for the usage of process `fltMC.exe` to unload a Sysmon Driver that will stop sysmon from collecting the data.","
 tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fltMC.exe AND Processes.process=*unload* AND Processes.process=*SysmonDrv*  by Processes.process_name Processes.process_id Processes.parent_process_name Processes.process Processes.dest Processes.user 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
`security_content_ctime(lastTime)` 
`unload_sysmon_filter_driver_filter`
 table firstTime lastTime dest user count process_name process_id parent_process_name process"
"ESCU - Unusually Long Command Line - MLTK - Rule","Command lines that are extremely long may be indicative of malicious activity on your hosts. This search leverages the Machine Learning Toolkit (MLTK) to help identify command lines with lengths that are unusual for a given user.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
 eval processlen=len(process) 
 search user!=unknown 
 apply cmdline_pdfmodel threshold=0.01 
 rename ""IsOutlier(processlen)"" as isOutlier 
 search isOutlier > 0 
 table firstTime lastTime user dest process_name process processlen count 
 `unusually_long_command_line___mltk_filter`"
"ESCU - Unusually Long Command Line - Rule","Command lines that are extremely long may be indicative of malicious activity on your hosts.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process 
 `drop_dm_object_name(""Processes"")` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)`
eval processlen=len(process) 
 eventstats stdev(processlen) as stdev, avg(processlen) as avg by dest 
 stats max(processlen) as maxlen, values(stdev) as stdevperhost, values(avg) as avgperhost by dest, user, process_name, process 
 `unusually_long_command_line_filter` 
eval threshold = 10 
 where maxlen > ((threshold*stdevperhost) + avgperhost)"
"ESCU - Update previously seen users in CloudTrail - DM","This search looks for CloudTrail events where a user logs into the console, then updates the baseline of the latest and earliest times, City, Region, and Country we have encountered this user in our dataset, grouped by user, within the last hour.","
 tstats earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Authentication where Authentication.signature=ConsoleLogin by Authentication.user Authenticaiton.src 
 iplocation Authentication.src 
 rename Authentication.user as user Authentciation.src as src 
 table user src City Region Country firstTime lastTime 
 inputlookup append=t previously_seen_users_console_logins.csv 
 stats min(firstTime) as firstTime max(lastTime) as lastTime by user src City Region Country 
 outputlookup previously_seen_users_console_logins.csv"
"ESCU - USN Journal Deletion - Rule","The fsutil.exe application is a legitimate Windows utility used to perform tasks related to the file allocation table (FAT) and NTFS file systems. The update sequence number (USN) change journal provides a log of all changes made to the files on the disk. This search looks for fsutil.exe deleting the USN journal.","
 tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fsutil.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)`
 `security_content_ctime(lastTime)` 
 search process=""*deletejournal*"" AND process=""*usn*"" 
 `usn_journal_deletion_filter`"
"ESCU - Web Servers Executing Suspicious Processes - Rule","This search looks for suspicious processes on all systems labeled as web servers.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.dest_category=""web_server"" AND (Processes.process=""*whoami*"" OR Processes.process=""*ping*"" OR Processes.process=""*iptables*"" OR Processes.process=""*wget*"" OR Processes.process=""*service*"" OR Processes.process=""*curl*"") by Processes.process Processes.process_name, Processes.dest Processes.user
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(firstTime)` 
 `security_content_ctime(lastTime)` 
 `web_servers_executing_suspicious_processes_filter`"
"ESCU - Windows DisableAntiSpyware Registry - Rule","The search looks for the Registry Key DisableAntiSpyware set to disable. This is consistent with Ryuk infections across a fleet of endpoints.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_key_name=""DisableAntiSpyware"" AND Registry.registry_value_name=""DWORD (0x00000000)"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_name 
 `drop_dm_object_name(Registry)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `windows_disableantispyware_registry_filter`"
"ESCU - Windows hosts file modification - Rule","The search looks for modifications to the hosts file on all Windows endpoints across your environment.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem  by Filesystem.file_name Filesystem.file_path Filesystem.dest 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 search Filesystem.file_name=hosts AND Filesystem.file_path=*Windows\\System32\\* 
 `drop_dm_object_name(Filesystem)` 
 `windows_hosts_file_modification_filter`"
"ESCU - Windows Security Account Manager Stopped - Rule","The search looks for a Windows Security Account Manager (SAM) was stopped via command-line. This is consistent with Ryuk infections across a fleet of endpoints.","
 tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes WHERE (""Processes.process_name""=""net*.exe"" ""Processes.process""=""*stop \""samss\""*"") BY ""Processes.dest"", ""Processes.user"", ""Processes.process"" 
 `drop_dm_object_name(Processes)` 
 `security_content_ctime(lastTime)` 
 `security_content_ctime(firstTime)` 
 `windows_security_account_manager_stopped_filter`"
"ESCU - Windows Updates Install Failures","This search is intended to give you a feel for how often Windows updates fail to install in your environment. Fluctuations in these numbers will allow you to determine when you should be concerned.","
 tstats `security_content_summariesonly` dc(Updates.dest) as count FROM datamodel=Updates where Updates.vendor_product=""Microsoft Windows"" AND Updates.status=failure by _time span=1d"
"ESCU - Windows Updates Install Successes","This search is intended to give you a feel for how often successful Windows updates are applied in your environments. Fluctuations in these numbers will allow you to determine when you should be concerned.","
 tstats `security_content_summariesonly` dc(Updates.dest) as count FROM datamodel=Updates where Updates.vendor_product=""Microsoft Windows"" AND Updates.status=installed by _time span=1d"
"ESS - Content Profile - Base",,"
 `cim_datamodelinfo` 
 fields datamodel size 
 join max=0 datamodel [
 contentinfo 
 eval datamodel=mvdedup(datamodel), name=case(isnotnull(search_name), search_name,isnotnull(panel_title), if(isnotnull(view_label), view_label, view_name) + "" - "" + panel_title, isnotnull(view_label), view_label, isnotnull(view_name), view_name, 1==1, null()), subtype=coalesce(subtype, if(isnotnull(panel_title), ""panel"", ""-"")) 
 fields app datamodel name type subtype
 stats list(*) as *, count by datamodel app 
 eval name=mvjoin(name, "";""), type=mvjoin(type, "";""), subtype=mvjoin(subtype, "";"")] 
 fields datamodel app size name type subtype count 
 makemv delim="";"" name 
 makemv delim="";"" type 
 makemv delim="";"" subtype"
"Identity - Email Activity to Non-corporate Domains by Users Per 1d - Model Gen",,"
 tstats sum(All_Email.size) as bytes, values(All_Email.recipient) as recipient from datamodel=Email.All_Email  where NOT `cim_corporate_email_domain_search(""All_Email.recipient"")` by _time, All_Email.src_user, All_Email.src_user_bunit span=1h 
 `drop_dm_object_name(""All_Email"")` 
 fit DensityFunction bytes by src_user_bunit partial_fit=true dist=norm into app:email_activity_to_non_corporate_by_user_1h"
"Identity - High Volume Email Activity with Non-corporate Domains - Rule","Alerts on high volume email activity by a user to non-corporate domains.","
 tstats sum(All_Email.size) as bytes, values(All_Email.recipient) as recipient from datamodel=Email.All_Email where NOT `cim_corporate_email_domain_search(""All_Email.recipient"")` by All_Email.src_user, All_Email.src_user_bunit 
 `drop_dm_object_name(""All_Email"")` 
 `mltk_apply_upper(""app:email_activity_to_non_corporate_by_user_1h"", ""medium"", ""bytes"")`"
"Identity - Web Uploads to Non-corporate Domains - Rule","Alerts on high volume web uploads by a user to non-corporate domains.","
 tstats sum(Web.bytes) as bytes from datamodel=Web.Web where (Web.http_method=""POST"" OR Web.http_method=""PUT"")  NOT (`cim_corporate_web_domain_search(""Web.url"")`) by Web.user, Web.user_bunit 
 `drop_dm_object_name(""Web"")` 
 `mltk_apply_upper(""app:web_upload_to_non_corporate_by_user_1h"", ""medium"", ""bytes"")`"
"Identity - Web Uploads to Non-corporate Domains by Users Per 1d - Model Gen",,"
 tstats sum(Web.bytes) as bytes from datamodel=Web.Web where NOT(`cim_corporate_web_domain_search(""Web.url"")`) (Web.http_method=""POST"" OR Web.http_method=""PUT"") by _time, Web.user, Web.user_bunit span=1h 
 `drop_dm_object_name(""Web"")` 
 fit DensityFunction bytes by user_bunit partial_fit=true dist=norm into app:web_upload_to_non_corporate_by_user_1h"
"IDS - Activity By Category",,"
 tstats count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.category 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Activity By IDS Type",,"
 tstats count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.ids_type 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Activity By Severity",,"
 tstats count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.severity 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort - count"
"IDS - Activity Over Time",,"
 tstasts count from datamodel=Intrusion_Detection.IDS_Attacks by _time span=10m 
 timechart minspan=10m useother=`useother` count"
"IDS - Activity Over Time By Attack",,"
 tstasts count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.signature span=10m 
 timechart minspan=10m useother=`useother` count by IDS_Attacks.signature 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Activity Over Time By Category",,"
 tstasts count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.category span=10m 
 timechart minspan=10m useother=`useother` count by IDS_Attacks.category 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Activity Over Time By Destination",,"
 tstasts count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.dest span=10m 
 timechart minspan=10m useother=`useother` count by IDS_Attacks.dest 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Activity Over Time By Device",,"
 tstasts count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.dvc span=10m 
 timechart minspan=10m useother=`useother` count by IDS_Attacks.dvc 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Activity Over Time By Severity",,"
 tstasts count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.severity span=10m 
 timechart minspan=10m useother=`useother` count by IDS_Attacks.severity 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Activity Over Time By Source",,"
 tstasts count from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.src span=10m 
 timechart minspan=10m useother=`useother` count by IDS_Attacks.src 
 `drop_dm_object_name(""IDS_Attacks"")`"
"IDS - Scanning Activity (Many Attacks)",,"
 tstats dc(IDS_Attacks.signature) as attack_count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort 10 - attack_count"
"IDS - Scanning Activity (Many Systems)",,"
 tstats dc(IDS_Attacks.dest) as dest_count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort 10 - dest_count"
"IDS - Top Attacks By Attack",,"
 tstats dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.signature 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort - count"
"IDS - Top Attacks By Category",,"
 tstats dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.category 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort - count"
"IDS - Top Attacks By Destination",,"
 tstats dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.dest 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort - count"
"IDS - Top Attacks By Device",,"
 tstats dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.dvc 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort - count"
"IDS - Top Attacks By Severity",,"
 tstats dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.src) as src_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.severity 
 `drop_dm_object_name(""IDS_Attacks"")`  
 sort - count"
"IDS - Top Attacks By Source",,"
 tstats dc(IDS_Attacks.signature) as attack_count,dc(IDS_Attacks.dest) as dest_count,count from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src 
 `drop_dm_object_name(""IDS_Attacks"")` 
 sort - count"
"Incident Review - Mean Time To Closure",,"
 tstats earliest(_time) as _time from datamodel=Incident_Management.Notable_Events_Meta by source,Notable_Events_Meta.rule_id 
 `drop_dm_object_name(""Notable_Events_Meta"")` 
 `get_correlations` 
 `get_current_status` 
 search status_label=""Closed"" 
 eval ttc=mvindex(review_time, 0) 
 eval ttc=ttc-_time 
 stats count avg(ttc) as avg_ttc,max(ttc) as max_ttc by rule_name 
 sort - avg_ttc 
 `uptime2string(avg_ttc, avg_ttc)` 
 `uptime2string(max_ttc, max_ttc)` 
 rename *_ttc* as *(time_to_closure)* 
 fields - *_dec"
"Incident Review - Mean Time To Triage",,"
 tstats earliest(_time) as _time from datamodel=Incident_Management.Notable_Events_Meta by source,Notable_Events_Meta.rule_id 
 `drop_dm_object_name(""Notable_Events_Meta"")` 
 `get_correlations` 
 join rule_id [
 from inputlookup:incident_review_lookup 
 eval _time=time 
 stats earliest(_time) as review_time by rule_id] 
 eval ttt=review_time-_time 
 stats count,avg(ttt) as avg_ttt,max(ttt) as max_ttt by rule_name 
 sort - avg_ttt 
 `uptime2string(avg_ttt, avg_ttt)` 
 `uptime2string(max_ttt, max_ttt)` 
 rename *_ttt* as *(time_to_triage)* 
 fields - *_dec"
"Malware - Activity Over Time",,"
 tstasts count from datamodel=Malware.Malware_Attacks by _time span=10m 
 timechart minspan=10m useother=`useother` count"
"Malware - Activity Over Time By Action",,"
 tstasts count from datamodel=Malware.Malware_Attacks by _time,Malware_Attacks.action span=10m 
 timechart minspan=10m useother=`useother` count by Malware_Attacks.action 
 `drop_dm_object_name(""Malware_Attacks"")`"
"Malware - Activity Over Time By Infection",,"
 tstasts count from datamodel=Malware.Malware_Attacks by _time,Malware_Attacks.signature span=10m 
 timechart minspan=10m useother=`useother` count by Malware_Attacks.signature 
 `drop_dm_object_name(""Malware_Attacks"")`"
"Malware - Repeat Infections",,"
 tstats values(Malware_Attacks.action) as action,count from datamodel=Malware.Malware_Attacks where Malware_Attacks.action!=allowed by _time,Malware_Attacks.signature,Malware_Attacks.dest span=1d 
 `drop_dm_object_name(""Malware_Attacks"")` 
 stats values(action) as action,count as day_count by signature,dest 
 sort 100 - day_count"
"Malware - Top 10 Infected Domains",,"
 tstats dc(Malware_Attacks.dest) as dest_count from datamodel=Malware.Malware_Attacks by Malware_Attacks.dest_nt_domain 
 `drop_dm_object_name(""Malware_Attacks"")` 
 sort 10 - dest_count"
"Malware - Top 10 Infected Systems",,"
 tstats dc(Malware_Attacks.signature) as signature_count from datamodel=Malware.Malware_Attacks by Malware_Attacks.dest 
 `drop_dm_object_name(""Malware_Attacks"")` 
 sort 10 - signature_count"
"Malware - Top 10 Infections",,"
 tstats dc(Malware_Attacks.dest) as dest_count from datamodel=Malware.Malware_Attacks by Malware_Attacks.signature 
 `drop_dm_object_name(""Malware_Attacks"")` 
 sort 10 - dest_count"
"Malware - Unique Infected Systems",,"
 tstats estdc(Malware_Attacks.dest) as estdc(dest) from datamodel=Malware.Malware_Attacks where Malware_Attacks.action=""allowed"""
"Malware - Unique Infections",,"
 tstats estdc(Malware_Attacks.signature) as estdc(signature) from datamodel=Malware.Malware_Attacks where Malware_Attacks.action=""allowed"""
"Network - Certificate Tracker - Lookup Gen",,"
 tstats summariesonly=false min(_time) as firstTime,max(_time) as lastTime from datamodel=Certificates.All_Certificates where nodename=All_Certificates.SSL by All_Certificates.SSL.ssl_serial,All_Certificates.SSL.ssl_hash,All_Certificates.SSL.ssl_subject,All_Certificates.SSL.ssl_issuer 
 rename All_Certificates.SSL.ssl* as certificate* 
 inputlookup append=T certificate_tracker 
 stats min(firstTime),max(lastTime) by certificate_serial,certificate_hash,certificate_subject,certificate_issuer 
 rename certificate* as ssl* 
 extract cim_ssl_issuer_common_name,cim_ssl_issuer_email,cim_ssl_issuer_unit,cim_ssl_subject_common_name,cim_ssl_subject_email,cim_ssl_subject_unit 
 rename ssl* as certificate* 
 outputlookup override_if_empty=false certificate_tracker 
 stats count"
"Network - Communication Rule Tracker - Lookup Gen","Maintains a list of Traffic rule values by device and vendor and the first and last time they were seen","
 tstats count from datamodel=Network_Traffic.All_Traffic where All_Traffic.rule!=unknown by _time,All_Traffic.dvc,All_Traffic.rule,All_Traffic.vendor_product span=1d 
 `drop_dm_object_name(""All_Traffic"")` 
 convert timeformat=""%m"" ctime(_time) as month 
 convert timeformat=""%Y"" ctime(_time) as year
 stats sum(count) as count by month,year,dvc,rule,vendor_product 
 eval _key=sha1(month.""
"".year.""
"".dvc.""
"".rule.""
"".vendor_product) 
 lookup communication_rule_tracker _key OUTPUTNEW count as lookup_count 
 eval count=(count+if(isnum(lookup_count), lookup_count, 0)), date=month.""-01-"".year 
 convert timeformat=""%m-%d-%Y"" mktime(date) as _time 
 `daysago(396)`
 fields - _time,date,dayDiff,lookup_count 
 outputlookup append=T key_field=_key communication_rule_tracker 
 stats count"
"Network - Event Count By Signature Per Hour - Model Gen",,"
 tstats count as ids_attacks from datamodel=Intrusion_Detection.IDS_Attacks by _time,IDS_Attacks.signature span=1h 
 `drop_dm_object_name(""IDS_Attacks"")` 
 fit DensityFunction ids_attacks by signature partial_fit=true dist=norm into app:count_by_signature_1h"
"Network - Excessive DNS Failures - Rule","Alerts when a host receives many DNS failures in a short span","
 tstats count from datamodel=""Network_Resolution"".""DNS"" where ""DNS.reply_code""!=""No error"" AND ""DNS.reply_code""!=""NoError"" by ""DNS.src""  
 rename ""DNS.src"" as ""src"" 
 where 'count'>100"
"Network - Excessive DNS Queries - Rule","Alerts when a host starts sending excessive DNS queries","
 tstats count from datamodel=""Network_Resolution"".""DNS"" where    ""DNS.message_type""=""QUERY"" by ""DNS.src"" 
 rename ""DNS.src"" as ""src"" 
 where 'count'>100"
"Network - Excessive HTTP Failure Responses - Rule","Alerts when a host generates a lot of HTTP failures in a short span of time","
 tstats count from datamodel=""Web"".""Web"" where    (""Web.status""=400 OR ""Web.status""=403 OR ""Web.status""=404 OR ""Web.status""=411 OR ""Web.status""=500 OR ""Web.status""=501) by ""Web.dest"" 
 rename ""Web.dest"" as ""dest"" 
 where 'count'>50"
"Network - High Volume of Traffic from High or Critical Host - Rule","Alerts when a system of high or critical severity generates a high volume of outbound web activity. This may indicate that the system has been compromised.","
 tstats sum(""Web.bytes_out"") as ""bytes_out"" from datamodel=""Web"".""Web"" where    ""Web.bytes_out"">0 AND (""Web.src_priority""=""high"" OR ""Web.src_priority""=""critical"") by ""Web.src"",""Web.dest"" 
 rename ""Web.src"" as ""src"",""Web.dest"" as ""dest"" 
 where 'bytes_out'>10485760"
"Network - IDS Attack Tracker - Lookup Gen","Maintains a list of IDS attacks by vendor and the first and last time they were seen","
 tstats min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Intrusion_Detection"".""IDS_Attacks"" by ""IDS_Attacks.ids_type"",""IDS_Attacks.signature"",""IDS_Attacks.vendor_product"" 
 rename ""IDS_Attacks.ids_type"" as ""ids_type"",""IDS_Attacks.signature"" as ""signature"",""IDS_Attacks.vendor_product"" as ""vendor_product"" 
 eval _key=sha1('ids_type'.'signature'.'vendor_product') 
 lookup ""ids_attack_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" 
 eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') 
 fields - ""lookup_firstTime"",""lookup_lastTime"" 
 outputlookup append=T key_field=_key ""ids_attack_tracker"" 
 stats count"
"Network - IDS Category Tracker - Lookup Gen","Maintains a list of IDS attack categories by vendor and the first and last time they were seen","
 tstats min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Intrusion_Detection"".""IDS_Attacks"" where ""IDS_Attacks.category""!=""unknown"" by ""IDS_Attacks.category"",""IDS_Attacks.vendor_product"" 
 rename ""IDS_Attacks.category"" as ""category"",""IDS_Attacks.vendor_product"" as ""vendor_product"" 
 inputlookup append=T ""ids_category_tracker"" 
 stats min(""firstTime"") as ""firstTime"",max(""lastTime"") as ""lastTime"" by ""category"",""vendor_product"" 
 outputlookup override_if_empty=false ""ids_category_tracker"" 
 stats count"
"Network - Network Device Rebooted - Rule","Increases the risk score of network devices that have been rebooted.","
 tstats count from datamodel=""Change"".""All_Changes"" where nodename=""All_Changes.Network_Changes.Device_Restarts"" by ""All_Changes.dvc"",""_time"" span=""1s"" 
 rename ""All_Changes.dvc"" as ""dvc"""
"Network - Port Activity By Destination Port - Model Gen",,"
 tstats count as dest_port_traffic_count from datamodel=Network_Traffic.All_Traffic by All_Traffic.dest_port,_time span=1d 
 `drop_dm_object_name(""All_Traffic"")` 
 fit DensityFunction dest_port_traffic_count by dest_port partial_fit=true dist=norm into app:count_by_dest_port_1d"
"Network - Port And Protocol Tracker - Lookup Gen","Maintains a list of allowed Traffic by unique transport protocol and destination port combination and the first and last time they were seen","
 tstats min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Network_Traffic"".""All_Traffic"" where ""All_Traffic.action""=""allowed"" by ""All_Traffic.transport"",""All_Traffic.dest_port"" 
 rename ""All_Traffic.transport"" as ""transport"",""All_Traffic.dest_port"" as ""dest_port"" 
 inputlookup append=T ""port_protocol_tracker"" 
 stats min(""firstTime"") as ""firstTime"",max(""lastTime"") as ""lastTime"" by ""transport"",""dest_port"" 
 outputlookup override_if_empty=false ""port_protocol_tracker"" 
 stats count"
"Network - Substantial Increase in an Event - Rule","Alerts when a statistically significant increase in a particular intrusion event is observed.","
 tstats count as ids_attacks,values(IDS_Attacks.tag) as tag from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.signature 
 `drop_dm_object_name(""IDS_Attacks"")` 
 `mltk_apply_upper(""app:count_by_signature_1h"", ""high"", ""ids_attacks"")`"
"Network - Substantial Increase in Port Activity (By Destination) - Rule","Alerts when a statistically significant increase in events on a given port is observed.","
 tstats count as dest_port_traffic_count,values(All_Traffic.tag) as tag from datamodel=Network_Traffic.All_Traffic by All_Traffic.dest_port 
 `drop_dm_object_name(""All_Traffic"")` 
 `mltk_apply_upper(""app:count_by_dest_port_1d"", ""extreme"", ""dest_port_traffic_count"")`"
"Network - Traffic Bytes Tracker - Lookup Gen","Maintains Traffic byte statistics","
 tstats min(All_Traffic.bytes) as min_bytes,avg(All_Traffic.bytes) as mean_bytes,max(All_Traffic.bytes) as max_bytes,stdev(All_Traffic.bytes) as stdev,count as total_count from datamodel=Network_Traffic.All_Traffic where All_Traffic.bytes>0 
 appendcols [
 from inputlookup:standard_deviations 
 rename stdev as standard_deviation] 
 filldown 
 fillnull value=0 min_bytes,mean_bytes,max_bytes,stdev,total_count 
 `stdev_desired_result(standard_deviation,mean_bytes,""gt_bytes"")` 
 `stdev_desired_result(-standard_deviation,mean_bytes,""lt_bytes"")` 
 eval search=case(gt_bytes>0 AND lt_bytes>0, ""(All_Traffic.bytes>"".floor(gt_bytes)."" OR All_Traffic.bytes<"".ceil(lt_bytes)."")"",gt_bytes>0 AND lt_bytes<=0,""All_Traffic.bytes>"".floor(gt_bytes),gt_bytes<=0 AND lt_bytes>0,""All_Traffic.bytes<"".ceil(lt_bytes),gt_bytes<=0 AND lt_bytes<=0,""All_Traffic.bytes=-1"") 
 rename standard_deviation as Z 
 rename total as total_count 
 fields min_bytes,mean_bytes,max_bytes,stdev,total_count,Z,search 
 `round(mean_bytes)` 
 `round(stdev)` 
 outputlookup traffic_bytes_tracker 
 stats count"
"Network - Traffic Source Count Per 30m - Model Gen",,"
 tstats dc(All_Traffic.src) as src_count from datamodel=Network_Traffic.All_Traffic by _time span=30m 
 fit DensityFunction src_count partial_fit=true dist=norm into app:network_traffic_src_count_30m"
"Network - Traffic Volume Per 30m - Model Gen",,"
 tstats count as total_count from datamodel=Network_Traffic.All_Traffic by _time span=30m 
 fit DensityFunction total_count partial_fit=true dist=norm into app:network_traffic_count_30m"
"Network - Unroutable Host Activity - Rule","Alerts when activity to or from a host that is unroutable is detected.","
 tstasts count,values(sourcetype) from datamodel=Network_Traffic.All_Traffic where All_Traffic.action=""allowed"" AND `bogonlist_src_dest_subsearch(All_Traffic)` by All_Traffic.src,All_Traffic.dest 
 `drop_dm_object_name(""All_Traffic"")` 
 tstasts append=true count,values(sourcetype) from datamodel=Intrusion_Detection.IDS_Attacks where `bogonlist_src_dest_subsearch(IDS_Attacks)` by IDS_Attacks.src,IDS_Attacks.dest 
 `drop_dm_object_name(""IDS_Attacks"")` 
 tstasts append=true count,values(sourcetype) from datamodel=Web.Web where `bogonlist_src_dest_subsearch(Web)` by Web.src,Web.dest 
 `drop_dm_object_name(""Web"")` 
 stats count,values(sourcetype) as sourcetype by src,dest 
 `bogonlist_lookup` 
 eval bogon_ip=if(dest_is_bogon==""true"" AND dest_is_internal!=""true"",dest,src) 
 fields + sourcetype,src,dest,bogon_ip"
"Network - Unusual Volume of Network Activity - Rule","Detects unusual network traffic that may be indicative of a DoS attack as indicated by a high number of unique sources or a high volume of firewall packets","
 tstats dc(All_Traffic.src) as src_count,count as total_count from datamodel=Network_Traffic.All_Traffic 
 apply app:network_traffic_src_count_30m [
`get_qualitative_upper_threshold(extreme)`] 
 apply app:network_traffic_count_30m [
`get_qualitative_upper_threshold(extreme)`] 
 search ""IsOutlier(src_count)""=1 OR ""IsOutlier(total_count)""=1"
"Network - URL Length Tracker - Lookup Gen","Maintains Web url length statistics","
 tstats min(Web.url_length) as min_length,avg(Web.url_length) as mean_length,max(Web.url_length) as max_length,stdev(Web.url_length) as stdev,count as total_count from datamodel=Web.Web where Web.url!=""unknown"" 
 appendcols [
 from inputlookup:standard_deviations 
 rename stdev as standard_deviation] 
 filldown 
 fillnull value=0 min_length,mean_length,max_length,stdev,total_count 
 `stdev_desired_result(standard_deviation,mean_length,""gt_length"")` 
 `stdev_desired_result(-standard_deviation,mean_length,""lt_length"")` 
 eval search=case(gt_length>0 AND lt_length>0,""(Web.url_length>"" .floor(gt_length)."" OR Web.url_length<"".ceil(lt_length)."" OR url_length>"".floor(gt_length)."" OR url_length<"".ceil(lt_length)."")"",gt_length>0 AND lt_length<=0,""(Web.url_length>"".floor(gt_length)."" OR url_length>"".floor(gt_length)."")"",gt_length<=0 AND lt_length>0,""(Web.url_length<"".ceil(lt_length)."" OR url_length<"".ceil(lt_length)."")"",gt_length<=0 AND lt_length<=0,""(Web.url_length=-1 OR url_length=-1)"") 
 rename standard_deviation as Z 
 rename total as total_count 
 fields min_length,mean_length,max_length,stdev,total_count,Z,search 
 `round(mean_length)` 
 `round(stdev)` 
 outputlookup url_length_tracker 
 stats count"
"Network - User Agent Length Tracker - Lookup Gen","Maintains Web user agent length statistics","
 tstats min(Web.http_user_agent_length) as min_length,avg(Web.http_user_agent_length) as mean_length,max(Web.http_user_agent_length) as max_length,stdev(Web.http_user_agent_length) as stdev,count as total_count from datamodel=Web.Web where Web.http_user_agent!=""unknown"" 
 appendcols [
 from inputlookup:standard_deviations 
 rename stdev as standard_deviation] 
 filldown 
 fillnull value=0 min_length,mean_length,max_length,stdev,total_count 
 `stdev_desired_result(standard_deviation,mean_length,""gt_length"")` 
 `stdev_desired_result(-standard_deviation,mean_length,""lt_length"")` 
 eval search=case(gt_length>0 AND lt_length>0, ""(Web.http_user_agent_length>"".floor(gt_length)."" OR Web.http_user_agent_length<"".ceil(lt_length)."")"",gt_length>0 AND lt_length<=0,""Web.http_user_agent_length>"".floor(gt_length),gt_length<=0 AND lt_length>0,""Web.http_user_agent_length<"".ceil(lt_length),gt_length<=0 AND lt_length<=0,""Web.http_user_agent_length=-1"") 
 rename standard_deviation as Z 
 rename total as total_count 
 fields min_length,mean_length,max_length,stdev,total_count,Z,search 
 `round(mean_length)` 
 `round(stdev)` 
 outputlookup user_agent_length_tracker 
 stats count"
"Network - Vulnerability Signature Reference - Lookup Gen","Maintains a list of vulnerability signatures by vendor (including external reference information such as cve) and the first and last time they were seen","
 tstats min(_time) as firstTime,max(_time) as lastTime,values(Vulnerabilities.bugtraq) as bugtraq,values(Vulnerabilities.cert) as cert,values(Vulnerabilities.cve) as cve,values(Vulnerabilities.msft) as msft,values(Vulnerabilities.mskb) as mskb,values(Vulnerabilities.xref) as xref from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.signature,Vulnerabilities.vendor_product 
 `drop_dm_object_name(""Vulnerabilities"")` 
 inputlookup append=T vuln_signature_reference 
 `makemv(bugtraq)` 
 `makemv(cert)` 
 `makemv(cve)` 
 `makemv(msft)` 
 `makemv(mskb)` 
 `makemv(xref)` 
 stats min(firstTime) as firstTime,max(lastTime) as lastTime,values(cve) as cve,values(bugtraq) as bugtraq,values(cert) as cert,values(msft) as msft,values(mskb) as mskb,values(xref) as xref by signature,vendor_product 
 `makesv(bugtraq)` 
 `makesv(cert)` 
 `makesv(cve)` 
 `makesv(msft)` 
 `makesv(mskb)` 
 `makesv(xref)` 
 outputlookup override_if_empty=false vuln_signature_reference 
 stats count"
"Network - Vulnerability Tracker - Lookup Gen","Maintains a list of Vulnerabilities by signature, destination and the first and last time they were seen.","
 tstats min(""_time"") as ""firstTime"",max(""_time"") as ""lastTime"" from datamodel=""Vulnerabilities"".""Vulnerabilities"" where ""Vulnerabilities.severity"" != ""informational"" AND ""Vulnerabilities.severity"" != ""low"" by ""Vulnerabilities.signature"",""Vulnerabilities.dest"" 
 rename ""Vulnerabilities.signature"" as ""signature"",""Vulnerabilities.dest"" as ""dest"" 
 eval _key=sha1('signature'.'dest') 
 lookup ""vulnerability_tracker"" ""_key"" OUTPUTNEW ""firstTime"" as ""lookup_firstTime"",""lastTime"" as ""lookup_lastTime"" 
 eval ""firstTime""=min('firstTime','lookup_firstTime'),""lastTime""=max('lastTime','lookup_lastTime') 
 fields - ""lookup_firstTime"",""lookup_lastTime"" 
 outputlookup append=T key_field=_key ""vulnerability_tracker"" 
 stats count"
"Network - Whois Tracker - Checkpoint Gen",,"
 tstats max(_time) as _time from datamodel=Web.Web by Web.dest 
 rename Web.dest as domain 
 `truncate_domain(domain)` 
 stats min(_time) as _time by domain 
 eval _key=sha1(domain) 
 lookup whois_tracker _key OUTPUTNEW _key as discard 
 where isnull(discard) 
 outputlookup key_field=_key append=T whois_tracker 
 `outputcheckpoint_whois` 
 stats count"
"Network - Whois Tracker - Lookup Gen","Maintains a list of whois scan data including the resolved_domain (if domain was an IP) and the date the domain was created","
 tstats max(_time) as _time,latest(All_Domains.resolved_domain) as resolved_domain,latest(All_Domains.created) as created from datamodel=Domain_Analysis.All_Domains by All_Domains.domain 
 `drop_dm_object_name(""All_Domains"")` 
 `truncate_domain(domain)` 
 eval _key=sha1(domain) 
 lookup whois_tracker _key OUTPUTNEW _time as lookup_time, resolved_domain as lookup_resolved_domain, created as lookup_created 
 eval lookup_time=if(isnum(lookup_time), lookup_time, 0), _time=max(_time, lookup_time), resolved_domain=if(_time>lookup_time, resolved_domain, lookup_resolved_domain), created=if(_time>lookup_time, created, lookup_created) 
 fields domain, _time, resolved_domain, created 
 search domain=* 
 outputlookup key_field=_key append=T whois_tracker 
 stats count"
"Performance - Average System Uptime",,"
 tstats avg(All_Performance.OS.Uptime.uptime) as avg_uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime All_Performance.OS.Uptime.uptime!=unknown All_Performance.OS.Uptime.uptime>=0 
 `uptime2string(avg_uptime,avg_uptime)` 
 rename avg_uptime as ""avg(uptime)"" 
 fields avg(uptime)"
"Performance - Maximum System Uptime",,"
 tstats latest(All_Performance.OS.Uptime.uptime) as uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime All_Performance.OS.Uptime.uptime!=unknown All_Performance.OS.Uptime.uptime>=0 by All_Performance.dest 
 sort 1 - uptime 
 `drop_dm_object_name(""All_Performance"")` 
 `uptime2string(uptime,uptime)` 
 eval label=dest."" has been up for "".uptime 
 fields label,dest,uptime"
"Performance - Memory Utilization By System",,"
 tstats latest(All_Performance.Memory.mem) as mem,latest(All_Performance.Memory.mem_used) as mem_used,latest(All_Performance.Memory.mem_free) as mem_free from datamodel=Performance.All_Performance where nodename=All_Performance.Memory by All_Performance.dest 
 `drop_dm_object_name(""All_Performance"")` 
 eval mem_used=if(isnotnull(mem) AND isnotnull(mem_free),mem-mem_free,null()) 
 eval mem_used_percent=if(isnotnull(mem) AND mem>0,round(mem_used*100/mem,1),null()) 
 sort 100 - mem_used_percent 
 eval ""mem(GB)""=round(mem/1024,1) 
 eval ""mem_used(GB)""=round(mem_used/1024,1) 
 eval ""mem_free(GB)""=round(mem_free/1024,1) 
 fields dest,*(GB),mem_used_percent"
"Performance - Minimum System Uptime",,"
 tstats latest(All_Performance.OS.Uptime.uptime) as uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime All_Performance.OS.Uptime.uptime!=unknown All_Performance.OS.Uptime.uptime>=0 by All_Performance.dest 
 sort 1 + uptime 
 `drop_dm_object_name(""All_Performance"")` 
 `uptime2string(uptime,uptime)` 
 eval label=dest."" has been up for "".uptime 
 fields label,dest,uptime"
"Performance - Storage Utilization By System",,"
 tstats latest(All_Performance.Storage.storage) as storage, latest(All_Performance.Storage.storage_free) as storage_free, latest(All_Performance.Storage.storage_free_percent) as storage_free_percent, latest(All_Performance.Storage.storage_used) as storage_used, latest(All_Performance.Storage.storage_used_percent) as storage_used_percent from datamodel=Performance.All_Performance where nodename=All_Performance.Storage by All_Performance.dest,All_Performance.Storage.mount 
 sort 100 + storage_free_percent 
 `drop_dm_object_name(""All_Performance"")` 
 `drop_dm_object_name(""Storage"")` 
 eval storage=if(isnull(storage) AND isnotnull(storage_free) AND isnotnull(storage_free_percent),(storage_free)*(1-(storage_free_percent/100)),storage) 
 eval storage_used=if(isnotnull(storage) AND isnotnull(storage_free),storage-storage_free,storage_used) 
 eval ""storage(GB)""=round(storage/1073741824,1) 
 eval ""storage_free(GB)""=round(storage_free/1073741824,1) 
 eval storage_free_percent=round(storage_free_percent,1) 
 eval ""storage_used(GB)""=round(storage_used/1073741824,1) 
 fields dest,mount,*(GB),storage_free_percent"
"Performance - Systems Not Time Synching",,"
 tstats min(_time) as firstTime,max(_time) as lastTime,latest(All_Performance.dest_should_timesync) as dest_should_timesync from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=success by All_Performance.dest 
 `drop_dm_object_name(""All_Performance"")` 
 `timeDiff(lastTime)` 
 search timeDiff>86400 
 sort 100 + lastTime 
 `uitime(firstTime)` 
 `uitime(lastTime)` 
 fields firstTime,lastTime,dest,dest_should_timesync"
"Performance - Time Service Start Mode Anomalies",,"
 tstats max(_time) as _time,latest(Services.start_mode) as start_mode,latest(Services.status) as status,latest(Services.dest_should_timesync) as dest_should_timesync from datamodel=Endpoint.Services where (Services.tag=time Services.tag=synchronize) by Services.dest,Services.service 
 `drop_dm_object_name(""Services"")` 
 search start_mode!=auto 
 sort 100 + start_mode 
 fields _time,dest,dest_should_timesync,service,start_mode,status"
"Performance - Time Synchronization Failures",,"
 tstats max(_time) as _time,latest(All_Performance.dest_should_timesync) as dest_should_timesync,count from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=failure by All_Performance.dest 
 eval action=""failure"" 
 `drop_dm_object_name(""All_Performance"")` 
 fields _time,action,dest,dest_should_timesync,count"
"Performance - Top-Average CPU Load Over Time By System",,"
 tstasts avg(All_Performance.CPU.cpu_load_percent) from datamodel=Performance.All_Performance where nodename=All_Performance.CPU [
 tstasts avg(All_Performance.CPU.cpu_load_percent) from datamodel=Performance.All_Performance where nodename=All_Performance.CPU by All_Performance.dest 
 stats avg(All_Performance.CPU.cpu_load_percent) as ""avg"" by All_Performance.dest 
 sort 10 - ""avg"" 
 fields All_Performance.dest 
 format] by _time,All_Performance.dest span=10m 
 timechart minspan=10m avg(All_Performance.CPU.cpu_load_percent) as ""avg_cpu_load(%)"" by All_Performance.dest 
 `drop_dm_object_name(""All_Performance"")`"
"Performance - Uptime By System",,"
 tstats latest(All_Performance.OS.Uptime.uptime) as uptime from datamodel=Performance.All_Performance where nodename=All_Performance.OS.Uptime by All_Performance.dest 
 `drop_dm_object_name(""All_Performance"")` 
 sort 100 - uptime 
 `uptime2string(uptime,uptime)` 
 fields dest,uptime"
"Risk - 24 Hour Risk Threshold Exceeded - Rule","RBA: Risk Threshold exceeded for an object within the previous 24 hours.","
 tstats sum(All_Risk.calculated_risk_score) as risk_score, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type 
 where risk_score > 100 
 `drop_dm_object_name(""All_Risk"")` 
 eval ""annotations.mitre_attack""='annotations.mitre_attack.mitre_technique_id' 
 `get_risk_severity(risk_score)`"
"Risk - 7 Day ATT&CK Tactic Threshold Exceeded - Rule","ATT&CK tactic threshold exceeded for an object within the previous 7 days.","
 tstats sum(All_Risk.calculated_risk_score) as risk_score, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type 
 `drop_dm_object_name(""All_Risk"")` 
 eval ""annotations.mitre_attack""='annotations.mitre_attack.mitre_technique_id' 
 where mitre_tactic_id_count >= 3 and source_count >= 4"
"Risk - Median Object Risk Per Day - Model Gen",,"
 tstats sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time,All_Risk.risk_object,All_Risk.risk_object_type span=1d 
 `drop_dm_object_name(""All_Risk"")` 
 fit DensityFunction current_count partial_fit=true dist=norm into app:median_object_risk_1d"
"Risk - Median Object Risk Per Day by Object Type - Model Gen",,"
 tstats sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time,All_Risk.risk_object,All_Risk.risk_object_type span=1d 
 `drop_dm_object_name(""All_Risk"")` 
 fit DensityFunction current_count by risk_object_type partial_fit=true dist=norm into app:median_object_risk_by_object_type_1d"
"Risk - Most Active Sources",,"
 tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score,dc(All_Risk.risk_object) as risk_objects,count from datamodel=Risk.All_Risk by source 
 sort 1000 - count,risk_score"
"Risk - Risk Modifiers Over Time",,"
 tstats prestats=true summariesonly=false sum(All_Risk.calculated_risk_score),count from datamodel=Risk.All_Risk by _time span=10m 
 timechart minspan=10m sum(All_Risk.calculated_risk_score) as risk_score,count"
"Risk - Risk Score By Business Unit",,"
 tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type 
 `drop_dm_object_name(""All_Risk"")` 
 eval dest=if(risk_object_type==""system"",risk_object,null()) 
 eval user=if(risk_object_type==""user"",risk_object,null()) 
 `get_asset(dest)` 
 `get_identity4events(user)` 
 `mvappend_field(dest_bunit,user_bunit)` 
 stats sum(risk_score) as risk_score,dc(risk_object) by dest_bunit 
 eval avg_score=floor('risk_score'/'dc(risk_object)') 
 rename dest_bunit as bunit"
"Risk - Risk Score By Object",,"
 tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score,dc(source) as source_count,count from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type 
 `drop_dm_object_name(""All_Risk"")` 
 sort 1000 - risk_score"
"Risk - Total Risk By Risk Object Type Per Day - Model Gen",,"
 tstats sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time,All_Risk.risk_object_type span=1d 
 `drop_dm_object_name(""All_Risk"")` 
 fit DensityFunction current_count by risk_object_type partial_fit=true dist=norm into app:total_risk_by_object_type_1d"
"Risk - Total Risk Per Day - Model Gen",,"
 tstats sum(All_Risk.calculated_risk_score) as current_count from datamodel=Risk.All_Risk by _time span=1d 
 `drop_dm_object_name(""All_Risk"")` 
 fit DensityFunction current_count partial_fit=true dist=norm into app:total_risk_1d"
"Sessions - Network Sessions Over Time",,"
 tstats count from datamodel=Network_Sessions.All_Sessions by _time,nodename span=10m 
 search nodename!=All_Sessions nodename!=All_Sessions.Session_* 
 rex field=nodename ""All_Sessions.(?<session_type>.*)"" 
 timechart minspan=10m sum(count) as count by session_type"
"Threat - Risk Correlation By Other - Lookup Gen",,"
 tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk where (All_Risk.risk_object_type!=""user"" AND All_Risk.risk_object_type!=""system"") by All_Risk.risk_object,All_Risk.risk_object_type 
 `drop_dm_object_name(""All_Risk"")` 
 eval risk_object=lower('risk_object'),risk_object_type=lower('risk_object_type') 
 stats sum(risk_score) as risk_score by risk_object,risk_object_type 
 outputlookup risk_correlation_by_other_lookup 
 stats count"
"Threat - Risk Correlation By System - Lookup Gen",,"
 tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk where All_Risk.risk_object_type=""system"" by All_Risk.risk_object 
 eval dest=lower('All_Risk.risk_object') 
 `get_asset(dest)` 
 eval dest=mvdedup(if(isnotnull(dest_asset_id),mvappend(dest,lower(dest_asset)),dest)) 
 stats sum(risk_score) as risk_score by dest 
 rename dest as risk_object 
 outputlookup risk_correlation_by_system_lookup 
 stats count"
"Threat - Risk Correlation By User - Lookup Gen",,"
 tstats summariesonly=false sum(All_Risk.calculated_risk_score) as risk_score from datamodel=Risk.All_Risk where All_Risk.risk_object_type=""user"" by All_Risk.risk_object 
 eval user=lower('All_Risk.risk_object') 
 `get_identity4events(user)` 
 eval risk_object=if(isnotnull(user_identity),lower(user_identity),user),risk_object=mvdedup(risk_object) 
 stats sum(risk_score) as risk_score by risk_object 
 outputlookup risk_correlation_by_user_lookup 
 stats count"
"Threat Activity - Most Active Threat Sources",,"
 tstats count from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_key 
 `drop_dm_object_name(""Threat_Activity"")` 
 `get_threat_attribution(""threat_key"")` 
 stats sum(count) as count by threat_key,source_id,source_path,source_type 
 sort 100 - count"
"Threat Activity - Most Active Threats Collections",,"
 tstats values(source) as search,values(Threat_Activity.threat_collection_key) as threat_collection_key,count from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by _time,Threat_Activity.threat_collection span=1h 
 `drop_dm_object_name(""Threat_Activity"")` 
 stats values(search) as search,sparkline(sum(count),1h) as sparkline,dc(threat_collection_key) as dc(artifacts),sum(count) as count by threat_collection 
 rex max_match=10 field=search ""Threat\s*-\s*(?<friendly_search>.*)(?:\s*-\s*Threat\s+Gen)"" 
 rename friendly_search as search 
 sort - count"
"Threat Activity - Systems Impacted By Multiple Threats",,"
 tstats values(Threat_Activity.src) as src,values(Threat_Activity.dest) as dest,count from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_match_field,Threat_Activity.threat_match_value,Threat_Activity.threat_key 
 `drop_dm_object_name(""Threat_Activity"")` 
 eval src=if(threat_match_field==""src"",null(),src) 
 eval dest=if(threat_match_field==""dest"",null(),dest) 
 eval system=mvappend(src,NULL,dest) 
 stats dc(threat_key) as dc(threat) by system 
 search system!=""...truncated..."" system!=""unknown"" ""dc(threat)"">1 
 sort 100 - dc(threat)"
"Threat Activity - Threat Activity By Threat Category",,"
 tstats count from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_key 
 `drop_dm_object_name(""Threat_Activity"")` 
 `get_threat_attribution(threat_key)` 
 stats sum(count) as count by threat_category 
 sort 10 - count"
"Threat Activity - Threat Activity By Threat Group",,"
 tstats count from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_key 
 `drop_dm_object_name(""Threat_Activity"")` 
 `get_threat_attribution(threat_key)` 
 stats sum(count) as count by threat_group 
 sort 10 - count"
"Threat Activity - Threat Activity Details",,"
 tstats latest(_time) as _time,values(Threat_Activity.orig_sourcetype) as sourcetype,values(Threat_Activity.src) as src,values(Threat_Activity.dest) as dest from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_collection,Threat_Activity.threat_match_field,Threat_Activity.threat_match_value,Threat_Activity.threat_key 
 `drop_dm_object_name(""Threat_Activity"")` 
 `get_threat_attribution(""threat_key"")` 
 `per_panel_filter(""ppf_threat_activity"",""threat_match_field,threat_match_value"")` 
 rename ppf_filter as filter 
 sort - filter,_time 
 table _time,threat_match_field,threat_match_value,filter,sourcetype,src,dest,threat_collection,threat_group,threat_category"
"Threat Activity - Threat Activity Over Time",,"
 tstasts count from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by _time,Threat_Activity.threat_collection span=10m 
 timechart count by Threat_Activity.threat_collection 
 `drop_dm_object_name(""Threat_Activity"")`"
"Threat Activity - Threats Impacting Multiple Systems",,"
 tstats values(Threat_Activity.src) as src,values(Threat_Activity.dest) as dest,count from datamodel=Threat_Intelligence.Threat_Activity where NOT [
 `ppf_subsearch_dm(""ppf_threat_activity"",""threat_match_field,threat_match_value"",now(),""Threat_Activity"")`] by Threat_Activity.threat_match_field,Threat_Activity.threat_match_value,Threat_Activity.threat_key 
 `drop_dm_object_name(""Threat_Activity"")` 
 `get_threat_attribution(threat_key)` 
 eval src=if(threat_match_field==""src"",null(),src) 
 eval dest=if(threat_match_field==""dest"",null(),dest) 
 eval system=mvappend(src,NULL,dest) 
 stats dc(system) by source_path 
 search ""dc(system)"">1 
 sort 100 - dc(system)"
"Traffic - Prohibited Or Insecure Traffic Over Time",,"
 tstats values(All_Traffic.src_category) as src_category,values(All_Traffic.dest_category) as dest_category,count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src,All_Traffic.dest,All_Traffic.transport,All_Traffic.dest_port span=10m 
 `drop_dm_object_name(""All_Traffic"")` 
 `is_traffic_prohibited(dest_port)` 
 search (is_prohibited!=""false"" OR is_secure!=""unknown"") 
 `get_transport_dest_port` 
 timechart minspan=10m sum(count) as count by transport_dest_port"
"Traffic - Prohibited Traffic Details",,"
 tstats max(_time) as _time,values(All_Traffic.src_category) as src_category,values(All_Traffic.dest_category) as dest_category,count from datamodel=Network_Traffic.All_Traffic by All_Traffic.src,All_Traffic.dest,All_Traffic.transport,All_Traffic.dest_port 
 `drop_dm_object_name(""All_Traffic"")` 
 `is_traffic_prohibited(dest_port)` 
 search (is_prohibited!=""false"" OR is_secure!=""unknown"") 
 fields _time,src,src_category,dest,dest_category,transport,dest_port,is_prohibited,is_secure"
"Traffic - Scan Activity By Destination Ports",,"
 tstats dc(All_Traffic.dest_port) as dest_port_count from datamodel=Network_Traffic.All_Traffic by All_Traffic.src 
 `drop_dm_object_name(""All_Traffic"")` 
 sort 10 - dest_port_count"
"Traffic - Scan Activity By Destinations",,"
 tstats dc(All_Traffic.dest) as dest_count from datamodel=Network_Traffic.All_Traffic by All_Traffic.src 
 `drop_dm_object_name(""All_Traffic"")` 
 sort 10 - dest_count"
"Traffic - Top Traffic By Destination",,"
 tstats count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dest span=1h 
 `drop_dm_object_name(""All_Traffic"")` 
 stats sparkline(sum(count),1h) as sparkline,sum(count) as count by dest 
 sort 100 - count"
"Traffic - Top Traffic By Destination Port",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.dest_port 
 chart count over All_Traffic.dest_port by All_Traffic.action 
 `drop_dm_object_name(""All_Traffic"")` 
 `sort_chart`"
"Traffic - Top Traffic By Device",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.dvc 
 chart count over All_Traffic.dvc by All_Traffic.action 
 `drop_dm_object_name(""All_Traffic"")` 
 `sort_chart`"
"Traffic - Top Traffic By Source",,"
 tstats count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src span=1h 
 `drop_dm_object_name(""All_Traffic"")` 
 stats sparkline(sum(count),1h) as sparkline,sum(count) as count by src 
 sort 100 - count"
"Traffic - Top Traffic By Source Port",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.src_port 
 chart count over All_Traffic.src_port by All_Traffic.action 
 `drop_dm_object_name(""All_Traffic"")` 
 `sort_chart`"
"Traffic - Top Traffic By Transport",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by All_Traffic.action,All_Traffic.transport 
 chart count over All_Traffic.transport by All_Traffic.action 
 `drop_dm_object_name(""All_Traffic"")` 
 `sort_chart`"
"Traffic - Traffic Over Time",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time span=10m 
 timechart minspan=10m count"
"Traffic - Traffic Over Time By Action",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.action span=10m 
 timechart minspan=10m count by All_Traffic.action 
 `drop_dm_object_name(""All_Traffic"")`"
"Traffic - Traffic Over Time By Bytes",,"
 tstasts min(All_Traffic.bytes),avg(All_Traffic.bytes),max(All_Traffic.bytes) from datamodel=Network_Traffic.All_Traffic where All_Traffic.bytes>0 by _time span=10m  
 timechart minspan=10m min(All_Traffic.bytes) as min(bytes),avg(All_Traffic.bytes) as avg(bytes),max(All_Traffic.bytes) as max(bytes) 
 eval min(bytes)=round('min(bytes)') 
 eval max(bytes)=round('max(bytes)') 
 eval avg(bytes)=round('avg(bytes)')"
"Traffic - Traffic Over Time By Destination",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dest span=10m 
 timechart minspan=10m useother=`useother` count by All_Traffic.dest 
 `drop_dm_object_name(""All_Traffic"")`"
"Traffic - Traffic Over Time By Destination Port",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dest_port span=10m 
 timechart minspan=10m useother=`useother` count by All_Traffic.dest_port 
 `drop_dm_object_name(""All_Traffic"")`"
"Traffic - Traffic Over Time By Device",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.dvc span=10m 
 timechart minspan=10m useother=`useother` count by All_Traffic.dvc 
 `drop_dm_object_name(""All_Traffic"")`"
"Traffic - Traffic Over Time By Mega-Bytes",,"
 tstasts min(All_Traffic.bytes),avg(All_Traffic.bytes),max(All_Traffic.bytes) from datamodel=Network_Traffic.All_Traffic where All_Traffic.bytes>0 by _time span=10m  
 timechart minspan=10m min(All_Traffic.bytes) as min(bytes),avg(All_Traffic.bytes) as avg(bytes),max(All_Traffic.bytes) as max(bytes) 
 eval min(megabytes)=round('min(bytes)'/1024/1024), max(megabytes)=round('max(bytes)'/1024/1024), avg(megabytes)=round('avg(bytes)'/1024/1024) 
 fields - min(bytes) max(bytes) avg(bytes)"
"Traffic - Traffic Over Time By Source",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src span=10m 
 timechart minspan=10m useother=`useother` count by All_Traffic.src 
 `drop_dm_object_name(""All_Traffic"")`"
"Traffic - Traffic Over Time By Source Port",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.src_port span=10m 
 timechart minspan=10m useother=`useother` count by All_Traffic.src_port 
 `drop_dm_object_name(""All_Traffic"")`"
"Traffic - Traffic Over Time By Transport Protocol",,"
 tstasts count from datamodel=Network_Traffic.All_Traffic by _time,All_Traffic.transport span=10m 
 timechart minspan=10m useother=`useother` count by All_Traffic.transport 
 `drop_dm_object_name(""All_Traffic"")`"
"Traffic - Traffic Size Anomalies",,"
 tstats max(_time) as lastTime,min(All_Traffic.bytes) as min_bytes,avg(All_Traffic.bytes) as mean_bytes,max(All_Traffic.bytes) as max_bytes,dc(All_Traffic.dest) as dc(dest),count from datamodel=Network_Traffic.All_Traffic where [
 from inputlookup:traffic_bytes_tracker 
 search Z=2 
 fields search] by All_Traffic.src 
 `drop_dm_object_name(""All_Traffic"")` 
 appendcols [inputlookup append=T start=0 max=1 traffic_bytes_tracker 
 rename mean_bytes as tracker_mean 
 fields tracker_mean,stdev] 
 filldown tracker_mean,stdev 
 eval Z=round(((mean_bytes-tracker_mean)/stdev),2) 
 `per_panel_filter(""ppf_traffic_size"",""src"")` 
 rename ppf_filter as filter 
 eval bytes=if(min_bytes==mean_bytes AND mean_bytes==max_bytes,floor(min_bytes),""min: "".floor(min_bytes).""
avg: "".floor(mean_bytes).""
max: "".floor(max_bytes)) 
 `makemv(bytes)` 
 sort - filter,Z 
 `uitime(lastTime)` 
 table src,filter,bytes,dc(dest),count,Z,lastTime"
"Traffic - Traffic Size Anomalies Over Time",,"
 tstats count from datamodel=Network_Traffic.All_Traffic where [
 from inputlookup:traffic_bytes_tracker 
 search Z=2 
 fields search] by _time,All_Traffic.src,All_Traffic.transport span=10m 
 `drop_dm_object_name(""All_Traffic"")` 
 `per_panel_filter(""ppf_traffic_size"",""src"")` 
 timechart minspan=10m sum(count) by All_Traffic"
"Updates - Available Updates By System",,"
 tstats latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product 
 `drop_dm_object_name(""Updates"")` 
 search status=available 
 stats count by dest 
 `get_asset(dest)` 
 sort 100 - count 
 fields dest,dest_should_update,count"
"Updates - Systems By Last Update Time",,"
 tstats min(_time) as _time,latest(Updates.dest_should_update) as dest_should_update from datamodel=Updates.Updates where Updates.status=installed by Updates.dest,Updates.signature_id,Updates.vendor_product 
 `drop_dm_object_name(""Updates"")` 
 stats max(_time) as lastTime,latest(dest_should_update) as dest_should_update by dest 
 eval dayDiff=round((now()-lastTime)/86400,1) 
 sort + lastTime 
 `uitime(lastTime)`"
"Updates - Top Systems Needing Updates",,"
 tstats latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product 
 `drop_dm_object_name(""Updates"")` 
 search status=available 
 stats count by dest 
 sort 10 - count"
"Updates - Top Updates Needed",,"
 tstats latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product 
 `drop_dm_object_name(""Updates"")` 
 search status=available 
 stats count by signature_id 
 sort 10 - count"
"Updates - Update Service Start Mode Anomalies",,"
 tstats latest(Services.start_mode) as start_mode,latest(Services.status) as status from datamodel=Endpoint.Services where Services.tag=update by Services.dest,Services.service 
 `drop_dm_object_name(""Services"")` 
 search start_mode!=auto 
 sort 100 + start_mode 
 fields dest,service,start_mode,status"
"Updates - Updates By Status",,"
 tstats latest(Updates.status) as status from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product 
 `drop_dm_object_name(""Updates"")` 
 stats count by status 
 sort - count"
"Vuln - Delinquent Scanning",,"
 tstats min(_time) as firstTime,max(_time) as lastTime from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.dest 
 `drop_dm_object_name(""Vulnerabilities"")` 
 `dayDiff(lastTime)` 
 eval dayDiff=round(dayDiff,1) 
 `uitime(firstTime)` 
 `uitime(lastTime)` 
 sort 100 + lastTime"
"Vuln - Most Vulnerable Hosts",,"
 tstats dc(Vulnerabilities.signature) as vuln_count from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.severity,Vulnerabilities.dest 
 chart useother=`useother` first(vuln_count) over Vulnerabilities.dest by Vulnerabilities.severity 
 `drop_dm_object_name(""Vulnerabilities"")` 
 eval total=case(critical>0 AND high>0,critical+high,critical>0,critical,high>0,high,1==1,0) 
 eval subTotal=case(medium>0 AND low>0,medium+low,medium>0,medium,low>0,low,1==1,0) 
 eval subSubTotal=case(informational>0 AND unknown>0,informational+unknown,informational>0,informational,unknown>0,unknown,1==1,0) 
 sort 10 - total,subTotal,subSubTotal 
 fields - total,subTotal,subSubTotal"
"Vuln - Scan Activity Over Time",,"
 tstasts dc(Vulnerabilities.dest) from datamodel=Vulnerabilities.Vulnerabilities by _time span=1d 
 timechart minspan=1d dc(Vulnerabilities.dest) as ""dc(dest)"""
"Vuln - Top Vulnerabilities",,"
 tstats dc(Vulnerabilities.dest) as dest_count from datamodel=Vulnerabilities.Vulnerabilities where * `cim_filter_vuln_severity(""Vulnerabilities"")` by Vulnerabilities.signature 
 `drop_dm_object_name(""Vulnerabilities"")` 
 sort 10 - dest_count"
"Vuln - Vulnerabilities By Category",,"
 tstats dc(Vulnerabilities.signature) as vuln_count from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.category,Vulnerabilities.dest 
 `drop_dm_object_name(""Vulnerabilities"")` 
 stats sum(vuln_count) as count by category"
"Vuln - Vulnerabilities By Severity",,"
 tstats dc(Vulnerabilities.signature) as vuln_count from datamodel=Vulnerabilities.Vulnerabilities by Vulnerabilities.severity,Vulnerabilities.dest 
 `drop_dm_object_name(""Vulnerabilities"")` 
 stats sum(vuln_count) as count by severity"
"Web - Abnormally High Number of HTTP Method Events By Src - Rule","Alerts when a host has an abnormally high number of HTTP requests by http method.","
 tstats count as web_event_count from datamodel=Web.Web by Web.src, Web.http_method 
 `drop_dm_object_name(""Web"")` 
 `mltk_apply_upper(""app:count_by_http_method_by_src_1d"", ""extreme"", ""web_event_count"")`"
"Web - Events Over Time By Action",,"
 tstasts count from datamodel=Web.Web by _time,Web.action span=10m 
 timechart minspan=10m useother=`useother` count by Web.action 
 `drop_dm_object_name(""Web"")`"
"Web - Events Over Time By Content Type",,"
 tstasts count from datamodel=Web.Web by _time,Web.http_content_type span=10m 
 timechart minspan=10m useother=`useother` count by Web.http_content_type 
 `drop_dm_object_name(""Web"")`"
"Web - Events Over Time By Method",,"
 tstasts count from datamodel=Web.Web by _time,Web.http_method span=10m 
 timechart minspan=10m useother=`useother` count by Web.http_method 
 `drop_dm_object_name(""Web"")`"
"Web - Events Over Time By Status",,"
 tstasts count from datamodel=Web.Web by _time,Web.status span=10m 
 timechart minspan=10m useother=`useother` count by Web.status 
 `drop_dm_object_name(""Web"")`"
"Web - Events Over Time By User Agent",,"
 tstasts count from datamodel=Web.Web by _time,Web.http_user_agent span=10m 
 timechart minspan=10m useother=`useother` count by Web.http_user_agent 
 `drop_dm_object_name(""Web"")`"
"Web - HTTP Category Details",,"
 tstats max(_time) as lastTime,dc(Web.src) as dc(src),dc(Web.dest) as dc(dest),count from datamodel=Web.Web by Web.category 
 `drop_dm_object_name(""Web"")` 
 join type=outer category [
 tstats count from datamodel=Web.Web where earliest=-24h@h latest=+0s by _time,Web.category span=`http_category_sparkline_span` 
 stats sparkline(sum(count),`http_category_sparkline_span`) as sparkline by Web.category 
 `drop_dm_object_name(""Web"")`] 
 `makemv(sparkline,"","")` 
 eventstats avg(count) as mean_count,stdev(count) as stdev 
 `get_stdev_index(count)` 
 `round(Z)` 
 `per_panel_filter(""ppf_http_category"",""category"")` 
 rename ppf_filter as filter 
 sort -filter,+count 
 `uitime(lastTime)` 
 table category,filter,sparkline,dc(src),dc(dest),count,Z,lastTime"
"Web - HTTP Category Distribution",,"
 tstats dc(Web.src) as dc(src),count from datamodel=Web.Web by Web.category 
 eval category='Web.category' 
 `per_panel_filter(""ppf_http_category"",""category"")` 
 table category,count,dc(src)"
"Web - Top Destinations",,"
 tstats dc(Web.src) as dc(src),dc(Web.url) as dc(url),count,sum(Web.bytes) as bytes from datamodel=Web.Web by Web.dest 
 `drop_dm_object_name(""Web"")` 
 sort 100 - bytes"
"Web - Top Sources",,"
 tstats dc(Web.dest) as dc(dest),dc(Web.url) as dc(url),count,sum(Web.bytes) as bytes from datamodel=Web.Web by Web.src 
 `drop_dm_object_name(""Web"")` 
 sort 100 - bytes"
"Web - Total Events By Action",,"
 tstats count from datamodel=Web.Web by Web.action 
 `drop_dm_object_name(""Web"")` 
 sort 10 - count"
"Web - Total Events By Content Type",,"
 tstats count from datamodel=Web.Web by Web.http_content_type 
 `drop_dm_object_name(""Web"")` 
 sort 10 - count"
"Web - Total Events By Method",,"
 tstats count from datamodel=Web.Web by Web.http_method 
 `drop_dm_object_name(""Web"")` 
 sort 10 - count"
"Web - Total Events By Status",,"
 tstats count from datamodel=Web.Web by Web.status 
 `drop_dm_object_name(""Web"")` 
 sort 10 - count"
"Web - Total Events By User Agent",,"
 tstats count from datamodel=Web.Web by Web.http_user_agent 
 `drop_dm_object_name(""Web"")` 
 sort 10 - count"
"Web - URL Length Anomalies",,"
 tstats max(_time) as lastTime,latest(Web.url_length) as length,dc(Web.src) as dc(src),dc(Web.dest) as dc(dest),count from datamodel=Web.Web where Web.url!=""unknown"" [
 from inputlookup:url_length_tracker 
 search Z=2 
 fields search] by Web.url 
 `drop_dm_object_name(""Web"")` 
 appendcols[
 inputlookup append=T start=0 max=1 url_length_tracker 
 fields mean_length,stdev] 
 filldown mean_length,stdev 
 `get_stdev_index(length)` 
 `round(Z)`
 `per_panel_filter(""ppf_url_length"",""url"")` 
 rename ppf_filter as filter 
 sort - filter,Z 
 `uitime(lastTime)` 
 table url,filter,length,dc(src),dc(dest),count,Z,lastTime"
"Web - URL Length Anomalies Over Time",,"
 tstats latest(Web.http_method) as http_method,count from datamodel=Web.Web where Web.url!=""unknown"" [
 from inputlookup:url_length_tracker 
 search Z=2 
 fields search] by _time,Web.url span=10m 
 `drop_dm_object_name(""Web"")` 
 `per_panel_filter(""ppf_url_length"",""url"")` 
 timechart minspan=10m sum(count) as count by http_method"
"Web - URL Length Over Time",,"
 tstasts min(Web.url_length),avg(Web.url_length),max(Web.url_length) from datamodel=Web.Web by _time span=10m 
 timechart minspan=10m min(Web.url_length) as min(length),avg(Web.url_length) as avg(length),max(Web.url_length) as max(length)"
"Web - User Agent Details",,"
 tstats max(_time) as lastTime,dc(Web.src) as dc(src),dc(Web.dest) as dc(dest),latest(Web.http_user_agent_length) as length,count from datamodel=Web.Web where Web.http_user_agent!=unknown by Web.http_user_agent 
 `drop_dm_object_name(""Web"")` 
 join type=outer http_user_agent [
 tstats count from datamodel=Web.Web where earliest=-24h@h latest=+0s Web.http_user_agent!=unknown by _time,Web.http_user_agent span=`http_user_agent_sparkline_span` 
 stats sparkline(sum(count),`http_user_agent_sparkline_span`) as sparkline by Web.http_user_agent 
 `drop_dm_object_name(""Web"")`] 
 `makemv(sparkline,"","")` 
 appendcols[
 inputlookup append=T start=0 max=1 user_agent_length_tracker 
 fields mean_length,stdev] 
 filldown mean_length,stdev 
 `get_stdev_index(length)` 
 `round(Z)` 
 `per_panel_filter(""ppf_http_user_agent"",""http_user_agent"")` 
 rename ppf_filter as filter 
 sort - filter,Z 
 `uitime(lastTime)` 
 table http_user_agent,filter,sparkline,length,dc(src),dc(dest),count,Z,lastTime"
"Web - User Agent Distribution",,"
 tstats latest(Web.http_user_agent_length) as length,count from datamodel=Web.Web where Web.http_user_agent!=unknown by Web.http_user_agent 
 eval http_user_agent='Web.http_user_agent' 
 `per_panel_filter(""ppf_http_user_agent"",""http_user_agent"")` 
 table http_user_agent,length,count"
"Web - User Agent Minimum Length",,"
 tstats min(Web.http_user_agent_length) as current_length from datamodel=Web.Web where earliest=-24h@h latest=+0s Web.http_user_agent!=unknown 
 appendcols [
 tstats min(Web.http_user_agent_length) as historical_length from datamodel=Web.Web where earliest=-48h@h latest=-24h@h Web.http_user_agent!=unknown] 
 `get_delta(current_length,historical_length)`"
"Web - Web Event Count By Src By HTTP Method Per 1d - Model Gen",,"
 tstats count as web_event_count from datamodel=Web.Web by Web.src, Web.http_method, _time span=24h 
 `drop_dm_object_name(""Web"")` 
 where match(http_method, ""^[A-Za-z]+$"") 
 fit DensityFunction web_event_count by http_method partial_fit=true dist=norm into app:count_by_http_method_by_src_1d"
"Whois - New Domain Activity",,"
 tstats max(_time) as _time,count from datamodel=Web.Web by Web.dest 
 `drop_dm_object_name(""Web"")` 
 `get_whois` 
 search (created=* NOT created=""unknown"") 
 eval ""Age (days)""=ceil((now()-created)/86400) 
 where 'Age (days)'<=30 
 eval domain=if(isnull(domain), dest, domain) 
 `swap_resolved_domain(domain)` 
 `per_panel_filter(""ppf_new_domains"",""domain"")` 
 rename ppf_filter as filter 
 eval resolved_domain=if(isnull(resolved_domain) OR resolved_domain==""unknown"",null(),resolved_domain) 
 sort - filter,_time 
 `uitime(created)` 
 fields _time,dest,resolved_domain,filter,created,""Age (days)"",count"
"Whois - New Domain Activity By Age",,"
 tstats count from datamodel=Web.Web by Web.dest 
 `drop_dm_object_name(""Web"")` 
 `get_whois` 
 search (created=* NOT created=""unknown"") 
 eval age=ceil((now()-created)/86400) 
 where age<=30 
 eval domain=if(isnull(domain), dest, domain) 
 `swap_resolved_domain(domain)` 
 `per_panel_filter(""ppf_new_domains"",""domain"")` 
 stats sum(count) as count by age 
 eval ""Age (days)""=age 
 table ""Age (days)"",count"
"Whois - New Domain Activity By TLD",,"
 tstats count from datamodel=Web.Web by Web.dest 
 `drop_dm_object_name(""Web"")` 
 `get_whois` 
 search (created=* NOT created=""unknown"") 
 eval age=ceil((now()-created)/86400) 
 where age<=30 
 eval domain=if(isnull(domain), dest, domain) 
 `swap_resolved_domain(domain)` 
 `per_panel_filter(""ppf_new_domains"",""domain"")` 
 `get_tld(domain)` 
 stats sum(count) as count by tld 
 sort 10 - count"
