
[oi_user]
definition = "admin1"

[oi_pass]
definition = "Guille1$89e3Yfgoo"
iseval = 0

[oi_host]
definition = "localhost"
iseval = 0

[process_result]
definition = eval status=case(curl_status=="408","No connection could be made because the target machine actively refused it",isnull(splquery),"Could not understand: ".data,type=="error","Could not understand: ".data,others!="",others,isnull(status),"OK",status=="","OK",1=1,status),stats_op=case(isnull(stats_op),"-",stats_op=="","-",1=1,stats_op), \
by=case(isnull(by),"eventRoot",by=="","eventRoot",1=1,by), caveats=if(match(splquery,"\sdatamodel[\s\=]"),"Results would be faster if Model ".event." is accelerated",""),len=len(splquery),"Refine Query"=if(len>0,"CLICK HERE",""), "Visualise Query"=if(len>0,"CLICK HERE",""),entity=if(entity=="","eventRoot",entity),visualisePage=if(stats_op=="-","visualise_search","visualise_stats"),normalsplquery=replace(splquery,"\"","___")  | fillnull value="" adjective entity adverb event | eval lookup=if(event=="","yes","no")

[process_old_search]
definition = search index=_audit app="openintelligence_nli_app", provenance="UI:Dashboard:*", mode="historical" "eval m111=111" NOT "8765=6789" NOT "$row"  | eval search=ltrim(search,"'"), search=rtrim(search,"'"),search1=split(search,"| eval m111=111,"), splquery=mvindex(search1,0), search1=mvindex(search1,1),search1="{ ".search1."}", search1=replace(search1,"=",":") |  spath input=search1 | eval entity=if(entity=="","eventRoot",entity),visualisePage=if(stats_op=="-","visualise_search","visualise_stats"),normalsplquery=replace(splquery,"\"","___") | eval lookup=if(event=="","yes","no")

[sync_full_cached_event]
definition = | `meta_query("eventFull()")` \
|  eval result=split(result,"#"),entity=mvindex(result,0), event=mvindex(result,1),splunkObject=mvindex(result,2), type=mvindex(result,3),search=mvindex(result,4)\
| table entity, event, splunkObject, type, search
iseval = 0

[sync_accounts]
definition = (index=* OR index=_*) | dedup src | eval name=src | table src, host, tag, vendor_product, app | append [ | search (index=* OR index=_*) | dedup dest | eval name=dest | table name, host, tag, vendor_product, app ] | dedup name | eval scope=if(vendor_product="Microsoft Windows","local","app"), risk="unknown", type="unknown" | table name, risk, type, scope
iseval = 0

[sync_devices]
definition = (index=* OR index=_*) | dedup process_name | table process_name, tag, vendor_product | eval name=process_name | dedup name | eval scope=if(vendor_product="Microsoft Windows","local","app"), risk="unknown", type="unknown" | table name, risk, type, scope
iseval = 0

[sync_processes]
definition = (index=* OR index=_*) | dedup process_name | eval name=process_name, scope="unknown", risk="unknown", type="unknown" | table name, risk, type, scope
iseval = 0




