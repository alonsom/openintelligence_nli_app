
[oi_host]
definition = "localhost"

[oi_user]
definition = "admin1"

[query_one_entity(2)]
definition = `format_query_one_entity("$adjective$","$entity$")` \
| map search=" | `compile_query($NLquery$)` | eval NLquery=$NLquery$ "
args = adjective, entity
disabled = 1

[query_no_repeat(10)]
definition = `format_query_no_repeat("$adjective$","$entity$","$adverb$","$event$","$and_nl$","$adjective1$","$entity1$","$adverb1$","$event1$","$before_tk$")`\
| map search=" | `compile_query($NLquery$)` | eval NLquery=$NLquery$ "
args = adjective, entity, adverb, relationEntity, and_nl, adjective1, entity1, adverb1, relationEntity1, before_tk
disabled = 1

[query_repeat(10)]
definition = `format_query_repeat("$adjective$","$entity$","$adverb$","$event$","$and_nl$","$adjective1$","$entity1$","$adverb1$","$event1$","$before_tk$")`\
| map search=" | `compile_query($NLquery$)` | eval NLquery=$NLquery$ "
args = adjective, entity, adverb, relationEntity, and_nl, adjective1, entity1, adverb1, relationEntity1, before_tk
disabled = 1

[query_one_event_stats(6)]
definition = `format_query_one_event_stats("$adjective$","$entity$","$adverb$","$event$","$stats_op$","$by$")` \
| map search=" | `compile_query($NLquery$)` | eval NLquery=$NLquery$ "
args = adjective, entity, adverb, event,stats_op,by
disabled = 1

[clean1(4)]
args = adjective1,entity1,adverb1,event1
definition = eval adjective1="$adjective1$",\
     adjective1=replace(adjective1,"any,","the associated "), \
     adjective1=replace(adjective1,"any","the associated "), \
     adjective1=replace(adjective1,",any",""), \
     adjective1=replace(adjective1,"all","known"), \
     adjective1=replace(adjective1,"all,","known,"),\
     adjective1=replace(adjective1,",all",",known"),\
     entity1="$entity1$",\
     adverb1="$adverb1$",\
     adverb1=replace(adverb1,"any,",""),\
     adverb1=replace(adverb1,"any ,",""), \
     adverb1=replace(adverb1,"any",""),\
     event1="$event1$",\
     event1=replace(event1," event","")
disabled = 1

[clean(2)]
args = adjective,entity
definition = makeresults | \
eval adjective="$adjective$",\
     adjective=replace(adjective,"any,",""), \
     adjective=replace(adjective,",any",""), \
     adjective=replace(adjective,"all",""), \
     adjective=replace(adjective,"all,",""),\
     adjective=replace(adjective,",all",""),\
     entity="$entity$"
disabled = 1

[clean(4)]
args = adjective,entity,adverb,event
definition = makeresults |\
eval adjective="$adjective$",\
     adjective=replace(adjective,"any,",""), \
     adjective=replace(adjective,",any",""), \
     adjective=replace(adjective,"all","known"), \
     adjective=replace(adjective,"all,","known,"),\
     adjective=replace(adjective,",all",",known"),\
     entity="$entity$",\
     adverb="$adverb$",\
     adverb=replace(adverb,"any,",""),\
     adverb=replace(adverb,"any ,",""), \
     adverb=replace(adverb,"any",""),\
     event="$event$",\
     relationEntity=replace(relationEntity," event","")
disabled = 1

[format_query_one_event(4)]
args = adjective, entity, adverb, event
definition = `clean("$adjective$","$entity$","$adverb$","$event$")`\
| eval NLquery=adjective." ".entity." with ".adverb." ".event." event", NLquery=replace(NLquery,"any event with ","")
disabled = 1

[format_query_one_entity(2)]
args = adjective, entity
definition = `clean("$adjective$","$entity$")` | eval NLquery=if(adjective=="any","any ".entity,"known ".adjective." ".entity)
iseval = 0
disabled = 1

[query_one_event(4)]
args = adjective, entity, adverb, relationEntity
definition = `format_query_one_event("$adjective$","$entity$","$adverb$","$relationEntity$")`\
| map search=" | `compile_query($NLquery$)` | eval NLquery=$NLquery$ "
disabled = 1

[format_query_no_repeat(10)]
args = adjective, entity, adverb, relationEntity, and_nl, adjective1, entity1, adverb1, relationEntity1, before_tk
definition = `clean("$adjective$","$entity$","$adverb$","$relationEntity$")`\\
| `clean1("$adjective1$","$entity1$","$adverb1$","$relationEntity1$")`\\
| eval and_nl="$and_nl$",\\
       NLquery=adjective." ".entity." with ".adverb." ".relationEntity." event ".and_nl." ".adjective1." ".entity1." had a ".adverb1." ".relationEntity1." event", NLquery=replace(NLquery,"any event with ","")
iseval = 0
disabled = 1

[format_query_one_event_stats(6)]
args = adjective, entity, adverb, event,stats_op,by
definition = `format_query_one_event("$adjective$","$entity$","$adverb$","$relationEntity$")` \\
| eval NLquery="$stats_op$ ".NLquery." by $by$"
iseval = 0
disabled = 1

[format_query_repeat(10)]
args = adjective, entity, adverb, relationEntity, and_nl, adjective1, entity1, adverb1, relationEntity1, before_tk
definition = `clean("$adjective$","$entity$","$adverb$","$relationEntity$")`\\
| `clean1("$adjective1$","$entity1$","$adverb1$","$relationEntity1$")`\\
| eval and_nl="$and_nl$",\\
       NLquery=adjective." ".entity." with ".adverb." ".relationEntity." event ".and_nl." ".adjective1." ".entity1." together with this ".entity." had ".adverb1." ".relationEntity1." event", NLquery=replace(NLquery,"any event with ","")
iseval = 0
disabled = 1

[process_query(1)]
args = intent
definition = makeresults | `rest_query("$intent$","nat1")`  | `process_result`
iseval = 0

[process_query(5)]
args = query,and,query1,stats_op,by
definition = `compile_query("$query$","$and$","$query1$","$stats_op$","$by$")` | `process_result`
iseval = 0

[compile_query(5)]
args = query,and,query1,stats_op,by
definition = `format_query("$query$","$and$","$query1$","$stats_op$","$by$")` | map search="| makeresults | `rest_query(\"$intent$\",\"nat1\")`"
iseval = 0

[rest_query(2)]
definition = eval user=`oi_user`,pass=`oi_pass`,host=`oi_host`,port=`oi_port`,uri="https://".host.":".port."/rest/$query_type$", meta_query="$query$" | eval result=splquery\
| map search="|  makeresults | `meta_query("$uri$","$user$","$pass$","$meta_query$")` | fields - _time " | spath input=curl_message path=result{} \
|  rename "result{}" as result\
|  mvexpand result\
|  spath input=result \
|  rename result.* AS *

[format_query(5)]
args = query,and,query1,stats_op,by
definition = makeresults | eval and=case(isnull("$and$"),"","$and$"=="-","",1=1,"$and$"), stats_op=case(isnull("$stats_op$"),"","$stats_op$"=="-","",1=1,"$stats_op$"), \
by=case(isnull("$by$"),"","$by$"=="-","",1=1,"$by$"), \
intent=if(and=="","$query$","$query$ ".and." $query1$"), intent=case(stats_op=="",intent,by==""," ".stats_op." ".intent,1=1," ".stats_op." ".intent." by $by$")
iseval = 0

[process_result]
definition = eval status=case(curl_status=="408","No connection could be made because the target machine actively refused it",isnull(splquery),"Could not understand: ".data,type=="error","Could not understand: ".data,others!="",others,isnull(status),"OK",status=="","OK",1=1,status),stats_op=case(isnull(stats_op),"-",stats_op=="","-",1=1,stats_op), \
by=case(isnull(by),"eventRoot",by=="","eventRoot",1=1,by), caveats=if(match(splquery,"summariesonly"),"Results maybe incorrect if Model ".event." has not been accelerated",""),len=len(splquery),"Refine Query"=if(len>0,"CLICK HERE",""), "Visualise Query"=if(len>0,"CLICK HERE","")
iseval = 0

[curl_meta_query(3)]
definition = eval header="{\"content-type\":\"application/json\"}", data="{\"query\":\"$query$\"}" | curl method=get uri="$uri$" user="$user$" pass="$pass$"  debug=true headerfield=header datafield=data
disabled = 1

[oi_pass]
definition = "Guille1$89e3Yfgoo"
iseval = 0

[meta_query(4)]
args = uri, user, pass, query
definition = eval header="{\"content-type\":\"application/json\"}", data="{\"query\":\"$query$\"}" | curl method=get uri="$uri$" user="$user$" pass="$pass$"  debug=true headerfield=header datafield=data
iseval = 0
disabled = 0

[oi_port]
definition = "10000"

[check_rest_api]
definition = makeresults | appendcols [ | `meta_query("version()")` | head 1 | fields result ] | eval user=`oi_user`, host=`oi_host`, port=`oi_port`, msg="Using user \"".user."\" for Rest API server \"".host.":".port."\" version ".result, msg=if(result=="","Rest API server \"".host."\" not responding/missing.",msg), msg=if(user=="","Rest API user missing. Remember to update passwords.conf as well.",msg), msg=if(host=="","Rest API host missing. Remember to check if oi_port is correct as well.",msg)

[compile_query(1)]
disabled = 1

[process_old_search]
definition = index=_audit app="openintelligence_nli_app", provenance="UI:Dashboard:nl", mode="historical" "eval m111=111" info=completed NOT "8765=6789" NOT "$row"  | eval search=ltrim(search,"'"), search=rtrim(search,"'"),search1=split(search,"| eval m111=111,"), splquery=mvindex(search1,0), search2=mvindex(search1,1), search2=replace(search2,"\"",""), search2=replace(search2,"'",""),search2=split(search2,","),\
intent=mvindex(search2,0),intent=replace(intent,"intent=",""),\
adjective=mvindex(search2,1),adjective=replace(adjective,"adjective=",""),\
entity=mvindex(search2,2),entity=replace(entity,"entity=",""),\
adverb=mvindex(search2,3),adverb=replace(adverb,"adverb=",""),\
event=mvindex(search2,4),event=replace(event,"event=",""),\
stats_op=mvindex(search2,5),stats_op=replace(stats_op,"stats_op=",""),\
by=mvindex(search2,6), by=replace(by,"by=","")
iseval = 0

[sync_cached_event]
definition = `meta_query("eventFull()")` \
|  eval result=split(result,"#"),entity=mvindex(result,0), event=mvindex(result,1) \
| table entity, event

[sync_cached_entity]
definition = `meta_query("entityFull()")` | eval result=split(result,"#"),entity=mvindex(result,0), type=mvindex(result,1), mapping=mvindex(result,2) | fields entity, type, mapping

